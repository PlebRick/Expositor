{"version":3,"file":"index-DvVrBvMa.js","sources":["../../src/utils/dom.ts","../../__vite-browser-external","../../node_modules/kind-of/index.js","../../node_modules/is-extendable/index.js","../../node_modules/extend-shallow/index.js","../../node_modules/section-matter/index.js","../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/common.js","../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/exception.js","../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/mark.js","../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type.js","../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/schema.js","../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type/str.js","../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type/seq.js","../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type/map.js","../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/schema/failsafe.js","../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type/null.js","../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type/bool.js","../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type/int.js","../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type/float.js","../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/schema/json.js","../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/schema/core.js","../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type/timestamp.js","../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type/merge.js","../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type/binary.js","../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type/omap.js","../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type/pairs.js","../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type/set.js","../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/schema/default_safe.js","../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type/js/undefined.js","../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type/js/regexp.js","../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/type/js/function.js","../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/schema/default_full.js","../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/loader.js","../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml/dumper.js","../../node_modules/gray-matter/node_modules/js-yaml/lib/js-yaml.js","../../node_modules/gray-matter/node_modules/js-yaml/index.js","../../node_modules/gray-matter/lib/engines.js","../../node_modules/strip-bom-string/index.js","../../node_modules/gray-matter/lib/utils.js","../../node_modules/gray-matter/lib/defaults.js","../../node_modules/gray-matter/lib/engine.js","../../node_modules/gray-matter/lib/stringify.js","../../node_modules/gray-matter/lib/excerpt.js","../../node_modules/gray-matter/lib/to-file.js","../../node_modules/gray-matter/lib/parse.js","../../node_modules/gray-matter/index.js","../../src/utils/markdown.ts","../../src/storage/fs.ts","../../node_modules/idb/build/index.js","../../src/storage/idb.ts","../../src/storage/index.ts","../../src/layout.ts","../../src/esvApi.ts","../../src/store.ts","../../src/renderers/chapter.ts","../../src/sidebar.ts","../../src/renderers/outline.ts","../../node_modules/mdurl/lib/decode.mjs","../../node_modules/mdurl/lib/encode.mjs","../../node_modules/mdurl/lib/format.mjs","../../node_modules/mdurl/lib/parse.mjs","../../node_modules/uc.micro/properties/Any/regex.mjs","../../node_modules/uc.micro/categories/Cc/regex.mjs","../../node_modules/uc.micro/categories/Cf/regex.mjs","../../node_modules/uc.micro/categories/P/regex.mjs","../../node_modules/uc.micro/categories/S/regex.mjs","../../node_modules/uc.micro/categories/Z/regex.mjs","../../node_modules/entities/lib/esm/generated/decode-data-html.js","../../node_modules/entities/lib/esm/generated/decode-data-xml.js","../../node_modules/entities/lib/esm/decode_codepoint.js","../../node_modules/entities/lib/esm/decode.js","../../node_modules/markdown-it/lib/common/utils.mjs","../../node_modules/markdown-it/lib/helpers/parse_link_label.mjs","../../node_modules/markdown-it/lib/helpers/parse_link_destination.mjs","../../node_modules/markdown-it/lib/helpers/parse_link_title.mjs","../../node_modules/markdown-it/lib/renderer.mjs","../../node_modules/markdown-it/lib/ruler.mjs","../../node_modules/markdown-it/lib/token.mjs","../../node_modules/markdown-it/lib/rules_core/state_core.mjs","../../node_modules/markdown-it/lib/rules_core/normalize.mjs","../../node_modules/markdown-it/lib/rules_core/block.mjs","../../node_modules/markdown-it/lib/rules_core/inline.mjs","../../node_modules/markdown-it/lib/rules_core/linkify.mjs","../../node_modules/markdown-it/lib/rules_core/replacements.mjs","../../node_modules/markdown-it/lib/rules_core/smartquotes.mjs","../../node_modules/markdown-it/lib/rules_core/text_join.mjs","../../node_modules/markdown-it/lib/parser_core.mjs","../../node_modules/markdown-it/lib/rules_block/state_block.mjs","../../node_modules/markdown-it/lib/rules_block/table.mjs","../../node_modules/markdown-it/lib/rules_block/code.mjs","../../node_modules/markdown-it/lib/rules_block/fence.mjs","../../node_modules/markdown-it/lib/rules_block/blockquote.mjs","../../node_modules/markdown-it/lib/rules_block/hr.mjs","../../node_modules/markdown-it/lib/rules_block/list.mjs","../../node_modules/markdown-it/lib/rules_block/reference.mjs","../../node_modules/markdown-it/lib/common/html_blocks.mjs","../../node_modules/markdown-it/lib/common/html_re.mjs","../../node_modules/markdown-it/lib/rules_block/html_block.mjs","../../node_modules/markdown-it/lib/rules_block/heading.mjs","../../node_modules/markdown-it/lib/rules_block/lheading.mjs","../../node_modules/markdown-it/lib/rules_block/paragraph.mjs","../../node_modules/markdown-it/lib/parser_block.mjs","../../node_modules/markdown-it/lib/rules_inline/state_inline.mjs","../../node_modules/markdown-it/lib/rules_inline/text.mjs","../../node_modules/markdown-it/lib/rules_inline/linkify.mjs","../../node_modules/markdown-it/lib/rules_inline/newline.mjs","../../node_modules/markdown-it/lib/rules_inline/escape.mjs","../../node_modules/markdown-it/lib/rules_inline/backticks.mjs","../../node_modules/markdown-it/lib/rules_inline/strikethrough.mjs","../../node_modules/markdown-it/lib/rules_inline/emphasis.mjs","../../node_modules/markdown-it/lib/rules_inline/link.mjs","../../node_modules/markdown-it/lib/rules_inline/image.mjs","../../node_modules/markdown-it/lib/rules_inline/autolink.mjs","../../node_modules/markdown-it/lib/rules_inline/html_inline.mjs","../../node_modules/markdown-it/lib/rules_inline/entity.mjs","../../node_modules/markdown-it/lib/rules_inline/balance_pairs.mjs","../../node_modules/markdown-it/lib/rules_inline/fragments_join.mjs","../../node_modules/markdown-it/lib/parser_inline.mjs","../../node_modules/linkify-it/lib/re.mjs","../../node_modules/linkify-it/index.mjs","../../node_modules/punycode.js/punycode.es6.js","../../node_modules/markdown-it/lib/presets/default.mjs","../../node_modules/markdown-it/lib/presets/zero.mjs","../../node_modules/markdown-it/lib/presets/commonmark.mjs","../../node_modules/markdown-it/lib/index.mjs","../../src/renderers/manuscript.ts","../../src/renderers/commentary.ts","../../src/drawer.ts","../../src/utils/toast.ts","../../src/importExport.ts","../../src/index.ts"],"sourcesContent":["/* src/utils/dom.ts\n * Tiny DOM helpers shared across modules.\n */\n\nexport const $ = (id: string): HTMLElement =>\n  document.getElementById(id)!;\n\n/* legacy alias so old code that called id('foo') keeps working */\nexport const id = $;\n\n/** create a <button> with classes and click handler */\nexport function button(\n  text: string,\n  className: string,\n  onClick: () => void\n) {\n  const btn = document.createElement('button');\n  btn.type = 'button';\n  btn.textContent = text;\n  btn.className = className;\n  btn.addEventListener('click', onClick);\n  return btn;\n}\n","export default {}","var toString = Object.prototype.toString;\n\nmodule.exports = function kindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n\n  var type = typeof val;\n  if (type === 'boolean') return 'boolean';\n  if (type === 'string') return 'string';\n  if (type === 'number') return 'number';\n  if (type === 'symbol') return 'symbol';\n  if (type === 'function') {\n    return isGeneratorFn(val) ? 'generatorfunction' : 'function';\n  }\n\n  if (isArray(val)) return 'array';\n  if (isBuffer(val)) return 'buffer';\n  if (isArguments(val)) return 'arguments';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  if (isRegexp(val)) return 'regexp';\n\n  switch (ctorName(val)) {\n    case 'Symbol': return 'symbol';\n    case 'Promise': return 'promise';\n\n    // Set, Map, WeakSet, WeakMap\n    case 'WeakMap': return 'weakmap';\n    case 'WeakSet': return 'weakset';\n    case 'Map': return 'map';\n    case 'Set': return 'set';\n\n    // 8-bit typed arrays\n    case 'Int8Array': return 'int8array';\n    case 'Uint8Array': return 'uint8array';\n    case 'Uint8ClampedArray': return 'uint8clampedarray';\n\n    // 16-bit typed arrays\n    case 'Int16Array': return 'int16array';\n    case 'Uint16Array': return 'uint16array';\n\n    // 32-bit typed arrays\n    case 'Int32Array': return 'int32array';\n    case 'Uint32Array': return 'uint32array';\n    case 'Float32Array': return 'float32array';\n    case 'Float64Array': return 'float64array';\n  }\n\n  if (isGeneratorObj(val)) {\n    return 'generator';\n  }\n\n  // Non-plain objects\n  type = toString.call(val);\n  switch (type) {\n    case '[object Object]': return 'object';\n    // iterators\n    case '[object Map Iterator]': return 'mapiterator';\n    case '[object Set Iterator]': return 'setiterator';\n    case '[object String Iterator]': return 'stringiterator';\n    case '[object Array Iterator]': return 'arrayiterator';\n  }\n\n  // other\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n};\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isArray(val) {\n  if (Array.isArray) return Array.isArray(val);\n  return val instanceof Array;\n}\n\nfunction isError(val) {\n  return val instanceof Error || (typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number');\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function'\n    && typeof val.getDate === 'function'\n    && typeof val.setDate === 'function';\n}\n\nfunction isRegexp(val) {\n  if (val instanceof RegExp) return true;\n  return typeof val.flags === 'string'\n    && typeof val.ignoreCase === 'boolean'\n    && typeof val.multiline === 'boolean'\n    && typeof val.global === 'boolean';\n}\n\nfunction isGeneratorFn(name, val) {\n  return ctorName(name) === 'GeneratorFunction';\n}\n\nfunction isGeneratorObj(val) {\n  return typeof val.throw === 'function'\n    && typeof val.return === 'function'\n    && typeof val.next === 'function';\n}\n\nfunction isArguments(val) {\n  try {\n    if (typeof val.length === 'number' && typeof val.callee === 'function') {\n      return true;\n    }\n  } catch (err) {\n    if (err.message.indexOf('callee') !== -1) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * If you need to support Safari 5-7 (8-10 yr-old browser),\n * take a look at https://github.com/feross/is-buffer\n */\n\nfunction isBuffer(val) {\n  if (val.constructor && typeof val.constructor.isBuffer === 'function') {\n    return val.constructor.isBuffer(val);\n  }\n  return false;\n}\n","/*!\n * is-extendable <https://github.com/jonschlinkert/is-extendable>\n *\n * Copyright (c) 2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isExtendable(val) {\n  return typeof val !== 'undefined' && val !== null\n    && (typeof val === 'object' || typeof val === 'function');\n};\n","'use strict';\n\nvar isObject = require('is-extendable');\n\nmodule.exports = function extend(o/*, objects*/) {\n  if (!isObject(o)) { o = {}; }\n\n  var len = arguments.length;\n  for (var i = 1; i < len; i++) {\n    var obj = arguments[i];\n\n    if (isObject(obj)) {\n      assign(o, obj);\n    }\n  }\n  return o;\n};\n\nfunction assign(a, b) {\n  for (var key in b) {\n    if (hasOwn(b, key)) {\n      a[key] = b[key];\n    }\n  }\n}\n\n/**\n * Returns true if the given `key` is an own property of `obj`.\n */\n\nfunction hasOwn(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n","'use strict';\n\nvar typeOf = require('kind-of');\nvar extend = require('extend-shallow');\n\n/**\n * Parse sections in `input` with the given `options`.\n *\n * ```js\n * var sections = require('{%= name %}');\n * var result = sections(input, options);\n * // { content: 'Content before sections', sections: [] }\n * ```\n * @param {String|Buffer|Object} `input` If input is an object, it's `content` property must be a string or buffer.\n * @param {Object} options\n * @return {Object} Returns an object with a `content` string and an array of `sections` objects.\n * @api public\n */\n\nmodule.exports = function(input, options) {\n  if (typeof options === 'function') {\n    options = { parse: options };\n  }\n\n  var file = toObject(input);\n  var defaults = {section_delimiter: '---', parse: identity};\n  var opts = extend({}, defaults, options);\n  var delim = opts.section_delimiter;\n  var lines = file.content.split(/\\r?\\n/);\n  var sections = null;\n  var section = createSection();\n  var content = [];\n  var stack = [];\n\n  function initSections(val) {\n    file.content = val;\n    sections = [];\n    content = [];\n  }\n\n  function closeSection(val) {\n    if (stack.length) {\n      section.key = getKey(stack[0], delim);\n      section.content = val;\n      opts.parse(section, sections);\n      sections.push(section);\n      section = createSection();\n      content = [];\n      stack = [];\n    }\n  }\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var len = stack.length;\n    var ln = line.trim();\n\n    if (isDelimiter(ln, delim)) {\n      if (ln.length === 3 && i !== 0) {\n        if (len === 0 || len === 2) {\n          content.push(line);\n          continue;\n        }\n        stack.push(ln);\n        section.data = content.join('\\n');\n        content = [];\n        continue;\n      }\n\n      if (sections === null) {\n        initSections(content.join('\\n'));\n      }\n\n      if (len === 2) {\n        closeSection(content.join('\\n'));\n      }\n\n      stack.push(ln);\n      continue;\n    }\n\n    content.push(line);\n  }\n\n  if (sections === null) {\n    initSections(content.join('\\n'));\n  } else {\n    closeSection(content.join('\\n'));\n  }\n\n  file.sections = sections;\n  return file;\n};\n\nfunction isDelimiter(line, delim) {\n  if (line.slice(0, delim.length) !== delim) {\n    return false;\n  }\n  if (line.charAt(delim.length + 1) === delim.slice(-1)) {\n    return false;\n  }\n  return true;\n}\n\nfunction toObject(input) {\n  if (typeOf(input) !== 'object') {\n    input = { content: input };\n  }\n\n  if (typeof input.content !== 'string' && !isBuffer(input.content)) {\n    throw new TypeError('expected a buffer or string');\n  }\n\n  input.content = input.content.toString();\n  input.sections = [];\n  return input;\n}\n\nfunction getKey(val, delim) {\n  return val ? val.slice(delim.length).trim() : '';\n}\n\nfunction createSection() {\n  return { key: '', data: '', content: '' };\n}\n\nfunction identity(val) {\n  return val;\n}\n\nfunction isBuffer(val) {\n  if (val && val.constructor && typeof val.constructor.isBuffer === 'function') {\n    return val.constructor.isBuffer(val);\n  }\n  return false;\n}\n","'use strict';\n\n\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nmodule.exports.isNothing      = isNothing;\nmodule.exports.isObject       = isObject;\nmodule.exports.toArray        = toArray;\nmodule.exports.repeat         = repeat;\nmodule.exports.isNegativeZero = isNegativeZero;\nmodule.exports.extend         = extend;\n","// YAML error class. http://stackoverflow.com/questions/8458984\n//\n'use strict';\n\nfunction YAMLException(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = (this.reason || '(unknown reason)') + (this.mark ? ' ' + this.mark.toString() : '');\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException.prototype = Object.create(Error.prototype);\nYAMLException.prototype.constructor = YAMLException;\n\n\nYAMLException.prototype.toString = function toString(compact) {\n  var result = this.name + ': ';\n\n  result += this.reason || '(unknown reason)';\n\n  if (!compact && this.mark) {\n    result += ' ' + this.mark.toString();\n  }\n\n  return result;\n};\n\n\nmodule.exports = YAMLException;\n","'use strict';\n\n\nvar common = require('./common');\n\n\nfunction Mark(name, buffer, position, line, column) {\n  this.name     = name;\n  this.buffer   = buffer;\n  this.position = position;\n  this.line     = line;\n  this.column   = column;\n}\n\n\nMark.prototype.getSnippet = function getSnippet(indent, maxLength) {\n  var head, start, tail, end, snippet;\n\n  if (!this.buffer) return null;\n\n  indent = indent || 4;\n  maxLength = maxLength || 75;\n\n  head = '';\n  start = this.position;\n\n  while (start > 0 && '\\x00\\r\\n\\x85\\u2028\\u2029'.indexOf(this.buffer.charAt(start - 1)) === -1) {\n    start -= 1;\n    if (this.position - start > (maxLength / 2 - 1)) {\n      head = ' ... ';\n      start += 5;\n      break;\n    }\n  }\n\n  tail = '';\n  end = this.position;\n\n  while (end < this.buffer.length && '\\x00\\r\\n\\x85\\u2028\\u2029'.indexOf(this.buffer.charAt(end)) === -1) {\n    end += 1;\n    if (end - this.position > (maxLength / 2 - 1)) {\n      tail = ' ... ';\n      end -= 5;\n      break;\n    }\n  }\n\n  snippet = this.buffer.slice(start, end);\n\n  return common.repeat(' ', indent) + head + snippet + tail + '\\n' +\n         common.repeat(' ', indent + this.position - start + head.length) + '^';\n};\n\n\nMark.prototype.toString = function toString(compact) {\n  var snippet, where = '';\n\n  if (this.name) {\n    where += 'in \"' + this.name + '\" ';\n  }\n\n  where += 'at line ' + (this.line + 1) + ', column ' + (this.column + 1);\n\n  if (!compact) {\n    snippet = this.getSnippet();\n\n    if (snippet) {\n      where += ':\\n' + snippet;\n    }\n  }\n\n  return where;\n};\n\n\nmodule.exports = Mark;\n","'use strict';\n\nvar YAMLException = require('./exception');\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new YAMLException('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.tag          = tag;\n  this.kind         = options['kind']         || null;\n  this.resolve      = options['resolve']      || function () { return true; };\n  this.construct    = options['construct']    || function (data) { return data; };\n  this.instanceOf   = options['instanceOf']   || null;\n  this.predicate    = options['predicate']    || null;\n  this.represent    = options['represent']    || null;\n  this.defaultStyle = options['defaultStyle'] || null;\n  this.styleAliases = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new YAMLException('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nmodule.exports = Type;\n","'use strict';\n\n/*eslint-disable max-len*/\n\nvar common        = require('./common');\nvar YAMLException = require('./exception');\nvar Type          = require('./type');\n\n\nfunction compileList(schema, name, result) {\n  var exclude = [];\n\n  schema.include.forEach(function (includedSchema) {\n    result = compileList(includedSchema, name, result);\n  });\n\n  schema[name].forEach(function (currentType) {\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag && previousType.kind === currentType.kind) {\n        exclude.push(previousIndex);\n      }\n    });\n\n    result.push(currentType);\n  });\n\n  return result.filter(function (type, index) {\n    return exclude.indexOf(index) === -1;\n  });\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {}\n      }, index, length;\n\n  function collectType(type) {\n    result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema(definition) {\n  this.include  = definition.include  || [];\n  this.implicit = definition.implicit || [];\n  this.explicit = definition.explicit || [];\n\n  this.implicit.forEach(function (type) {\n    if (type.loadKind && type.loadKind !== 'scalar') {\n      throw new YAMLException('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n  });\n\n  this.compiledImplicit = compileList(this, 'implicit', []);\n  this.compiledExplicit = compileList(this, 'explicit', []);\n  this.compiledTypeMap  = compileMap(this.compiledImplicit, this.compiledExplicit);\n}\n\n\nSchema.DEFAULT = null;\n\n\nSchema.create = function createSchema() {\n  var schemas, types;\n\n  switch (arguments.length) {\n    case 1:\n      schemas = Schema.DEFAULT;\n      types = arguments[0];\n      break;\n\n    case 2:\n      schemas = arguments[0];\n      types = arguments[1];\n      break;\n\n    default:\n      throw new YAMLException('Wrong number of arguments for Schema.create function');\n  }\n\n  schemas = common.toArray(schemas);\n  types = common.toArray(types);\n\n  if (!schemas.every(function (schema) { return schema instanceof Schema; })) {\n    throw new YAMLException('Specified list of super schemas (or a single Schema object) contains a non-Schema object.');\n  }\n\n  if (!types.every(function (type) { return type instanceof Type; })) {\n    throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n  }\n\n  return new Schema({\n    include: schemas,\n    explicit: types\n  });\n};\n\n\nmodule.exports = Schema;\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n","// Standard YAML's Failsafe schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2802346\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  explicit: [\n    require('../type/str'),\n    require('../type/seq'),\n    require('../type/map')\n  ]\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n    // base 8\n    for (; index < max; index++) {\n      ch = data[index];\n      if (ch === '_') continue;\n      if (!isOctCode(data.charCodeAt(index))) return false;\n      hasDigits = true;\n    }\n    return hasDigits && ch !== '_';\n  }\n\n  // base 10 (except 0) or base 60\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (ch === ':') break;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  // if !base60 - done;\n  if (ch !== ':') return true;\n\n  // base60 almost not used, no needs to optimize\n  return /^(:[0-5]?[0-9])+$/.test(data.slice(index));\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch, base, digits = [];\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value, 16);\n    return sign * parseInt(value, 8);\n  }\n\n  if (value.indexOf(':') !== -1) {\n    value.split(':').forEach(function (v) {\n      digits.unshift(parseInt(v, 10));\n    });\n\n    value = 0;\n    base = 1;\n\n    digits.forEach(function (d) {\n      value += (d * base);\n      base *= 60;\n    });\n\n    return sign * value;\n\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0'  + obj.toString(8) : '-0'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:0|[1-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // 20:59\n  '|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\\\.[0-9_]*' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign, base, digits;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n  digits = [];\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n\n  } else if (value.indexOf(':') >= 0) {\n    value.split(':').forEach(function (v) {\n      digits.unshift(parseFloat(v, 10));\n    });\n\n    value = 0.0;\n    base = 1;\n\n    digits.forEach(function (d) {\n      value += d * base;\n      base *= 60;\n    });\n\n    return sign * value;\n\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n","// Standard YAML's JSON schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2803231\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, this schema is not such strict as defined in the YAML specification.\n// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./failsafe')\n  ],\n  implicit: [\n    require('../type/null'),\n    require('../type/bool'),\n    require('../type/int'),\n    require('../type/float')\n  ]\n});\n","// Standard YAML's Core schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2804923\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, Core schema has no distinctions from JSON schema is JS-YAML.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./json')\n  ]\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n","'use strict';\n\n/*eslint-disable no-bitwise*/\n\nvar NodeBuffer;\n\ntry {\n  // A trick for browserified version, to not include `Buffer` shim\n  var _require = require;\n  NodeBuffer = _require('buffer').Buffer;\n} catch (__) {}\n\nvar Type       = require('../type');\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  // Wrap into Buffer for NodeJS and leave Array for browser\n  if (NodeBuffer) {\n    // Support node 6.+ Buffer API when available\n    return NodeBuffer.from ? NodeBuffer.from(result) : new NodeBuffer(result);\n  }\n\n  return result;\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(object) {\n  return NodeBuffer && NodeBuffer.isBuffer(object);\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nvar _toString       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _toString = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n","// JS-YAML's default schema for `safeLoad` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on standard YAML's Core schema and includes most of\n// extra types described at YAML tag repository. (http://yaml.org/type/)\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./core')\n  ],\n  implicit: [\n    require('../type/timestamp'),\n    require('../type/merge')\n  ],\n  explicit: [\n    require('../type/binary'),\n    require('../type/omap'),\n    require('../type/pairs'),\n    require('../type/set')\n  ]\n});\n","'use strict';\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptUndefined() {\n  return true;\n}\n\nfunction constructJavascriptUndefined() {\n  /*eslint-disable no-undefined*/\n  return undefined;\n}\n\nfunction representJavascriptUndefined() {\n  return '';\n}\n\nfunction isUndefined(object) {\n  return typeof object === 'undefined';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/undefined', {\n  kind: 'scalar',\n  resolve: resolveJavascriptUndefined,\n  construct: constructJavascriptUndefined,\n  predicate: isUndefined,\n  represent: representJavascriptUndefined\n});\n","'use strict';\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptRegExp(data) {\n  if (data === null) return false;\n  if (data.length === 0) return false;\n\n  var regexp = data,\n      tail   = /\\/([gim]*)$/.exec(data),\n      modifiers = '';\n\n  // if regexp starts with '/' it can have modifiers and must be properly closed\n  // `/foo/gim` - modifiers tail can be maximum 3 chars\n  if (regexp[0] === '/') {\n    if (tail) modifiers = tail[1];\n\n    if (modifiers.length > 3) return false;\n    // if expression starts with /, is should be properly terminated\n    if (regexp[regexp.length - modifiers.length - 1] !== '/') return false;\n  }\n\n  return true;\n}\n\nfunction constructJavascriptRegExp(data) {\n  var regexp = data,\n      tail   = /\\/([gim]*)$/.exec(data),\n      modifiers = '';\n\n  // `/foo/gim` - tail can be maximum 4 chars\n  if (regexp[0] === '/') {\n    if (tail) modifiers = tail[1];\n    regexp = regexp.slice(1, regexp.length - modifiers.length - 1);\n  }\n\n  return new RegExp(regexp, modifiers);\n}\n\nfunction representJavascriptRegExp(object /*, style*/) {\n  var result = '/' + object.source + '/';\n\n  if (object.global) result += 'g';\n  if (object.multiline) result += 'm';\n  if (object.ignoreCase) result += 'i';\n\n  return result;\n}\n\nfunction isRegExp(object) {\n  return Object.prototype.toString.call(object) === '[object RegExp]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/regexp', {\n  kind: 'scalar',\n  resolve: resolveJavascriptRegExp,\n  construct: constructJavascriptRegExp,\n  predicate: isRegExp,\n  represent: representJavascriptRegExp\n});\n","'use strict';\n\nvar esprima;\n\n// Browserified version does not have esprima\n//\n// 1. For node.js just require module as deps\n// 2. For browser try to require mudule via external AMD system.\n//    If not found - try to fallback to window.esprima. If not\n//    found too - then fail to parse.\n//\ntry {\n  // workaround to exclude package from browserify list.\n  var _require = require;\n  esprima = _require('esprima');\n} catch (_) {\n  /* eslint-disable no-redeclare */\n  /* global window */\n  if (typeof window !== 'undefined') esprima = window.esprima;\n}\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptFunction(data) {\n  if (data === null) return false;\n\n  try {\n    var source = '(' + data + ')',\n        ast    = esprima.parse(source, { range: true });\n\n    if (ast.type                    !== 'Program'             ||\n        ast.body.length             !== 1                     ||\n        ast.body[0].type            !== 'ExpressionStatement' ||\n        (ast.body[0].expression.type !== 'ArrowFunctionExpression' &&\n          ast.body[0].expression.type !== 'FunctionExpression')) {\n      return false;\n    }\n\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\nfunction constructJavascriptFunction(data) {\n  /*jslint evil:true*/\n\n  var source = '(' + data + ')',\n      ast    = esprima.parse(source, { range: true }),\n      params = [],\n      body;\n\n  if (ast.type                    !== 'Program'             ||\n      ast.body.length             !== 1                     ||\n      ast.body[0].type            !== 'ExpressionStatement' ||\n      (ast.body[0].expression.type !== 'ArrowFunctionExpression' &&\n        ast.body[0].expression.type !== 'FunctionExpression')) {\n    throw new Error('Failed to resolve function');\n  }\n\n  ast.body[0].expression.params.forEach(function (param) {\n    params.push(param.name);\n  });\n\n  body = ast.body[0].expression.body.range;\n\n  // Esprima's ranges include the first '{' and the last '}' characters on\n  // function expressions. So cut them out.\n  if (ast.body[0].expression.body.type === 'BlockStatement') {\n    /*eslint-disable no-new-func*/\n    return new Function(params, source.slice(body[0] + 1, body[1] - 1));\n  }\n  // ES6 arrow functions can omit the BlockStatement. In that case, just return\n  // the body.\n  /*eslint-disable no-new-func*/\n  return new Function(params, 'return ' + source.slice(body[0], body[1]));\n}\n\nfunction representJavascriptFunction(object /*, style*/) {\n  return object.toString();\n}\n\nfunction isFunction(object) {\n  return Object.prototype.toString.call(object) === '[object Function]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/function', {\n  kind: 'scalar',\n  resolve: resolveJavascriptFunction,\n  construct: constructJavascriptFunction,\n  predicate: isFunction,\n  represent: representJavascriptFunction\n});\n","// JS-YAML's default schema for `load` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on JS-YAML's default safe schema and includes\n// JavaScript-specific types: !!js/undefined, !!js/regexp and !!js/function.\n//\n// Also this schema is used as default base schema at `Schema.create` function.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = Schema.DEFAULT = new Schema({\n  include: [\n    require('./default_safe')\n  ],\n  explicit: [\n    require('../type/js/undefined'),\n    require('../type/js/regexp'),\n    require('../type/js/function')\n  ]\n});\n","'use strict';\n\n/*eslint-disable max-len,no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar Mark                = require('./mark');\nvar DEFAULT_SAFE_SCHEMA = require('./schema/default_safe');\nvar DEFAULT_FULL_SCHEMA = require('./schema/default_full');\n\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || DEFAULT_FULL_SCHEMA;\n  this.onWarning = options['onWarning'] || null;\n  this.legacy    = options['legacy']    || false;\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  return new YAMLException(\n    message,\n    new Mark(state.filename, state.input, state.position, state.line, (state.position - state.lineStart)));\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, startLine, startPos) {\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty.call(overridableKeys, keyNode) &&\n        _hasOwnProperty.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n    _result[keyNode] = valueNode;\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = {},\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _pos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = {},\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n    _pos = state.position;\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else if (composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n\n    } else {\n      break; // Reading is done. Go to the epilogue.\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _pos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if (state.lineIndent > nodeIndent && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag !== null && state.tag !== '!') {\n    if (state.tag === '?') {\n      // Implicit resolving is not allowed for non-scalar types, and '?'\n      // non-specific tag is only automatically assigned to plain scalars.\n      //\n      // We only need to check kind conformity in case user explicitly assigns '?'\n      // tag, for example like this: \"!<?> [0]\"\n      //\n      if (state.result !== null && state.kind !== 'scalar') {\n        throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n      }\n\n      for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n        type = state.implicitTypes[typeIndex];\n\n        if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n          state.result = type.construct(state.result);\n          state.tag = type.tag;\n          if (state.anchor !== null) {\n            state.anchorMap[state.anchor] = state.result;\n          }\n          break;\n        }\n      }\n    } else if (_hasOwnProperty.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n\n      if (state.result !== null && type.kind !== state.kind) {\n        throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n      }\n\n      if (!type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n      } else {\n        state.result = type.construct(state.result);\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = {};\n  state.anchorMap = {};\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new YAMLException('expected a single document in the stream, but found more');\n}\n\n\nfunction safeLoadAll(input, iterator, options) {\n  if (typeof iterator === 'object' && iterator !== null && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  return loadAll(input, iterator, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\n\n\nfunction safeLoad(input, options) {\n  return load(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\n\n\nmodule.exports.loadAll     = loadAll;\nmodule.exports.load        = load;\nmodule.exports.safeLoadAll = safeLoadAll;\nmodule.exports.safeLoad    = safeLoad;\n","'use strict';\n\n/*eslint-disable no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar DEFAULT_FULL_SCHEMA = require('./schema/default_full');\nvar DEFAULT_SAFE_SCHEMA = require('./schema/default_safe');\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_EQUALS               = 0x3D; /* = */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new YAMLException('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\nfunction State(options) {\n  this.schema        = options['schema'] || DEFAULT_FULL_SCHEMA;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== 0xFEFF /* BOM */)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// [24] b-line-feed       ::=     #xA    /* LF */\n// [25] b-carriage-return ::=     #xD    /* CR */\n// [3]  c-byte-order-mark ::=     #xFEFF\nfunction isNsChar(c) {\n  return isPrintable(c) && !isWhitespace(c)\n    // byte-order-mark\n    && c !== 0xFEFF\n    // b-char\n    && c !== CHAR_CARRIAGE_RETURN\n    && c !== CHAR_LINE_FEED;\n}\n\n// Simplified test for values allowed after the first character in plain style.\nfunction isPlainSafe(c, prev) {\n  // Uses a subset of nb-char - c-flow-indicator - \":\" - \"#\"\n  // where nb-char ::= c-printable - b-char - c-byte-order-mark.\n  return isPrintable(c) && c !== 0xFEFF\n    // - c-flow-indicator\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // - \":\" - \"#\"\n    // /* An ns-char preceding */ \"#\"\n    && c !== CHAR_COLON\n    && ((c !== CHAR_SHARP) || (prev && isNsChar(prev)));\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  return isPrintable(c) && c !== 0xFEFF\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_EQUALS\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth, testAmbiguousType) {\n  var i;\n  var char, prev_char;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(string.charCodeAt(0))\n          && !isWhitespace(string.charCodeAt(string.length - 1));\n\n  if (singleLineOnly) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; i++) {\n      char = string.charCodeAt(i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      prev_char = i > 0 ? string.charCodeAt(i - 1) : null;\n      plain = plain && isPlainSafe(char, prev_char);\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; i++) {\n      char = string.charCodeAt(i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      prev_char = i > 0 ? string.charCodeAt(i - 1) : null;\n      plain = plain && isPlainSafe(char, prev_char);\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    return plain && !testAmbiguousType(string)\n      ? STYLE_PLAIN : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return \"''\";\n    }\n    if (!state.noCompatMode &&\n        DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1) {\n      return \"'\" + string + \"'\";\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth, testAmbiguity)) {\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string, lineWidth) + '\"';\n      default:\n        throw new YAMLException('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char, nextChar;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; i++) {\n    char = string.charCodeAt(i);\n    // Check for surrogate pairs (reference Unicode 3.0 section \"3.7 Surrogates\").\n    if (char >= 0xD800 && char <= 0xDBFF/* high surrogate */) {\n      nextChar = string.charCodeAt(i + 1);\n      if (nextChar >= 0xDC00 && nextChar <= 0xDFFF/* low surrogate */) {\n        // Combine the surrogate pair and store it escaped.\n        result += encodeHex((char - 0xD800) * 0x400 + nextChar - 0xDC00 + 0x10000);\n        // Advance index one extra since we already used that char here.\n        i++; continue;\n      }\n    }\n    escapeSeq = ESCAPE_SEQUENCES[char];\n    result += !escapeSeq && isPrintable(char)\n      ? string[i]\n      : escapeSeq || encodeHex(char);\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    // Write only valid elements.\n    if (writeNode(state, level, object[index], false, false)) {\n      if (index !== 0) _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    // Write only valid elements.\n    if (writeNode(state, level + 1, object[index], true, true)) {\n      if (!compact || index !== 0) {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n\n    pairBuffer = '';\n    if (index !== 0) pairBuffer += ', ';\n\n    if (state.condenseFlow) pairBuffer += '\"';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new YAMLException('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || index !== 0) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      state.tag = explicit ? type.tag : '?';\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new YAMLException('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      var arrayLevel = (state.noArrayIndent && (level > 0)) ? level - 1 : level;\n      if (block && (state.dump.length !== 0)) {\n        writeBlockSequence(state, arrayLevel, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, arrayLevel, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey);\n      }\n    } else {\n      if (state.skipInvalid) return false;\n      throw new YAMLException('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      state.dump = '!<' + state.tag + '> ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  if (writeNode(state, 0, input, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nfunction safeDump(input, options) {\n  return dump(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\n\nmodule.exports.dump     = dump;\nmodule.exports.safeDump = safeDump;\n","'use strict';\n\n\nvar loader = require('./js-yaml/loader');\nvar dumper = require('./js-yaml/dumper');\n\n\nfunction deprecated(name) {\n  return function () {\n    throw new Error('Function ' + name + ' is deprecated and cannot be used.');\n  };\n}\n\n\nmodule.exports.Type                = require('./js-yaml/type');\nmodule.exports.Schema              = require('./js-yaml/schema');\nmodule.exports.FAILSAFE_SCHEMA     = require('./js-yaml/schema/failsafe');\nmodule.exports.JSON_SCHEMA         = require('./js-yaml/schema/json');\nmodule.exports.CORE_SCHEMA         = require('./js-yaml/schema/core');\nmodule.exports.DEFAULT_SAFE_SCHEMA = require('./js-yaml/schema/default_safe');\nmodule.exports.DEFAULT_FULL_SCHEMA = require('./js-yaml/schema/default_full');\nmodule.exports.load                = loader.load;\nmodule.exports.loadAll             = loader.loadAll;\nmodule.exports.safeLoad            = loader.safeLoad;\nmodule.exports.safeLoadAll         = loader.safeLoadAll;\nmodule.exports.dump                = dumper.dump;\nmodule.exports.safeDump            = dumper.safeDump;\nmodule.exports.YAMLException       = require('./js-yaml/exception');\n\n// Deprecated schema names from JS-YAML 2.0.x\nmodule.exports.MINIMAL_SCHEMA = require('./js-yaml/schema/failsafe');\nmodule.exports.SAFE_SCHEMA    = require('./js-yaml/schema/default_safe');\nmodule.exports.DEFAULT_SCHEMA = require('./js-yaml/schema/default_full');\n\n// Deprecated functions from JS-YAML 1.x.x\nmodule.exports.scan           = deprecated('scan');\nmodule.exports.parse          = deprecated('parse');\nmodule.exports.compose        = deprecated('compose');\nmodule.exports.addConstructor = deprecated('addConstructor');\n","'use strict';\n\n\nvar yaml = require('./lib/js-yaml.js');\n\n\nmodule.exports = yaml;\n","'use strict';\n\nconst yaml = require('js-yaml');\n\n/**\n * Default engines\n */\n\nconst engines = exports = module.exports;\n\n/**\n * YAML\n */\n\nengines.yaml = {\n  parse: yaml.safeLoad.bind(yaml),\n  stringify: yaml.safeDump.bind(yaml)\n};\n\n/**\n * JSON\n */\n\nengines.json = {\n  parse: JSON.parse.bind(JSON),\n  stringify: function(obj, options) {\n    const opts = Object.assign({replacer: null, space: 2}, options);\n    return JSON.stringify(obj, opts.replacer, opts.space);\n  }\n};\n\n/**\n * JavaScript\n */\n\nengines.javascript = {\n  parse: function parse(str, options, wrap) {\n    /* eslint no-eval: 0 */\n    try {\n      if (wrap !== false) {\n        str = '(function() {\\nreturn ' + str.trim() + ';\\n}());';\n      }\n      return eval(str) || {};\n    } catch (err) {\n      if (wrap !== false && /(unexpected|identifier)/i.test(err.message)) {\n        return parse(str, options, false);\n      }\n      throw new SyntaxError(err);\n    }\n  },\n  stringify: function() {\n    throw new Error('stringifying JavaScript is not supported');\n  }\n};\n","/*!\n * strip-bom-string <https://github.com/jonschlinkert/strip-bom-string>\n *\n * Copyright (c) 2015, 2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function(str) {\n  if (typeof str === 'string' && str.charAt(0) === '\\ufeff') {\n    return str.slice(1);\n  }\n  return str;\n};\n","'use strict';\n\nconst stripBom = require('strip-bom-string');\nconst typeOf = require('kind-of');\n\nexports.define = function(obj, key, val) {\n  Reflect.defineProperty(obj, key, {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: val\n  });\n};\n\n/**\n * Returns true if `val` is a buffer\n */\n\nexports.isBuffer = function(val) {\n  return typeOf(val) === 'buffer';\n};\n\n/**\n * Returns true if `val` is an object\n */\n\nexports.isObject = function(val) {\n  return typeOf(val) === 'object';\n};\n\n/**\n * Cast `input` to a buffer\n */\n\nexports.toBuffer = function(input) {\n  return typeof input === 'string' ? Buffer.from(input) : input;\n};\n\n/**\n * Cast `val` to a string.\n */\n\nexports.toString = function(input) {\n  if (exports.isBuffer(input)) return stripBom(String(input));\n  if (typeof input !== 'string') {\n    throw new TypeError('expected input to be a string or buffer');\n  }\n  return stripBom(input);\n};\n\n/**\n * Cast `val` to an array.\n */\n\nexports.arrayify = function(val) {\n  return val ? (Array.isArray(val) ? val : [val]) : [];\n};\n\n/**\n * Returns true if `str` starts with `substr`.\n */\n\nexports.startsWith = function(str, substr, len) {\n  if (typeof len !== 'number') len = substr.length;\n  return str.slice(0, len) === substr;\n};\n","'use strict';\n\nconst engines = require('./engines');\nconst utils = require('./utils');\n\nmodule.exports = function(options) {\n  const opts = Object.assign({}, options);\n\n  // ensure that delimiters are an array\n  opts.delimiters = utils.arrayify(opts.delims || opts.delimiters || '---');\n  if (opts.delimiters.length === 1) {\n    opts.delimiters.push(opts.delimiters[0]);\n  }\n\n  opts.language = (opts.language || opts.lang || 'yaml').toLowerCase();\n  opts.engines = Object.assign({}, engines, opts.parsers, opts.engines);\n  return opts;\n};\n","'use strict';\n\nmodule.exports = function(name, options) {\n  let engine = options.engines[name] || options.engines[aliase(name)];\n  if (typeof engine === 'undefined') {\n    throw new Error('gray-matter engine \"' + name + '\" is not registered');\n  }\n  if (typeof engine === 'function') {\n    engine = { parse: engine };\n  }\n  return engine;\n};\n\nfunction aliase(name) {\n  switch (name.toLowerCase()) {\n    case 'js':\n    case 'javascript':\n      return 'javascript';\n    case 'coffee':\n    case 'coffeescript':\n    case 'cson':\n      return 'coffee';\n    case 'yaml':\n    case 'yml':\n      return 'yaml';\n    default: {\n      return name;\n    }\n  }\n}\n","'use strict';\n\nconst typeOf = require('kind-of');\nconst getEngine = require('./engine');\nconst defaults = require('./defaults');\n\nmodule.exports = function(file, data, options) {\n  if (data == null && options == null) {\n    switch (typeOf(file)) {\n      case 'object':\n        data = file.data;\n        options = {};\n        break;\n      case 'string':\n        return file;\n      default: {\n        throw new TypeError('expected file to be a string or object');\n      }\n    }\n  }\n\n  const str = file.content;\n  const opts = defaults(options);\n  if (data == null) {\n    if (!opts.data) return file;\n    data = opts.data;\n  }\n\n  const language = file.language || opts.language;\n  const engine = getEngine(language, opts);\n  if (typeof engine.stringify !== 'function') {\n    throw new TypeError('expected \"' + language + '.stringify\" to be a function');\n  }\n\n  data = Object.assign({}, file.data, data);\n  const open = opts.delimiters[0];\n  const close = opts.delimiters[1];\n  const matter = engine.stringify(data, options).trim();\n  let buf = '';\n\n  if (matter !== '{}') {\n    buf = newline(open) + newline(matter) + newline(close);\n  }\n\n  if (typeof file.excerpt === 'string' && file.excerpt !== '') {\n    if (str.indexOf(file.excerpt.trim()) === -1) {\n      buf += newline(file.excerpt) + newline(close);\n    }\n  }\n\n  return buf + newline(str);\n};\n\nfunction newline(str) {\n  return str.slice(-1) !== '\\n' ? str + '\\n' : str;\n}\n","'use strict';\n\nconst defaults = require('./defaults');\n\nmodule.exports = function(file, options) {\n  const opts = defaults(options);\n\n  if (file.data == null) {\n    file.data = {};\n  }\n\n  if (typeof opts.excerpt === 'function') {\n    return opts.excerpt(file, opts);\n  }\n\n  const sep = file.data.excerpt_separator || opts.excerpt_separator;\n  if (sep == null && (opts.excerpt === false || opts.excerpt == null)) {\n    return file;\n  }\n\n  const delimiter = typeof opts.excerpt === 'string'\n    ? opts.excerpt\n    : (sep || opts.delimiters[0]);\n\n  // if enabled, get the excerpt defined after front-matter\n  const idx = file.content.indexOf(delimiter);\n  if (idx !== -1) {\n    file.excerpt = file.content.slice(0, idx);\n  }\n\n  return file;\n};\n","'use strict';\n\nconst typeOf = require('kind-of');\nconst stringify = require('./stringify');\nconst utils = require('./utils');\n\n/**\n * Normalize the given value to ensure an object is returned\n * with the expected properties.\n */\n\nmodule.exports = function(file) {\n  if (typeOf(file) !== 'object') {\n    file = { content: file };\n  }\n\n  if (typeOf(file.data) !== 'object') {\n    file.data = {};\n  }\n\n  // if file was passed as an object, ensure that\n  // \"file.content\" is set\n  if (file.contents && file.content == null) {\n    file.content = file.contents;\n  }\n\n  // set non-enumerable properties on the file object\n  utils.define(file, 'orig', utils.toBuffer(file.content));\n  utils.define(file, 'language', file.language || '');\n  utils.define(file, 'matter', file.matter || '');\n  utils.define(file, 'stringify', function(data, options) {\n    if (options && options.language) {\n      file.language = options.language;\n    }\n    return stringify(file, data, options);\n  });\n\n  // strip BOM and ensure that \"file.content\" is a string\n  file.content = utils.toString(file.content);\n  file.isEmpty = false;\n  file.excerpt = '';\n  return file;\n};\n","'use strict';\n\nconst getEngine = require('./engine');\nconst defaults = require('./defaults');\n\nmodule.exports = function(language, str, options) {\n  const opts = defaults(options);\n  const engine = getEngine(language, opts);\n  if (typeof engine.parse !== 'function') {\n    throw new TypeError('expected \"' + language + '.parse\" to be a function');\n  }\n  return engine.parse(str, opts);\n};\n","'use strict';\n\nconst fs = require('fs');\nconst sections = require('section-matter');\nconst defaults = require('./lib/defaults');\nconst stringify = require('./lib/stringify');\nconst excerpt = require('./lib/excerpt');\nconst engines = require('./lib/engines');\nconst toFile = require('./lib/to-file');\nconst parse = require('./lib/parse');\nconst utils = require('./lib/utils');\n\n/**\n * Takes a string or object with `content` property, extracts\n * and parses front-matter from the string, then returns an object\n * with `data`, `content` and other [useful properties](#returned-object).\n *\n * ```js\n * const matter = require('gray-matter');\n * console.log(matter('---\\ntitle: Home\\n---\\nOther stuff'));\n * //=> { data: { title: 'Home'}, content: 'Other stuff' }\n * ```\n * @param {Object|String} `input` String, or object with `content` string\n * @param {Object} `options`\n * @return {Object}\n * @api public\n */\n\nfunction matter(input, options) {\n  if (input === '') {\n    return { data: {}, content: input, excerpt: '', orig: input };\n  }\n\n  let file = toFile(input);\n  const cached = matter.cache[file.content];\n\n  if (!options) {\n    if (cached) {\n      file = Object.assign({}, cached);\n      file.orig = cached.orig;\n      return file;\n    }\n\n    // only cache if there are no options passed. if we cache when options\n    // are passed, we would need to also cache options values, which would\n    // negate any performance benefits of caching\n    matter.cache[file.content] = file;\n  }\n\n  return parseMatter(file, options);\n}\n\n/**\n * Parse front matter\n */\n\nfunction parseMatter(file, options) {\n  const opts = defaults(options);\n  const open = opts.delimiters[0];\n  const close = '\\n' + opts.delimiters[1];\n  let str = file.content;\n\n  if (opts.language) {\n    file.language = opts.language;\n  }\n\n  // get the length of the opening delimiter\n  const openLen = open.length;\n  if (!utils.startsWith(str, open, openLen)) {\n    excerpt(file, opts);\n    return file;\n  }\n\n  // if the next character after the opening delimiter is\n  // a character from the delimiter, then it's not a front-\n  // matter delimiter\n  if (str.charAt(openLen) === open.slice(-1)) {\n    return file;\n  }\n\n  // strip the opening delimiter\n  str = str.slice(openLen);\n  const len = str.length;\n\n  // use the language defined after first delimiter, if it exists\n  const language = matter.language(str, opts);\n  if (language.name) {\n    file.language = language.name;\n    str = str.slice(language.raw.length);\n  }\n\n  // get the index of the closing delimiter\n  let closeIndex = str.indexOf(close);\n  if (closeIndex === -1) {\n    closeIndex = len;\n  }\n\n  // get the raw front-matter block\n  file.matter = str.slice(0, closeIndex);\n\n  const block = file.matter.replace(/^\\s*#[^\\n]+/gm, '').trim();\n  if (block === '') {\n    file.isEmpty = true;\n    file.empty = file.content;\n    file.data = {};\n  } else {\n\n    // create file.data by parsing the raw file.matter block\n    file.data = parse(file.language, file.matter, opts);\n  }\n\n  // update file.content\n  if (closeIndex === len) {\n    file.content = '';\n  } else {\n    file.content = str.slice(closeIndex + close.length);\n    if (file.content[0] === '\\r') {\n      file.content = file.content.slice(1);\n    }\n    if (file.content[0] === '\\n') {\n      file.content = file.content.slice(1);\n    }\n  }\n\n  excerpt(file, opts);\n\n  if (opts.sections === true || typeof opts.section === 'function') {\n    sections(file, opts.section);\n  }\n  return file;\n}\n\n/**\n * Expose engines\n */\n\nmatter.engines = engines;\n\n/**\n * Stringify an object to YAML or the specified language, and\n * append it to the given string. By default, only YAML and JSON\n * can be stringified. See the [engines](#engines) section to learn\n * how to stringify other languages.\n *\n * ```js\n * console.log(matter.stringify('foo bar baz', {title: 'Home'}));\n * // results in:\n * // ---\n * // title: Home\n * // ---\n * // foo bar baz\n * ```\n * @param {String|Object} `file` The content string to append to stringified front-matter, or a file object with `file.content` string.\n * @param {Object} `data` Front matter to stringify.\n * @param {Object} `options` [Options](#options) to pass to gray-matter and [js-yaml].\n * @return {String} Returns a string created by wrapping stringified yaml with delimiters, and appending that to the given string.\n * @api public\n */\n\nmatter.stringify = function(file, data, options) {\n  if (typeof file === 'string') file = matter(file, options);\n  return stringify(file, data, options);\n};\n\n/**\n * Synchronously read a file from the file system and parse\n * front matter. Returns the same object as the [main function](#matter).\n *\n * ```js\n * const file = matter.read('./content/blog-post.md');\n * ```\n * @param {String} `filepath` file path of the file to read.\n * @param {Object} `options` [Options](#options) to pass to gray-matter.\n * @return {Object} Returns [an object](#returned-object) with `data` and `content`\n * @api public\n */\n\nmatter.read = function(filepath, options) {\n  const str = fs.readFileSync(filepath, 'utf8');\n  const file = matter(str, options);\n  file.path = filepath;\n  return file;\n};\n\n/**\n * Returns true if the given `string` has front matter.\n * @param  {String} `string`\n * @param  {Object} `options`\n * @return {Boolean} True if front matter exists.\n * @api public\n */\n\nmatter.test = function(str, options) {\n  return utils.startsWith(str, defaults(options).delimiters[0]);\n};\n\n/**\n * Detect the language to use, if one is defined after the\n * first front-matter delimiter.\n * @param  {String} `string`\n * @param  {Object} `options`\n * @return {Object} Object with `raw` (actual language string), and `name`, the language with whitespace trimmed\n */\n\nmatter.language = function(str, options) {\n  const opts = defaults(options);\n  const open = opts.delimiters[0];\n\n  if (matter.test(str)) {\n    str = str.slice(open.length);\n  }\n\n  const language = str.slice(0, str.search(/\\r?\\n/));\n  return {\n    raw: language,\n    name: language ? language.trim() : ''\n  };\n};\n\n/**\n * Expose `matter`\n */\n\nmatter.cache = {};\nmatter.clearCache = function() {\n  matter.cache = {};\n};\nmodule.exports = matter;\n","// src/utils/markdown.ts  (NEW)\nimport matter from 'gray-matter';\nimport { AnyNote, NoteType } from '../models';\n\n/* ── Parse Markdown with YAML front-matter → typed note ───────── */\nexport function parseNote(md: string): AnyNote {\n  const { data, content } = matter(md);\n\n  const base = {\n    type: data.type as NoteType,\n    title: data.title as string,\n    range: data.range as string,\n    created: data.created as string | undefined,\n    updated: data.updated as string | undefined\n  };\n\n  if (data.type === 'outline') {\n    return { ...base, type: 'outline', items: data.items ?? [] };\n  }\n  if (data.type === 'manuscript') {\n    return { ...base, type: 'manuscript', content };\n  }\n  return { ...base, type: 'commentary', content };\n}\n\n/* ── Serialize note → Markdown with front-matter ──────────────── */\nexport function stringifyNote(note: AnyNote): string {\n  const { type, title, range, created, updated } = note;\n\n  const front: Record<string, unknown> = { type, title, range, created, updated };\n\n  if (type === 'outline') front.items = note.items;\n\n  const body =\n    type === 'outline'\n      ? '\\n' // outlines need no body markdown\n      : note.content;\n\n  return matter.stringify(body, front);\n}\n","/* src/storage/fs.ts\n * File-System Access helpers (Chromium only).\n */\n\nimport { AnyNote } from '../models';\nimport { stringifyNote } from '../utils/markdown';\n\nexport namespace FSStorage {\n  let root: FileSystemDirectoryHandle | null = null;\n  export const init = (h: FileSystemDirectoryHandle) => (root = h);\n\n  /* list chapter files */\n  export async function listFiles(book: string, chap: string) {\n    if (!root) return [];\n    try {\n      const chapDir = await (await root.getDirectoryHandle(book))\n        .getDirectoryHandle(chap);\n      const out: { kind: 'file'; name: string; handle: FileSystemFileHandle }[] = [];\n      for await (const [name, h] of chapDir.entries()) {\n        if (h.kind === 'file') out.push({ kind: 'file', name, handle: h as FileSystemFileHandle });\n      }\n      return out;\n    } catch { return []; }\n  }\n\n  /* read / write / delete */\n  export const readNote = async (h: FileSystemFileHandle) =>\n    (await h.getFile()).text();\n\n  export const writeNote = async (h: FileSystemFileHandle, n: AnyNote) => {\n    const w = await h.createWritable();\n    await w.write(stringifyNote(n));\n    await w.close();\n  };\n\n  export const deleteNote = async (h: FileSystemFileHandle) => {\n    // @ts-ignore getParent not in libDOM yet\n    const dir: FileSystemDirectoryHandle = await h.getParent();\n    // @ts-ignore\n    await dir.removeEntry(h.name);\n  };\n\n  export async function fileExists(book: string, chap: string, file: string) {\n    if (!root) return false;\n    try {\n      await (await (await root.getDirectoryHandle(book))\n        .getDirectoryHandle(chap))\n        .getFileHandle(file);\n      return true;\n    } catch { return false; }\n  }\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst transactionDoneMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    // This mapping exists in reverseTransformCache but doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(this.request);\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nconst advanceMethodProps = ['continue', 'continuePrimaryKey', 'advance'];\nconst methodMap = {};\nconst advanceResults = new WeakMap();\nconst ittrProxiedCursorToOriginalProxy = new WeakMap();\nconst cursorIteratorTraps = {\n    get(target, prop) {\n        if (!advanceMethodProps.includes(prop))\n            return target[prop];\n        let cachedFunc = methodMap[prop];\n        if (!cachedFunc) {\n            cachedFunc = methodMap[prop] = function (...args) {\n                advanceResults.set(this, ittrProxiedCursorToOriginalProxy.get(this)[prop](...args));\n            };\n        }\n        return cachedFunc;\n    },\n};\nasync function* iterate(...args) {\n    // tslint:disable-next-line:no-this-assignment\n    let cursor = this;\n    if (!(cursor instanceof IDBCursor)) {\n        cursor = await cursor.openCursor(...args);\n    }\n    if (!cursor)\n        return;\n    cursor = cursor;\n    const proxiedCursor = new Proxy(cursor, cursorIteratorTraps);\n    ittrProxiedCursorToOriginalProxy.set(proxiedCursor, cursor);\n    // Map this double-proxy back to the original, so other cursor methods work.\n    reverseTransformCache.set(proxiedCursor, unwrap(cursor));\n    while (cursor) {\n        yield proxiedCursor;\n        // If one of the advancing methods was not called, call continue().\n        cursor = await (advanceResults.get(proxiedCursor) || cursor.continue());\n        advanceResults.delete(proxiedCursor);\n    }\n}\nfunction isIteratorProp(target, prop) {\n    return ((prop === Symbol.asyncIterator &&\n        instanceOfAny(target, [IDBIndex, IDBObjectStore, IDBCursor])) ||\n        (prop === 'iterate' && instanceOfAny(target, [IDBIndex, IDBObjectStore])));\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get(target, prop, receiver) {\n        if (isIteratorProp(target, prop))\n            return iterate;\n        return oldTraps.get(target, prop, receiver);\n    },\n    has(target, prop) {\n        return isIteratorProp(target, prop) || oldTraps.has(target, prop);\n    },\n}));\n\nexport { deleteDB, openDB, unwrap, wrap };\n","/* src/storage/idb.ts — COMPLETE REPLACEMENT */\n\nimport { openDB, DBSchema, IDBPDatabase } from 'idb';\n\n/*────────────────────── schema ──────────────────────*/\ninterface NotesDB extends DBSchema {\n  notes: {\n    /* key example: \"Genesis/01/outline-1-5.md\" */\n    key: string;\n    value: string;            // raw Markdown\n  };\n  settings: {\n    key: string;              // arbitrary setting key\n    value: unknown;\n  };\n}\n\n/*────────────────────── DB handle ───────────────────*/\nexport const dbPromise: Promise<IDBPDatabase<NotesDB>> = openDB<NotesDB>(\n  'ExpositorNotes',\n  1,\n  {\n    upgrade(db) {\n      db.createObjectStore('notes');\n      db.createObjectStore('settings');\n    }\n  }\n);\n\n/*────────────────────── NOTE CRUD ───────────────────*/\nexport const saveNote = (key: string, md: string) =>\n  dbPromise.then(db => db.put('notes', md, key));\n\nexport const loadNote = (key: string) =>\n  dbPromise.then(db => db.get('notes', key));\n\nexport const deleteNote = (key: string) =>\n  dbPromise.then(db => db.delete('notes', key));\n\nexport const noteExists = (key: string) =>\n  dbPromise.then(db => db.count('notes', key).then(c => c > 0));\n\n/*────────────────────── SETTINGS KV ─────────────────*/\nexport const saveSetting = (key: string, value: unknown) =>\n  dbPromise.then(db => db.put('settings', value, key));\n\nexport const loadSetting = <T = unknown>(key: string) =>\n  dbPromise.then(db => db.get('settings', key) as Promise<T>);\n","/* src/storage/index.ts — COMPLETE REPLACEMENT\n * Facade over File-System and IndexedDB back-ends.\n */\n\nimport { FSStorage } from './fs';\nimport {\n  loadNote   as idbRead,\n  saveNote   as idbWrite,\n  deleteNote as idbDelete,\n  noteExists as idbExists,\n  dbPromise,                         // exported in idb.ts\n  saveSetting as saveSettingKV,\n  loadSetting as loadSettingKV\n} from './idb';\n\nimport { AnyNote }        from '../models';\nimport { stringifyNote }  from '../utils/markdown';\n\nexport type StorageBackend = 'fs' | 'idb';\nlet backend: StorageBackend = 'idb';\n\n/*───────────────────────────────────────────────────────────────────\n  Switch to File-System Access API mode after the user picks a folder\n  ───────────────────────────────────────────────────────────────────*/\nexport function initFS(handle: FileSystemDirectoryHandle) {\n  FSStorage.init(handle);\n  backend = 'fs';\n  (window as any).expositorFS = handle;         // devtools convenience\n}\n\n/*──────────────────────── list chapter files ──────────────────────*/\nexport async function listFiles(book: string, chap: string) {\n  if (backend === 'fs') return FSStorage.listFiles(book, chap);\n\n  const db      = await dbPromise;\n  const allKeys = (await db.getAllKeys('notes')) as string[];\n  const prefix  = `${book}/${chap}/`;\n\n  return allKeys\n    .filter((k: string) => k.startsWith(prefix))\n    .map((k: string) => ({ kind: 'file' as const, name: k }));\n}\n\n/*──────────────────────── read / write / delete ───────────────────*/\nexport const readNote = async (h: { name: string } | FileSystemFileHandle) =>\n  backend === 'fs'\n    ? FSStorage.readNote(h as FileSystemFileHandle)\n    : idbRead((h as { name: string }).name);\n\nexport const deleteNote = async (h: { name: string } | FileSystemFileHandle) =>\n  backend === 'fs'\n    ? FSStorage.deleteNote(h as FileSystemFileHandle)\n    : idbDelete((h as { name: string }).name);\n\nexport const writeNote = async (\n  h: { name: string } | FileSystemFileHandle,\n  note: AnyNote\n) =>\n  backend === 'fs'\n    ? FSStorage.writeNote(h as FileSystemFileHandle, note)\n    : idbWrite((h as { name: string }).name, stringifyNote(note));\n\n/*────────────────────────── create new note ───────────────────────*/\nexport async function createNote(\n  book: string,\n  chap: string,\n  note: AnyNote\n) {\n  const fileName = await nextSlug(book, chap, note);\n\n  if (backend === 'fs') {\n    const root    = (window as any).expositorFS as FileSystemDirectoryHandle;\n    const bookDir = await root.getDirectoryHandle(book, { create: true });\n    const chapDir = await bookDir.getDirectoryHandle(chap, { create: true });\n    const handle  = await chapDir.getFileHandle(fileName, { create: true });\n    await FSStorage.writeNote(handle, note);\n    return handle;\n  }\n\n  const key = `${book}/${chap}/${fileName}`;\n  await idbWrite(key, stringifyNote(note));\n  return { name: key };\n}\n\n/*──────── ensure unique slug when duplicate ranges exist ─────────*/\nasync function nextSlug(book: string, chap: string, note: AnyNote) {\n  const base   = `${note.type}-${note.range.replace(/\\s+/g, '')}`;\n  let   file   = `${base}.md`;\n  let   index  = 1;\n\n  const exists = async (f: string) =>\n    backend === 'fs'\n      ? FSStorage.fileExists(book, chap, f)\n      : idbExists(`${book}/${chap}/${f}`);\n\n  while (await exists(file)) file = `${base}-${index++}.md`;\n  return file;\n}\n\n/*────────────────────── settings helpers ─────────────────────────*/\nexport { saveSettingKV, loadSettingKV };\n","/* src/layout.ts\n * UI-shell logic: theme toggle, sidebar drag, Settings drawer.\n */\n\nimport { $, id, button } from './utils/dom';\nimport { initFS, saveSettingKV, loadSettingKV } from './storage';\n\n/* ────────────────────────── Theme & sidebar toggle ───────────────────────── */\n\nexport function initToggles() {\n  /* dark / light */\n  id('btn-toggle-theme').addEventListener('click', () =>\n    document.documentElement.classList.toggle('dark')\n  );\n\n  /* sidebar show / hide */\n  id('btn-toggle-sidebar').addEventListener('click', () =>\n    id('sidebar').classList.toggle('hidden')\n  );\n}\n\n/* ───────────────────────────── Column drag handles ───────────────────────── */\n\nexport function initDraggable() {\n  const h1 = id('drag-handle-1');\n  const h2 = id('drag-handle-2');\n  const cont = id('content');\n  const sb   = id('sidebar');\n  const rp   = id('right-panel');\n  let drag: 'sidebar' | 'right' | null = null;\n\n  const onMove = (e: MouseEvent) => {\n    if (drag === 'sidebar') {\n      sb.style.width = Math.min(Math.max(e.clientX, 150), cont.clientWidth - 200) + 'px';\n    }\n    if (drag === 'right') {\n      const rect = cont.getBoundingClientRect();\n      rp.style.width = Math.min(Math.max(rect.right - e.clientX, 200), rect.width - 150) + 'px';\n    }\n  };\n  const onUp = () => {\n    drag = null;\n    document.body.style.cursor = '';\n    document.removeEventListener('mousemove', onMove);\n    document.removeEventListener('mouseup', onUp);\n  };\n  const onDown = (area: 'sidebar' | 'right') => {\n    drag = area;\n    document.body.style.cursor = 'col-resize';\n    document.addEventListener('mousemove', onMove);\n    document.addEventListener('mouseup', onUp);\n  };\n\n  h1.addEventListener('mousedown', () => onDown('sidebar'));\n  h2.addEventListener('mousedown', () => onDown('right'));\n}\n\n/* ───────────────────────────── Settings drawer ───────────────────────────── */\n\nexport function initSettings() {\n  id('btn-settings').addEventListener('click', () => {\n    id('slide-drawer').classList.remove('translate-x-full');\n    renderSettings();\n  });\n}\n\nasync function renderSettings() {\n  id('drawer-title').textContent = 'Settings';\n  const body = id('drawer-body');\n  body.innerHTML = '';\n\n  /* folder picker button */\n  body.appendChild(\n    button('Choose Data Folder', 'px-4 py-2 bg-indigo-600 text-white rounded mb-4', async () => {\n      try {\n        // @ts-ignore  File-System Access API\n        const dir = await window.showDirectoryPicker();\n        await initFS(dir);\n        alert('Folder linked ✔︎  (data will now save as Markdown files)');\n      } catch { alert('Folder access was denied'); }\n    })\n  );\n\n  /* ESV key input */\n  const esvKey = (await loadSettingKV<string>('esvKey')) ?? '';\n  const label = document.createElement('label');\n  label.className = 'block mb-4';\n  label.innerHTML = '<span class=\"text-sm\">ESV API Key</span>';\n  const inp = document.createElement('input');\n  inp.className = 'w-full p-2 border rounded bg-white dark:bg-gray-700';\n  inp.value = esvKey;\n  inp.addEventListener('change', () => saveSettingKV('esvKey', inp.value.trim()));\n  label.appendChild(inp);\n  body.appendChild(label);\n}\n","/* src/esvApi.ts */\n\nimport { loadSettingKV } from './storage';\n\n/** fetch passage text, strip asterisks, return array of lines */\nexport async function fetchPassageLines(book: string, chap: string) {\n  const key = (await loadSettingKV<string>('esvKey')) ?? '';\n  if (!key) throw new Error('No ESV API key set (open Settings)');\n\n  const query = encodeURIComponent(`${book} ${chap}`);\n  const url   = `https://api.esv.org/v3/passage/text/?q=${query}`;\n\n  const res = await fetch(url, { headers: { Authorization: `Token ${key}` } });\n  if (!res.ok) throw new Error(`ESV API error ${res.status}`);\n\n  const json = await res.json();\n  const raw  = (json.passages?.[0] || '').replace(/\\*/g, '');\n  return raw.split('\\n').map((l: string) => l.trim()).filter(Boolean);\n}\n","// src/store.ts\nimport { NoteType } from './models';\n\ninterface State {\n  book: string;\n  chapter: string;\n  tab: NoteType;\n}\n\n/**\n * Tiny pub-sub store to replace window globals.\n */\nclass Store {\n  private state: State = { book: '', chapter: '', tab: 'outline' };\n  private listeners = new Set<(s: State) => void>();\n\n  get snapshot(): State {\n    return { ...this.state };\n  }\n\n  set<K extends keyof State>(key: K, value: State[K]) {\n    if (this.state[key] === value) return;\n    this.state[key] = value;\n    this.listeners.forEach((l) => l(this.snapshot));\n  }\n\n  subscribe(cb: (s: State) => void) {\n    this.listeners.add(cb);\n    return () => this.listeners.delete(cb);\n  }\n}\n\nexport const store = new Store();\n","/* src/renderers/chapter.ts */\n\nimport { fetchPassageLines } from '../esvApi';\nimport { store } from '../store';\n\nexport async function renderChapterContent(book: string, chap: string) {\n  const center = document.getElementById('center-panel')!;\n  center.innerHTML = '<p class=\"italic\">Loading…</p>';\n\n  try {\n    const lines = await fetchPassageLines(book, chap);\n    center.innerHTML = '';\n\n    for (const line of lines) {\n      const m = line.match(/^(\\d+)\\s+(.*)$/);\n      if (m) {\n        const [, v, t] = m;\n        const p = document.createElement('p');\n        p.className = 'mb-2';\n        p.innerHTML = `<sup class=\"font-semibold\">${v}</sup> ${t}`;\n        center.appendChild(p);\n      } else {\n        const h = document.createElement('h3');\n        h.className = 'font-semibold my-2';\n        h.textContent = line;\n        center.appendChild(h);\n      }\n    }\n\n    /* update global store */\n    store.set('book', book);\n    store.set('chapter', chap);\n\n  } catch (err) {\n    console.error(err);\n    center.textContent = '⚠️ Failed to load passage.';\n  }\n}\n","/* src/sidebar.ts */\n\nimport { renderChapterContent } from './renderers/chapter';\nimport { store } from './store';\nimport { id } from './utils/dom';\n\nexport function renderSidebar(books: string[]) {\n  const container = id('sidebar-content');\n  container.innerHTML = '';\n  const ul = document.createElement('ul');\n  ul.className = 'text-sm';\n\n  books.forEach(book => {\n    const li  = document.createElement('li');\n    const btn = document.createElement('button');\n    btn.textContent = book;\n    btn.className = 'w-full text-left px-4 py-1 hover:bg-gray-200 dark:hover:bg-gray-700';\n    btn.addEventListener('click', () => toggleChapters(book, li));\n    li.append(btn);\n    ul.append(li);\n  });\n\n  container.append(ul);\n}\n\nexport function toggleChapters(book: string, li: HTMLElement) {\n  let sub = li.querySelector('ul');\n  if (sub) { sub.classList.toggle('hidden'); return; }\n\n  sub = document.createElement('ul');\n  sub.className = 'pl-6 space-y-1';\n  const max = (window as any).manifest?.[book] ?? 0;\n\n  for (let n = 1; n <= max; n++) {\n    const liN  = document.createElement('li');\n    const btnN = document.createElement('button');\n    btnN.textContent = String(n);\n    btnN.className = 'text-left w-full hover:bg-gray-200 dark:hover:bg-gray-700';\n    btnN.addEventListener('click', () => {\n      store.set('book', book);\n      store.set('chapter', String(n));\n      renderChapterContent(book, String(n));\n    });\n    liN.append(btnN);\n    sub.append(liN);\n  }\n  li.append(sub);\n}\n","/* ------------------------------------------------------------------\n   Outline tab renderer\n   ------------------------------------------------------------------ */\n\nimport { listFiles, readNote, deleteNote } from '../storage';\nimport { OutlineNote, OutlineItem, AnyNote } from '../models';\nimport { parseNote }                         from '../utils/markdown';\n\n/** Render every “Outline” note for the selected chapter */\nexport async function renderOutlineTab(book: string, chap: string) {\n  const panel = document.getElementById('tab-content') as HTMLElement;\n  panel.innerHTML = '<p class=\"italic\">Loading…</p>';\n\n  /* ── Collect notes ------------------------------------------------ */\n  const pairs: { note: OutlineNote; file: any }[] = [];\n\n  for (const file of await listFiles(book, chap)) {\n    const raw  = (await readNote(file)) as string;          // storage always returns string\n    const note = parseNote(raw) as AnyNote | null;\n\n    if (note?.type === 'outline') {\n      pairs.push({ note: note as OutlineNote, file });\n    }\n  }\n\n  /* ── Empty state -------------------------------------------------- */\n  panel.innerHTML = '';\n  if (!pairs.length) {\n    panel.textContent = 'No outline items yet…';\n    return;\n  }\n\n  /* ── Render ------------------------------------------------------- */\n  pairs.forEach(({ note, file }) => {\n    /* wrapper */\n    const wrapper = document.createElement('div');\n    wrapper.className = 'mb-6';\n\n    /* header + delete */\n    const header = document.createElement('h2');\n    header.className =\n      'flex justify-between items-center font-semibold mb-2';\n    header.innerHTML = `\n      <span>\n        ${note.title}\n        <small class=\"text-gray-500\">(${note.range})</small>\n      </span>\n      <button class=\"text-red-500 hover:text-red-700\" title=\"Delete\">🗑</button>\n    `;\n    header\n      .querySelector('button')!\n      .addEventListener('click', async () => {\n        if (!confirm(`Delete outline “${note.title}”?`)) return;\n        await deleteNote(file);\n        renderOutlineTab(book, chap); /* refresh list */\n      });\n\n    wrapper.appendChild(header);\n\n    /* body: main points & sub-points */\n    note.items.forEach(renderItem(wrapper));\n\n    panel.appendChild(wrapper);\n  });\n}\n\n/* helper to render a single main point + sub-points ------------- */\nfunction renderItem(container: HTMLElement) {\n  return (item: OutlineItem): void => {\n    /* main point */\n    const p = document.createElement('p');\n    p.className = 'font-medium mb-1';\n    p.innerHTML =\n      `${item.text}` +\n      (item.verse\n        ? ` <span class=\"text-xs text-gray-400\">(v. ${item.verse})</span>`\n        : '');\n    container.appendChild(p);\n\n    /* sub-points */\n    if (item.subpoints?.length) {\n      const ul = document.createElement('ul');\n      ul.className = 'list-disc pl-6 mb-2';\n      item.subpoints.forEach((txt) => {\n        const li = document.createElement('li');\n        li.className = 'text-sm';\n        li.textContent = txt;\n        ul.appendChild(li);\n      });\n      container.appendChild(ul);\n    }\n  };\n}\n","/* eslint-disable no-bitwise */\n\nconst decodeCache = {}\n\nfunction getDecodeCache (exclude) {\n  let cache = decodeCache[exclude]\n  if (cache) { return cache }\n\n  cache = decodeCache[exclude] = []\n\n  for (let i = 0; i < 128; i++) {\n    const ch = String.fromCharCode(i)\n    cache.push(ch)\n  }\n\n  for (let i = 0; i < exclude.length; i++) {\n    const ch = exclude.charCodeAt(i)\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2)\n  }\n\n  return cache\n}\n\n// Decode percent-encoded string.\n//\nfunction decode (string, exclude) {\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars\n  }\n\n  const cache = getDecodeCache(exclude)\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function (seq) {\n    let result = ''\n\n    for (let i = 0, l = seq.length; i < l; i += 3) {\n      const b1 = parseInt(seq.slice(i + 1, i + 3), 16)\n\n      if (b1 < 0x80) {\n        result += cache[b1]\n        continue\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n\n        if ((b2 & 0xC0) === 0x80) {\n          const chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F)\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd'\n          } else {\n            result += String.fromCharCode(chr)\n          }\n\n          i += 3\n          continue\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n        const b3 = parseInt(seq.slice(i + 7, i + 9), 16)\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          const chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F)\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd'\n          } else {\n            result += String.fromCharCode(chr)\n          }\n\n          i += 6\n          continue\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n        const b3 = parseInt(seq.slice(i + 7, i + 9), 16)\n        const b4 = parseInt(seq.slice(i + 10, i + 12), 16)\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          let chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F)\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd'\n          } else {\n            chr -= 0x10000\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF))\n          }\n\n          i += 9\n          continue\n        }\n      }\n\n      result += '\\ufffd'\n    }\n\n    return result\n  })\n}\n\ndecode.defaultChars = ';/?:@&=+$,#'\ndecode.componentChars = ''\n\nexport default decode\n","const encodeCache = {}\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache (exclude) {\n  let cache = encodeCache[exclude]\n  if (cache) { return cache }\n\n  cache = encodeCache[exclude] = []\n\n  for (let i = 0; i < 128; i++) {\n    const ch = String.fromCharCode(i)\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch)\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2))\n    }\n  }\n\n  for (let i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i]\n  }\n\n  return cache\n}\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode (string, exclude, keepEscaped) {\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped = exclude\n    exclude = encode.defaultChars\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true\n  }\n\n  const cache = getEncodeCache(exclude)\n  let result = ''\n\n  for (let i = 0, l = string.length; i < l; i++) {\n    const code = string.charCodeAt(i)\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3)\n        i += 2\n        continue\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code]\n      continue\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        const nextCode = string.charCodeAt(i + 1)\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1])\n          i++\n          continue\n        }\n      }\n      result += '%EF%BF%BD'\n      continue\n    }\n\n    result += encodeURIComponent(string[i])\n  }\n\n  return result\n}\n\nencode.defaultChars = \";/?:@&=+$,-_.!~*'()#\"\nencode.componentChars = \"-_.!~*'()\"\n\nexport default encode\n","export default function format (url) {\n  let result = ''\n\n  result += url.protocol || ''\n  result += url.slashes ? '//' : ''\n  result += url.auth ? url.auth + '@' : ''\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']'\n  } else {\n    result += url.hostname || ''\n  }\n\n  result += url.port ? ':' + url.port : ''\n  result += url.pathname || ''\n  result += url.search || ''\n  result += url.hash || ''\n\n  return result\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\nfunction Url () {\n  this.protocol = null\n  this.slashes = null\n  this.auth = null\n  this.port = null\n  this.hostname = null\n  this.hash = null\n  this.search = null\n  this.pathname = null\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nconst protocolPattern = /^([a-z0-9.+-]+:)/i\nconst portPattern = /:[0-9]*$/\n\n// Special case for a simple path URL\n/* eslint-disable-next-line no-useless-escape */\nconst simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/\n\n// RFC 2396: characters reserved for delimiting URLs.\n// We actually just auto-escape these.\nconst delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t']\n\n// RFC 2396: characters not allowed for various reasons.\nconst unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims)\n\n// Allowed by RFCs, but cause of XSS attacks.  Always escape these.\nconst autoEscape = ['\\''].concat(unwise)\n// Characters that are never ever allowed in a hostname.\n// Note that any invalid chars are also handled, but these\n// are the ones that are *expected* to be seen, so we fast-path\n// them.\nconst nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape)\nconst hostEndingChars = ['/', '?', '#']\nconst hostnameMaxLen = 255\nconst hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/\nconst hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/\n// protocols that can allow \"unsafe\" and \"unwise\" chars.\n// protocols that never have a hostname.\nconst hostlessProtocol = {\n  javascript: true,\n  'javascript:': true\n}\n// protocols that always contain a // bit.\nconst slashedProtocol = {\n  http: true,\n  https: true,\n  ftp: true,\n  gopher: true,\n  file: true,\n  'http:': true,\n  'https:': true,\n  'ftp:': true,\n  'gopher:': true,\n  'file:': true\n}\n\nfunction urlParse (url, slashesDenoteHost) {\n  if (url && url instanceof Url) return url\n\n  const u = new Url()\n  u.parse(url, slashesDenoteHost)\n  return u\n}\n\nUrl.prototype.parse = function (url, slashesDenoteHost) {\n  let lowerProto, hec, slashes\n  let rest = url\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim()\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    const simplePath = simplePathPattern.exec(rest)\n    if (simplePath) {\n      this.pathname = simplePath[1]\n      if (simplePath[2]) {\n        this.search = simplePath[2]\n      }\n      return this\n    }\n  }\n\n  let proto = protocolPattern.exec(rest)\n  if (proto) {\n    proto = proto[0]\n    lowerProto = proto.toLowerCase()\n    this.protocol = proto\n    rest = rest.substr(proto.length)\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  /* eslint-disable-next-line no-useless-escape */\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//'\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2)\n      this.slashes = true\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    let hostEnd = -1\n    for (let i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i])\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    let auth, atSign\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@')\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd)\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign)\n      rest = rest.slice(atSign + 1)\n      this.auth = auth\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1\n    for (let i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i])\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd-- }\n    const host = rest.slice(0, hostEnd)\n    rest = rest.slice(hostEnd)\n\n    // pull out port.\n    this.parseHost(host)\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || ''\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    const ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']'\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      const hostparts = this.hostname.split(/\\./)\n      for (let i = 0, l = hostparts.length; i < l; i++) {\n        const part = hostparts[i]\n        if (!part) { continue }\n        if (!part.match(hostnamePartPattern)) {\n          let newpart = ''\n          for (let j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x'\n            } else {\n              newpart += part[j]\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            const validParts = hostparts.slice(0, i)\n            const notHost = hostparts.slice(i + 1)\n            const bit = part.match(hostnamePartStart)\n            if (bit) {\n              validParts.push(bit[1])\n              notHost.unshift(bit[2])\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest\n            }\n            this.hostname = validParts.join('.')\n            break\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = ''\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2)\n    }\n  }\n\n  // chop off from the tail first.\n  const hash = rest.indexOf('#')\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash)\n    rest = rest.slice(0, hash)\n  }\n  const qm = rest.indexOf('?')\n  if (qm !== -1) {\n    this.search = rest.substr(qm)\n    rest = rest.slice(0, qm)\n  }\n  if (rest) { this.pathname = rest }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = ''\n  }\n\n  return this\n}\n\nUrl.prototype.parseHost = function (host) {\n  let port = portPattern.exec(host)\n  if (port) {\n    port = port[0]\n    if (port !== ':') {\n      this.port = port.substr(1)\n    }\n    host = host.substr(0, host.length - port.length)\n  }\n  if (host) { this.hostname = host }\n}\n\nexport default urlParse\n","export default /[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","export default /[\\0-\\x1F\\x7F-\\x9F]/","export default /[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u0890\\u0891\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD80D[\\uDC30-\\uDC3F]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","export default /[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDEAD\\uDF55-\\uDF59\\uDF86-\\uDF89]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDEB9\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDD44-\\uDD46\\uDDE2\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2\\uDF00-\\uDF09]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8\\uDF43-\\uDF4F\\uDFFF]|\\uD809[\\uDC70-\\uDC74]|\\uD80B[\\uDFF1\\uDFF2]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A\\uDFE2]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","export default /[\\$\\+<->\\^`\\|~\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u07FE\\u07FF\\u0888\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u166D\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20C0\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2E50\\u2E51\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFF\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u31EF\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uAB6A\\uAB6B\\uFB29\\uFBB2-\\uFBC2\\uFD40-\\uFD4F\\uFDCF\\uFDFC-\\uFDFF\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD]|\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9C\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD807[\\uDFD5-\\uDFF1]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD833[\\uDF50-\\uDFC3]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDEA\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD838[\\uDD4F\\uDEFF]|\\uD83B[\\uDCAC\\uDCB0\\uDD2E\\uDEF0\\uDEF1]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD0D-\\uDDAD\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED7\\uDEDC-\\uDEEC\\uDEF0-\\uDEFC\\uDF00-\\uDF76\\uDF7B-\\uDFD9\\uDFE0-\\uDFEB\\uDFF0]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDCB0\\uDCB1\\uDD00-\\uDE53\\uDE60-\\uDE6D\\uDE70-\\uDE7C\\uDE80-\\uDE88\\uDE90-\\uDEBD\\uDEBF-\\uDEC5\\uDECE-\\uDEDB\\uDEE0-\\uDEE8\\uDEF0-\\uDEF8\\uDF00-\\uDF92\\uDF94-\\uDFCA]/","export default /[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-html.js.map","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-xml.js.map","// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nconst decodeMap = new Map([\n    [0, 65533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexport const fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {\n    let output = \"\";\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n        codePoint = 0xdc00 | (codePoint & 0x3ff);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nexport function replaceCodePoint(codePoint) {\n    var _a;\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return 0xfffd;\n    }\n    return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nexport default function decodeCodePoint(codePoint) {\n    return fromCodePoint(replaceCodePoint(codePoint));\n}\n//# sourceMappingURL=decode_codepoint.js.map","import htmlDecodeTree from \"./generated/decode-data-html.js\";\nimport xmlDecodeTree from \"./generated/decode-data-xml.js\";\nimport decodeCodePoint, { replaceCodePoint, fromCodePoint, } from \"./decode_codepoint.js\";\n// Re-export for use by eg. htmlparser2\nexport { htmlDecodeTree, xmlDecodeTree, decodeCodePoint };\nexport { replaceCodePoint, fromCodePoint } from \"./decode_codepoint.js\";\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes || (CharCodes = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 0b100000;\nexport var BinTrieFlags;\n(function (BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber(code) {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F));\n}\nfunction isAsciiAlphaNumeric(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber(code));\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code) {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function (EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nexport var DecodingMode;\n(function (DecodingMode) {\n    /** Entities in text nodes that can end with any character. */\n    DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */\n    DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */\n    DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nexport class EntityDecoder {\n    constructor(\n    /** The tree used to decode entities. */\n    decodeTree, \n    /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */\n    emitCodePoint, \n    /** An object that is used to produce errors. */\n    errors) {\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */\n        this.state = EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */\n        this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */\n        this.result = 0;\n        /** The current index in the decode tree. */\n        this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */\n        this.excess = 1;\n        /** The mode in which the decoder is operating. */\n        this.decodeMode = DecodingMode.Strict;\n    }\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param string The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(str, offset) {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (str.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(str, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(str, offset);\n            }\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(str, offset);\n            }\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(str, offset);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(str, offset);\n            }\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(str, offset);\n            }\n        }\n    }\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericStart(str, offset) {\n        if (offset >= str.length) {\n            return -1;\n        }\n        if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(str, offset + 1);\n        }\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(str, offset);\n    }\n    addToNumericResult(str, start, end, base) {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                    parseInt(str.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericHex(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 16);\n        return -1;\n    }\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericDecimal(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 10);\n        return -1;\n    }\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    emitNumericEntity(lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        }\n        else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    }\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNamedEntity(str, offset) {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n        for (; offset < str.length; offset++, this.excess++) {\n            const char = str.charCodeAt(offset);\n            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                }\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNotTerminatedNamedEntity() {\n        var _a;\n        const { result, decodeTree } = this;\n        const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    }\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNamedEntityData(result, valueLength, consumed) {\n        const { decodeTree } = this;\n        this.emitCodePoint(valueLength === 1\n            ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n            : decodeTree[result + 1], consumed);\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n        return consumed;\n    }\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end() {\n        var _a;\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree) {\n    let ret = \"\";\n    const decoder = new EntityDecoder(decodeTree, (str) => (ret += fromCodePoint(str)));\n    return function decodeWithTrie(str, decodeMode) {\n        let lastIndex = 0;\n        let offset = 0;\n        while ((offset = str.indexOf(\"&\", offset)) >= 0) {\n            ret += str.slice(lastIndex, offset);\n            decoder.startEntity(decodeMode);\n            const len = decoder.write(str, \n            // Skip the \"&\"\n            offset + 1);\n            if (len < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n            lastIndex = offset + len;\n            // If `len` is 0, skip the current `&` and continue.\n            offset = len === 0 ? lastIndex + 1 : lastIndex;\n        }\n        const result = ret + str.slice(lastIndex);\n        // Make sure we don't keep a reference to the final string.\n        ret = \"\";\n        return result;\n    };\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nexport function determineBranch(decodeTree, current, nodeIdx, char) {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n    }\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIdx + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    let lo = nodeIdx;\n    let hi = lo + branchCount - 1;\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midVal = decodeTree[mid];\n        if (midVal < char) {\n            lo = mid + 1;\n        }\n        else if (midVal > char) {\n            hi = mid - 1;\n        }\n        else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\nconst htmlDecoder = getDecoder(htmlDecodeTree);\nconst xmlDecoder = getDecoder(xmlDecodeTree);\n/**\n * Decodes an HTML string.\n *\n * @param str The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nexport function decodeHTML(str, mode = DecodingMode.Legacy) {\n    return htmlDecoder(str, mode);\n}\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLAttribute(str) {\n    return htmlDecoder(str, DecodingMode.Attribute);\n}\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLStrict(str) {\n    return htmlDecoder(str, DecodingMode.Strict);\n}\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeXML(str) {\n    return xmlDecoder(str, DecodingMode.Strict);\n}\n//# sourceMappingURL=decode.js.map","// Utilities\n//\n\nimport * as mdurl from 'mdurl'\nimport * as ucmicro from 'uc.micro'\nimport { decodeHTML } from 'entities'\n\nfunction _class (obj) { return Object.prototype.toString.call(obj) }\n\nfunction isString (obj) { return _class(obj) === '[object String]' }\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty\n\nfunction has (object, key) {\n  return _hasOwnProperty.call(object, key)\n}\n\n// Merge objects\n//\nfunction assign (obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1)\n\n  sources.forEach(function (source) {\n    if (!source) { return }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object')\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key]\n    })\n  })\n\n  return obj\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt (src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1))\n}\n\nfunction isValidEntityCode (c) {\n  /* eslint no-bitwise:0 */\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false }\n  if (c === 0x0B) { return false }\n  if (c >= 0x0E && c <= 0x1F) { return false }\n  if (c >= 0x7F && c <= 0x9F) { return false }\n  // out of range\n  if (c > 0x10FFFF) { return false }\n  return true\n}\n\nfunction fromCodePoint (c) {\n  /* eslint no-bitwise:0 */\n  if (c > 0xffff) {\n    c -= 0x10000\n    const surrogate1 = 0xd800 + (c >> 10)\n    const surrogate2 = 0xdc00 + (c & 0x3ff)\n\n    return String.fromCharCode(surrogate1, surrogate2)\n  }\n  return String.fromCharCode(c)\n}\n\nconst UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@[\\\\\\]^_`{|}~])/g\nconst ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi\nconst UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi')\n\nconst DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i\n\nfunction replaceEntityPattern (match, name) {\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    const code = name[1].toLowerCase() === 'x'\n      ? parseInt(name.slice(2), 16)\n      : parseInt(name.slice(1), 10)\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code)\n    }\n\n    return match\n  }\n\n  const decoded = decodeHTML(match)\n  if (decoded !== match) {\n    return decoded\n  }\n\n  return match\n}\n\n/* function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n} */\n\nfunction unescapeMd (str) {\n  if (str.indexOf('\\\\') < 0) { return str }\n  return str.replace(UNESCAPE_MD_RE, '$1')\n}\n\nfunction unescapeAll (str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped }\n    return replaceEntityPattern(match, entity)\n  })\n}\n\nconst HTML_ESCAPE_TEST_RE = /[&<>\"]/\nconst HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g\nconst HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n}\n\nfunction replaceUnsafeChar (ch) {\n  return HTML_REPLACEMENTS[ch]\n}\n\nfunction escapeHtml (str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar)\n  }\n  return str\n}\n\nconst REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g\n\nfunction escapeRE (str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&')\n}\n\nfunction isSpace (code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true\n  }\n  return false\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace (code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true\n  }\n  return false\n}\n\n/* eslint-disable max-len */\n\n// Currently without astral characters support.\nfunction isPunctChar (ch) {\n  return ucmicro.P.test(ch) || ucmicro.S.test(ch)\n}\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct (ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true\n    default:\n      return false\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference (str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ')\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß')\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase()\n}\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nconst lib = { mdurl, ucmicro }\n\nexport {\n  lib,\n  assign,\n  isString,\n  has,\n  unescapeMd,\n  unescapeAll,\n  isValidEntityCode,\n  fromCodePoint,\n  escapeHtml,\n  arrayReplaceAt,\n  isSpace,\n  isWhiteSpace,\n  isMdAsciiPunct,\n  isPunctChar,\n  escapeRE,\n  normalizeReference\n}\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n\nexport default function parseLinkLabel (state, start, disableNested) {\n  let level, found, marker, prevPos\n\n  const max = state.posMax\n  const oldPos = state.pos\n\n  state.pos = start + 1\n  level = 1\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos)\n    if (marker === 0x5D /* ] */) {\n      level--\n      if (level === 0) {\n        found = true\n        break\n      }\n    }\n\n    prevPos = state.pos\n    state.md.inline.skipToken(state)\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++\n      } else if (disableNested) {\n        state.pos = oldPos\n        return -1\n      }\n    }\n  }\n\n  let labelEnd = -1\n\n  if (found) {\n    labelEnd = state.pos\n  }\n\n  // restore old state\n  state.pos = oldPos\n\n  return labelEnd\n}\n","// Parse link destination\n//\n\nimport { unescapeAll } from '../common/utils.mjs'\n\nexport default function parseLinkDestination (str, start, max) {\n  let code\n  let pos = start\n\n  const result = {\n    ok: false,\n    pos: 0,\n    str: ''\n  }\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++\n    while (pos < max) {\n      code = str.charCodeAt(pos)\n      if (code === 0x0A /* \\n */) { return result }\n      if (code === 0x3C /* < */) { return result }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1\n        result.str = unescapeAll(str.slice(start + 1, pos))\n        result.ok = true\n        return result\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2\n        continue\n      }\n\n      pos++\n    }\n\n    // no closing '>'\n    return result\n  }\n\n  // this should be ... } else { ... branch\n\n  let level = 0\n  while (pos < max) {\n    code = str.charCodeAt(pos)\n\n    if (code === 0x20) { break }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break }\n      pos += 2\n      continue\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++\n      if (level > 32) { return result }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break }\n      level--\n    }\n\n    pos++\n  }\n\n  if (start === pos) { return result }\n  if (level !== 0) { return result }\n\n  result.str = unescapeAll(str.slice(start, pos))\n  result.pos = pos\n  result.ok = true\n  return result\n}\n","// Parse link title\n//\n\nimport { unescapeAll } from '../common/utils.mjs'\n\n// Parse link title within `str` in [start, max] range,\n// or continue previous parsing if `prev_state` is defined (equal to result of last execution).\n//\nexport default function parseLinkTitle (str, start, max, prev_state) {\n  let code\n  let pos = start\n\n  const state = {\n    // if `true`, this is a valid link title\n    ok: false,\n    // if `true`, this link can be continued on the next line\n    can_continue: false,\n    // if `ok`, it's the position of the first character after the closing marker\n    pos: 0,\n    // if `ok`, it's the unescaped title\n    str: '',\n    // expected closing marker character code\n    marker: 0\n  }\n\n  if (prev_state) {\n    // this is a continuation of a previous parseLinkTitle call on the next line,\n    // used in reference links only\n    state.str = prev_state.str\n    state.marker = prev_state.marker\n  } else {\n    if (pos >= max) { return state }\n\n    let marker = str.charCodeAt(pos)\n    if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return state }\n\n    start++\n    pos++\n\n    // if opening marker is \"(\", switch it to closing marker \")\"\n    if (marker === 0x28) { marker = 0x29 }\n\n    state.marker = marker\n  }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos)\n    if (code === state.marker) {\n      state.pos = pos + 1\n      state.str += unescapeAll(str.slice(start, pos))\n      state.ok = true\n      return state\n    } else if (code === 0x28 /* ( */ && state.marker === 0x29 /* ) */) {\n      return state\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++\n    }\n\n    pos++\n  }\n\n  // no closing marker found, but this link title may continue on the next line (for references)\n  state.can_continue = true\n  state.str += unescapeAll(str.slice(start, pos))\n  return state\n}\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n\nimport { assign, unescapeAll, escapeHtml } from './common/utils.mjs'\n\nconst default_rules = {}\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(token.content) +\n          '</code>'\n}\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n'\n}\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n  const info = token.info ? unescapeAll(token.info).trim() : ''\n  let langName = ''\n  let langAttrs = ''\n\n  if (info) {\n    const arr = info.split(/(\\s+)/g)\n    langName = arr[0]\n    langAttrs = arr.slice(2).join('')\n  }\n\n  let highlighted\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content)\n  } else {\n    highlighted = escapeHtml(token.content)\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n'\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    const i = token.attrIndex('class')\n    const tmpAttrs = token.attrs ? token.attrs.slice() : []\n\n    if (i < 0) {\n      tmpAttrs.push(['class', options.langPrefix + langName])\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice()\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName\n    }\n\n    // Fake token just to render attributes\n    const tmpToken = {\n      attrs: tmpAttrs\n    }\n\n    return `<pre><code${slf.renderAttrs(tmpToken)}>${highlighted}</code></pre>\\n`\n  }\n\n  return `<pre><code${slf.renderAttrs(token)}>${highlighted}</code></pre>\\n`\n}\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env)\n\n  return slf.renderToken(tokens, idx, options)\n}\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n'\n}\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n'\n}\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content)\n}\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content\n}\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content\n}\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer () {\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.mjs)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules)\n}\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs (token) {\n  let i, l, result\n\n  if (!token.attrs) { return '' }\n\n  result = ''\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"'\n  }\n\n  return result\n}\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken (tokens, idx, options) {\n  const token = tokens[idx]\n  let result = ''\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return ''\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n'\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token)\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /'\n  }\n\n  // Check if we need to add a newline after this tag\n  let needLf = false\n  if (token.block) {\n    needLf = true\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        const nextToken = tokens[idx + 1]\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>'\n\n  return result\n}\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  let result = ''\n  const rules = this.rules\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    const type = tokens[i].type\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this)\n    } else {\n      result += this.renderToken(tokens, i, options)\n    }\n  }\n\n  return result\n}\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  let result = ''\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    switch (tokens[i].type) {\n      case 'text':\n        result += tokens[i].content\n        break\n      case 'image':\n        result += this.renderInlineAsText(tokens[i].children, options, env)\n        break\n      case 'html_inline':\n      case 'html_block':\n        result += tokens[i].content\n        break\n      case 'softbreak':\n      case 'hardbreak':\n        result += '\\n'\n        break\n      default:\n        // all other tokens are skipped\n    }\n  }\n\n  return result\n}\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  let result = ''\n  const rules = this.rules\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    const type = tokens[i].type\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env)\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this)\n    } else {\n      result += this.renderToken(tokens, i, options, env)\n    }\n  }\n\n  return result\n}\n\nexport default Renderer\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n\n/**\n * new Ruler()\n **/\nfunction Ruler () {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = []\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null\n}\n\n// Helper methods, should not be used directly\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (let i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i\n    }\n  }\n  return -1\n}\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  const self = this\n  const chains = ['']\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName)\n      }\n    })\n  })\n\n  self.__cache__ = {}\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = []\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return }\n\n      self.__cache__[chain].push(rule.fn)\n    })\n  })\n}\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  const index = this.__find__(name)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name) }\n\n  this.__rules__[index].fn = fn\n  this.__rules__[index].alt = opt.alt || []\n  this.__cache__ = null\n}\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  const index = this.__find__(beforeName)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName) }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  const index = this.__find__(afterName)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName) }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  const opt = options || {}\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  const result = []\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    const idx = this.__find__(name)\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return }\n      throw new Error('Rules manager: invalid rule name ' + name)\n    }\n    this.__rules__[idx].enabled = true\n    result.push(name)\n  }, this)\n\n  this.__cache__ = null\n  return result\n}\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false })\n\n  this.enable(list, ignoreInvalid)\n}\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  const result = []\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    const idx = this.__find__(name)\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return }\n      throw new Error('Rules manager: invalid rule name ' + name)\n    }\n    this.__rules__[idx].enabled = false\n    result.push(name)\n  }, this)\n\n  this.__cache__ = null\n  return result\n}\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__()\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || []\n}\n\nexport default Ruler\n","// Token class\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token (type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = ''\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = ''\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = ''\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false\n}\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex (name) {\n  if (!this.attrs) { return -1 }\n\n  const attrs = this.attrs\n\n  for (let i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i }\n  }\n  return -1\n}\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush (attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData)\n  } else {\n    this.attrs = [attrData]\n  }\n}\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet (name, value) {\n  const idx = this.attrIndex(name)\n  const attrData = [name, value]\n\n  if (idx < 0) {\n    this.attrPush(attrData)\n  } else {\n    this.attrs[idx] = attrData\n  }\n}\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet (name) {\n  const idx = this.attrIndex(name)\n  let value = null\n  if (idx >= 0) {\n    value = this.attrs[idx][1]\n  }\n  return value\n}\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin (name, value) {\n  const idx = this.attrIndex(name)\n\n  if (idx < 0) {\n    this.attrPush([name, value])\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value\n  }\n}\n\nexport default Token\n","// Core state object\n//\n\nimport Token from '../token.mjs'\n\nfunction StateCore (src, md, env) {\n  this.src = src\n  this.env = env\n  this.tokens = []\n  this.inlineMode = false\n  this.md = md // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token\n\nexport default StateCore\n","// Normalize input string\n\n// https://spec.commonmark.org/0.29/#line-ending\nconst NEWLINES_RE  = /\\r\\n?|\\n/g\nconst NULL_RE      = /\\0/g\n\nexport default function normalize (state) {\n  let str\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n')\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD')\n\n  state.src = str\n}\n","export default function block (state) {\n  let token\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0)\n    token.content  = state.src\n    token.map      = [0, 1]\n    token.children = []\n    state.tokens.push(token)\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens)\n  }\n}\n","export default function inline (state) {\n  const tokens = state.tokens\n\n  // Parse inlines\n  for (let i = 0, l = tokens.length; i < l; i++) {\n    const tok = tokens[i]\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children)\n    }\n  }\n}\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n\nimport { arrayReplaceAt } from '../common/utils.mjs'\n\nfunction isLinkOpen (str) {\n  return /^<a[>\\s]/i.test(str)\n}\nfunction isLinkClose (str) {\n  return /^<\\/a\\s*>/i.test(str)\n}\n\nexport default function linkify (state) {\n  const blockTokens = state.tokens\n\n  if (!state.md.options.linkify) { return }\n\n  for (let j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue\n    }\n\n    let tokens = blockTokens[j].children\n\n    let htmlLinkLevel = 0\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      const currentToken = tokens[i]\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--\n        }\n        continue\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++\n        }\n      }\n      if (htmlLinkLevel > 0) { continue }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n        const text = currentToken.content\n        let links = state.md.linkify.match(text)\n\n        // Now split string to nodes\n        const nodes = []\n        let level = currentToken.level\n        let lastPos = 0\n\n        // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n        if (links.length > 0 &&\n            links[0].index === 0 &&\n            i > 0 &&\n            tokens[i - 1].type === 'text_special') {\n          links = links.slice(1)\n        }\n\n        for (let ln = 0; ln < links.length; ln++) {\n          const url = links[ln].url\n          const fullUrl = state.md.normalizeLink(url)\n          if (!state.md.validateLink(fullUrl)) { continue }\n\n          let urlText = links[ln].text\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '')\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '')\n          } else {\n            urlText = state.md.normalizeLinkText(urlText)\n          }\n\n          const pos = links[ln].index\n\n          if (pos > lastPos) {\n            const token   = new state.Token('text', '', 0)\n            token.content = text.slice(lastPos, pos)\n            token.level   = level\n            nodes.push(token)\n          }\n\n          const token_o   = new state.Token('link_open', 'a', 1)\n          token_o.attrs   = [['href', fullUrl]]\n          token_o.level   = level++\n          token_o.markup  = 'linkify'\n          token_o.info    = 'auto'\n          nodes.push(token_o)\n\n          const token_t   = new state.Token('text', '', 0)\n          token_t.content = urlText\n          token_t.level   = level\n          nodes.push(token_t)\n\n          const token_c   = new state.Token('link_close', 'a', -1)\n          token_c.level   = --level\n          token_c.markup  = 'linkify'\n          token_c.info    = 'auto'\n          nodes.push(token_c)\n\n          lastPos = links[ln].lastIndex\n        }\n        if (lastPos < text.length) {\n          const token   = new state.Token('text', '', 0)\n          token.content = text.slice(lastPos)\n          token.level   = level\n          nodes.push(token)\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes)\n      }\n    }\n  }\n}\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - multiplications 2 x 4 -> 2 × 4\n\nconst RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nconst SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i\n\nconst SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig\nconst SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  tm: '™'\n}\n\nfunction replaceFn (match, name) {\n  return SCOPED_ABBR[name.toLowerCase()]\n}\n\nfunction replace_scoped (inlineTokens) {\n  let inside_autolink = 0\n\n  for (let i = inlineTokens.length - 1; i >= 0; i--) {\n    const token = inlineTokens[i]\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn)\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++\n    }\n  }\n}\n\nfunction replace_rare (inlineTokens) {\n  let inside_autolink = 0\n\n  for (let i = inlineTokens.length - 1; i >= 0; i--) {\n    const token = inlineTokens[i]\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013')\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++\n    }\n  }\n}\n\nexport default function replace (state) {\n  let blkIdx\n\n  if (!state.md.options.typographer) { return }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline') { continue }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children)\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children)\n    }\n  }\n}\n","// Convert straight quotation marks to typographic ones\n//\n\nimport { isWhiteSpace, isPunctChar, isMdAsciiPunct } from '../common/utils.mjs'\n\nconst QUOTE_TEST_RE = /['\"]/\nconst QUOTE_RE = /['\"]/g\nconst APOSTROPHE = '\\u2019' /* ’ */\n\nfunction replaceAt (str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1)\n}\n\nfunction process_inlines (tokens, state) {\n  let j\n\n  const stack = []\n\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i]\n\n    const thisLevel = tokens[i].level\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break }\n    }\n    stack.length = j + 1\n\n    if (token.type !== 'text') { continue }\n\n    let text = token.content\n    let pos = 0\n    let max = text.length\n\n    /* eslint no-labels:0,block-scoped-var:0 */\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos\n      const t = QUOTE_RE.exec(text)\n      if (!t) { break }\n\n      let canOpen = true\n      let canClose = true\n      pos = t.index + 1\n      const isSingle = (t[0] === \"'\")\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      let lastChar = 0x20\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1)\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break // lastChar defaults to 0x20\n          if (!tokens[j].content) continue // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1)\n          break\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      let nextChar = 0x20\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos)\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break // nextChar defaults to 0x20\n          if (!tokens[j].content) continue // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0)\n          break\n        }\n      }\n\n      const isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar))\n      const isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar))\n\n      const isLastWhiteSpace = isWhiteSpace(lastChar)\n      const isNextWhiteSpace = isWhiteSpace(nextChar)\n\n      if (isNextWhiteSpace) {\n        canOpen = false\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar\n        canClose = isNextPunctChar\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE)\n        }\n        continue\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          let item = stack[j]\n          if (stack[j].level < thisLevel) { break }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j]\n\n            let openQuote\n            let closeQuote\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2]\n              closeQuote = state.md.options.quotes[3]\n            } else {\n              openQuote = state.md.options.quotes[0]\n              closeQuote = state.md.options.quotes[1]\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote)\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote)\n\n            pos += closeQuote.length - 1\n            if (item.token === i) { pos += openQuote.length - 1 }\n\n            text = token.content\n            max = text.length\n\n            stack.length = j\n            continue OUTER\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        })\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE)\n      }\n    }\n  }\n}\n\nexport default function smartquotes (state) {\n  /* eslint max-depth:0 */\n  if (!state.md.options.typographer) { return }\n\n  for (let blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state)\n  }\n}\n","// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n\nexport default function text_join (state) {\n  let curr, last\n  const blockTokens = state.tokens\n  const l = blockTokens.length\n\n  for (let j = 0; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue\n\n    const tokens = blockTokens[j].children\n    const max = tokens.length\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text'\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr] }\n\n        last++\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last\n    }\n  }\n}\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateCore from './rules_core/state_core.mjs'\n\nimport r_normalize from './rules_core/normalize.mjs'\nimport r_block from './rules_core/block.mjs'\nimport r_inline from './rules_core/inline.mjs'\nimport r_linkify from './rules_core/linkify.mjs'\nimport r_replacements from './rules_core/replacements.mjs'\nimport r_smartquotes from './rules_core/smartquotes.mjs'\nimport r_text_join from './rules_core/text_join.mjs'\n\nconst _rules = [\n  ['normalize',      r_normalize],\n  ['block',          r_block],\n  ['inline',         r_inline],\n  ['linkify',        r_linkify],\n  ['replacements',   r_replacements],\n  ['smartquotes',    r_smartquotes],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  ['text_join',      r_text_join]\n]\n\n/**\n * new Core()\n **/\nfunction Core () {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1])\n  }\n}\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  const rules = this.ruler.getRules('')\n\n  for (let i = 0, l = rules.length; i < l; i++) {\n    rules[i](state)\n  }\n}\n\nCore.prototype.State = StateCore\n\nexport default Core\n","// Parser state class\n\nimport Token from '../token.mjs'\nimport { isSpace } from '../common/utils.mjs'\n\nfunction StateBlock (src, md, env, tokens) {\n  this.src = src\n\n  // link to parser instance\n  this.md     = md\n\n  this.env = env\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens\n\n  this.bMarks = []  // line begin offsets for fast jumps\n  this.eMarks = []  // line end offsets for fast jumps\n  this.tShift = []  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = []  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = []\n\n  // block parser variables\n\n  // required block content indent (for example, if we are\n  // inside a list, it would be positioned after list marker)\n  this.blkIndent  = 0\n  this.line       = 0 // line index in src\n  this.lineMax    = 0 // lines count\n  this.tight      = false  // loose/tight mode for lists\n  this.ddIndent   = -1 // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1 // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root'\n\n  this.level = 0\n\n  // Create caches\n  // Generate markers.\n  const s = this.src\n\n  for (let start = 0, pos = 0, indent = 0, offset = 0, len = s.length, indent_found = false; pos < len; pos++) {\n    const ch = s.charCodeAt(pos)\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4\n        } else {\n          offset++\n        }\n        continue\n      } else {\n        indent_found = true\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++ }\n      this.bMarks.push(start)\n      this.eMarks.push(pos)\n      this.tShift.push(indent)\n      this.sCount.push(offset)\n      this.bsCount.push(0)\n\n      indent_found = false\n      indent = 0\n      offset = 0\n      start = pos + 1\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length)\n  this.eMarks.push(s.length)\n  this.tShift.push(0)\n  this.sCount.push(0)\n  this.bsCount.push(0)\n\n  this.lineMax = this.bMarks.length - 1 // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  const token = new Token(type, tag, nesting)\n  token.block = true\n\n  if (nesting < 0) this.level-- // closing tag\n  token.level = this.level\n  if (nesting > 0) this.level++ // opening tag\n\n  this.tokens.push(token)\n  return token\n}\n\nStateBlock.prototype.isEmpty = function isEmpty (line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line]\n}\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines (from) {\n  for (let max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break\n    }\n  }\n  return from\n}\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces (pos) {\n  for (let max = this.src.length; pos < max; pos++) {\n    const ch = this.src.charCodeAt(pos)\n    if (!isSpace(ch)) { break }\n  }\n  return pos\n}\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack (pos, min) {\n  if (pos <= min) { return pos }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1 }\n  }\n  return pos\n}\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars (pos, code) {\n  for (let max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break }\n  }\n  return pos\n}\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack (pos, code, min) {\n  if (pos <= min) { return pos }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1 }\n  }\n  return pos\n}\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines (begin, end, indent, keepLastLF) {\n  if (begin >= end) {\n    return ''\n  }\n\n  const queue = new Array(end - begin)\n\n  for (let i = 0, line = begin; line < end; line++, i++) {\n    let lineIndent = 0\n    const lineStart = this.bMarks[line]\n    let first = lineStart\n    let last\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1\n    } else {\n      last = this.eMarks[line]\n    }\n\n    while (first < last && lineIndent < indent) {\n      const ch = this.src.charCodeAt(first)\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4\n        } else {\n          lineIndent++\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++\n      } else {\n        break\n      }\n\n      first++\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last)\n    } else {\n      queue[i] = this.src.slice(first, last)\n    }\n  }\n\n  return queue.join('')\n}\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token\n\nexport default StateBlock\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\nimport { isSpace } from '../common/utils.mjs'\n\n// Limit the amount of empty autocompleted cells in a table,\n// see https://github.com/markdown-it/markdown-it/issues/1000,\n//\n// Both pulldown-cmark and commonmark-hs limit the number of cells this way to ~200k.\n// We set it to 65k, which can expand user input by a factor of x370\n// (256x256 square is 1.8kB expanded into 650kB).\nconst MAX_AUTOCOMPLETED_CELLS = 0x10000\n\nfunction getLine (state, line) {\n  const pos = state.bMarks[line] + state.tShift[line]\n  const max = state.eMarks[line]\n\n  return state.src.slice(pos, max)\n}\n\nfunction escapedSplit (str) {\n  const result = []\n  const max = str.length\n\n  let pos = 0\n  let ch = str.charCodeAt(pos)\n  let isEscaped = false\n  let lastPos = 0\n  let current = ''\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos))\n        current = ''\n        lastPos = pos + 1\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1)\n        lastPos = pos\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */)\n    pos++\n\n    ch = str.charCodeAt(pos)\n  }\n\n  result.push(current + str.substring(lastPos))\n\n  return result\n}\n\nexport default function table (state, startLine, endLine, silent) {\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false }\n\n  let nextLine = startLine + 1\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  let pos = state.bMarks[nextLine] + state.tShift[nextLine]\n  if (pos >= state.eMarks[nextLine]) { return false }\n\n  const firstCh = state.src.charCodeAt(pos++)\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false }\n\n  if (pos >= state.eMarks[nextLine]) { return false }\n\n  const secondCh = state.src.charCodeAt(pos++)\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false }\n\n  while (pos < state.eMarks[nextLine]) {\n    const ch = state.src.charCodeAt(pos)\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false }\n\n    pos++\n  }\n\n  let lineText = getLine(state, startLine + 1)\n  let columns = lineText.split('|')\n  const aligns = []\n  for (let i = 0; i < columns.length; i++) {\n    const t = columns[i].trim()\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue\n      } else {\n        return false\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right')\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left')\n    } else {\n      aligns.push('')\n    }\n  }\n\n  lineText = getLine(state, startLine).trim()\n  if (lineText.indexOf('|') === -1) { return false }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n  columns = escapedSplit(lineText)\n  if (columns.length && columns[0] === '') columns.shift()\n  if (columns.length && columns[columns.length - 1] === '') columns.pop()\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  const columnCount = columns.length\n  if (columnCount === 0 || columnCount !== aligns.length) { return false }\n\n  if (silent) { return true }\n\n  const oldParentType = state.parentType\n  state.parentType = 'table'\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  const terminatorRules = state.md.block.ruler.getRules('blockquote')\n\n  const token_to = state.push('table_open', 'table', 1)\n  const tableLines = [startLine, 0]\n  token_to.map = tableLines\n\n  const token_tho = state.push('thead_open', 'thead', 1)\n  token_tho.map = [startLine, startLine + 1]\n\n  const token_htro = state.push('tr_open', 'tr', 1)\n  token_htro.map = [startLine, startLine + 1]\n\n  for (let i = 0; i < columns.length; i++) {\n    const token_ho = state.push('th_open', 'th', 1)\n    if (aligns[i]) {\n      token_ho.attrs  = [['style', 'text-align:' + aligns[i]]]\n    }\n\n    const token_il = state.push('inline', '', 0)\n    token_il.content  = columns[i].trim()\n    token_il.children = []\n\n    state.push('th_close', 'th', -1)\n  }\n\n  state.push('tr_close', 'tr', -1)\n  state.push('thead_close', 'thead', -1)\n\n  let tbodyLines\n  let autocompletedCells = 0\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break }\n\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n\n    if (terminate) { break }\n    lineText = getLine(state, nextLine).trim()\n    if (!lineText) { break }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break }\n    columns = escapedSplit(lineText)\n    if (columns.length && columns[0] === '') columns.shift()\n    if (columns.length && columns[columns.length - 1] === '') columns.pop()\n\n    // note: autocomplete count can be negative if user specifies more columns than header,\n    // but that does not affect intended use (which is limiting expansion)\n    autocompletedCells += columnCount - columns.length\n    if (autocompletedCells > MAX_AUTOCOMPLETED_CELLS) { break }\n\n    if (nextLine === startLine + 2) {\n      const token_tbo = state.push('tbody_open', 'tbody', 1)\n      token_tbo.map = tbodyLines = [startLine + 2, 0]\n    }\n\n    const token_tro = state.push('tr_open', 'tr', 1)\n    token_tro.map = [nextLine, nextLine + 1]\n\n    for (let i = 0; i < columnCount; i++) {\n      const token_tdo = state.push('td_open', 'td', 1)\n      if (aligns[i]) {\n        token_tdo.attrs  = [['style', 'text-align:' + aligns[i]]]\n      }\n\n      const token_il = state.push('inline', '', 0)\n      token_il.content  = columns[i] ? columns[i].trim() : ''\n      token_il.children = []\n\n      state.push('td_close', 'td', -1)\n    }\n    state.push('tr_close', 'tr', -1)\n  }\n\n  if (tbodyLines) {\n    state.push('tbody_close', 'tbody', -1)\n    tbodyLines[1] = nextLine\n  }\n\n  state.push('table_close', 'table', -1)\n  tableLines[1] = nextLine\n\n  state.parentType = oldParentType\n  state.line = nextLine\n  return true\n}\n","// Code block (4 spaces padded)\n\nexport default function code (state, startLine, endLine/*, silent */) {\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false }\n\n  let nextLine = startLine + 1\n  let last = nextLine\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++\n      continue\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++\n      last = nextLine\n      continue\n    }\n    break\n  }\n\n  state.line = last\n\n  const token   = state.push('code_block', 'code', 0)\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n'\n  token.map     = [startLine, state.line]\n\n  return true\n}\n","// fences (``` lang, ~~~ lang)\n\nexport default function fence (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (pos + 3 > max) { return false }\n\n  const marker = state.src.charCodeAt(pos)\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false\n  }\n\n  // scan marker length\n  let mem = pos\n  pos = state.skipChars(pos, marker)\n\n  let len = pos - mem\n\n  if (len < 3) { return false }\n\n  const markup = state.src.slice(mem, pos)\n  const params = state.src.slice(pos, max)\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true }\n\n  // search end of block\n  let nextLine = startLine\n  let haveEndMarker = false\n\n  for (;;) {\n    nextLine++\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine]\n    max = state.eMarks[nextLine]\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue\n    }\n\n    pos = state.skipChars(pos, marker)\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos)\n\n    if (pos < max) { continue }\n\n    haveEndMarker = true\n    // found!\n    break\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine]\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0)\n\n  const token   = state.push('fence', 'code', 0)\n  token.info    = params\n  token.content = state.getLines(startLine + 1, nextLine, len, true)\n  token.markup  = markup\n  token.map     = [startLine, state.line]\n\n  return true\n}\n","// Block quotes\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function blockquote (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  const oldLineMax = state.lineMax\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos) !== 0x3E/* > */) { return false }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true }\n\n  const oldBMarks  = []\n  const oldBSCount = []\n  const oldSCount  = []\n  const oldTShift  = []\n\n  const terminatorRules = state.md.block.ruler.getRules('blockquote')\n\n  const oldParentType = state.parentType\n  state.parentType = 'blockquote'\n  let lastLineEmpty = false\n  let nextLine\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    const isOutdented = state.sCount[nextLine] < state.blkIndent\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine]\n    max = state.eMarks[nextLine]\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      let initial = state.sCount[nextLine] + 1\n      let spaceAfterMarker\n      let adjustTab\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++\n        initial++\n        adjustTab = false\n        spaceAfterMarker = true\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true\n\n        if ((state.bsCount[nextLine] + initial) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++\n          initial++\n          adjustTab = false\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true\n        }\n      } else {\n        spaceAfterMarker = false\n      }\n\n      let offset = initial\n      oldBMarks.push(state.bMarks[nextLine])\n      state.bMarks[nextLine] = pos\n\n      while (pos < max) {\n        const ch = state.src.charCodeAt(pos)\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4\n          } else {\n            offset++\n          }\n        } else {\n          break\n        }\n\n        pos++\n      }\n\n      lastLineEmpty = pos >= max\n\n      oldBSCount.push(state.bsCount[nextLine])\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0)\n\n      oldSCount.push(state.sCount[nextLine])\n      state.sCount[nextLine] = offset - initial\n\n      oldTShift.push(state.tShift[nextLine])\n      state.tShift[nextLine] = pos - state.bMarks[nextLine]\n      continue\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break }\n\n    // Case 3: another tag found.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine])\n        oldBSCount.push(state.bsCount[nextLine])\n        oldTShift.push(state.tShift[nextLine])\n        oldSCount.push(state.sCount[nextLine])\n        state.sCount[nextLine] -= state.blkIndent\n      }\n\n      break\n    }\n\n    oldBMarks.push(state.bMarks[nextLine])\n    oldBSCount.push(state.bsCount[nextLine])\n    oldTShift.push(state.tShift[nextLine])\n    oldSCount.push(state.sCount[nextLine])\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1\n  }\n\n  const oldIndent = state.blkIndent\n  state.blkIndent = 0\n\n  const token_o  = state.push('blockquote_open', 'blockquote', 1)\n  token_o.markup = '>'\n  const lines = [startLine, 0]\n  token_o.map    = lines\n\n  state.md.block.tokenize(state, startLine, nextLine)\n\n  const token_c  = state.push('blockquote_close', 'blockquote', -1)\n  token_c.markup = '>'\n\n  state.lineMax = oldLineMax\n  state.parentType = oldParentType\n  lines[1] = state.line\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (let i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i]\n    state.tShift[i + startLine] = oldTShift[i]\n    state.sCount[i + startLine] = oldSCount[i]\n    state.bsCount[i + startLine] = oldBSCount[i]\n  }\n  state.blkIndent = oldIndent\n\n  return true\n}\n","// Horizontal rule\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function hr (state, startLine, endLine, silent) {\n  const max = state.eMarks[startLine]\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  const marker = state.src.charCodeAt(pos++)\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  let cnt = 1\n  while (pos < max) {\n    const ch = state.src.charCodeAt(pos++)\n    if (ch !== marker && !isSpace(ch)) { return false }\n    if (ch === marker) { cnt++ }\n  }\n\n  if (cnt < 3) { return false }\n\n  if (silent) { return true }\n\n  state.line = startLine + 1\n\n  const token  = state.push('hr', 'hr', 0)\n  token.map    = [startLine, state.line]\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker))\n\n  return true\n}\n","// Lists\n\nimport { isSpace } from '../common/utils.mjs'\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker (state, startLine) {\n  const max = state.eMarks[startLine]\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n\n  const marker = state.src.charCodeAt(pos++)\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1\n  }\n\n  if (pos < max) {\n    const ch = state.src.charCodeAt(pos)\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1\n    }\n  }\n\n  return pos\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker (state, startLine) {\n  const start = state.bMarks[startLine] + state.tShift[startLine]\n  const max = state.eMarks[startLine]\n  let pos = start\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1 }\n\n  let ch = state.src.charCodeAt(pos++)\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1 }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1 }\n\n    ch = state.src.charCodeAt(pos++)\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1 }\n\n      continue\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break\n    }\n\n    return -1\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos)\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1\n    }\n  }\n  return pos\n}\n\nfunction markTightParagraphs (state, idx) {\n  const level = state.level + 2\n\n  for (let i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true\n      state.tokens[i].hidden = true\n      i += 2\n    }\n  }\n}\n\nexport default function list (state, startLine, endLine, silent) {\n  let max, pos, start, token\n  let nextLine = startLine\n  let tight = true\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[nextLine] - state.listIndent >= 4 &&\n      state.sCount[nextLine] < state.blkIndent) {\n    return false\n  }\n\n  let isTerminatingParagraph = false\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      isTerminatingParagraph = true\n    }\n  }\n\n  // Detect list type and position after marker\n  let isOrdered\n  let markerValue\n  let posAfterMarker\n  if ((posAfterMarker = skipOrderedListMarker(state, nextLine)) >= 0) {\n    isOrdered = true\n    start = state.bMarks[nextLine] + state.tShift[nextLine]\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1))\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false\n  } else if ((posAfterMarker = skipBulletListMarker(state, nextLine)) >= 0) {\n    isOrdered = false\n  } else {\n    return false\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[nextLine]) return false\n  }\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true }\n\n  // We should terminate list on style change. Remember first one to compare.\n  const markerCharCode = state.src.charCodeAt(posAfterMarker - 1)\n\n  // Start list\n  const listTokIdx = state.tokens.length\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1)\n    if (markerValue !== 1) {\n      token.attrs = [['start', markerValue]]\n    }\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1)\n  }\n\n  const listLines = [nextLine, 0]\n  token.map    = listLines\n  token.markup = String.fromCharCode(markerCharCode)\n\n  //\n  // Iterate list items\n  //\n\n  let prevEmptyEnd = false\n  const terminatorRules = state.md.block.ruler.getRules('list')\n\n  const oldParentType = state.parentType\n  state.parentType = 'list'\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker\n    max = state.eMarks[nextLine]\n\n    const initial = state.sCount[nextLine] + posAfterMarker - (state.bMarks[nextLine] + state.tShift[nextLine])\n    let offset = initial\n\n    while (pos < max) {\n      const ch = state.src.charCodeAt(pos)\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4\n      } else if (ch === 0x20) {\n        offset++\n      } else {\n        break\n      }\n\n      pos++\n    }\n\n    const contentStart = pos\n    let indentAfterMarker\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1\n    } else {\n      indentAfterMarker = offset - initial\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1 }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    const indent = initial + indentAfterMarker\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1)\n    token.markup = String.fromCharCode(markerCharCode)\n    const itemLines = [nextLine, 0]\n    token.map    = itemLines\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1)\n    }\n\n    // change current state, then restore it after parser subcall\n    const oldTight = state.tight\n    const oldTShift = state.tShift[nextLine]\n    const oldSCount = state.sCount[nextLine]\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    const oldListIndent = state.listIndent\n    state.listIndent = state.blkIndent\n    state.blkIndent = indent\n\n    state.tight = true\n    state.tShift[nextLine] = contentStart - state.bMarks[nextLine]\n    state.sCount[nextLine] = offset\n\n    if (contentStart >= max && state.isEmpty(nextLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine)\n    } else {\n      state.md.block.tokenize(state, nextLine, endLine, true)\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - nextLine) > 1 && state.isEmpty(state.line - 1)\n\n    state.blkIndent = state.listIndent\n    state.listIndent = oldListIndent\n    state.tShift[nextLine] = oldTShift\n    state.sCount[nextLine] = oldSCount\n    state.tight = oldTight\n\n    token        = state.push('list_item_close', 'li', -1)\n    token.markup = String.fromCharCode(markerCharCode)\n\n    nextLine = state.line\n    itemLines[1] = nextLine\n\n    if (nextLine >= endLine) { break }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break }\n\n    // fail if terminating block found\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine)\n      if (posAfterMarker < 0) { break }\n      start = state.bMarks[nextLine] + state.tShift[nextLine]\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine)\n      if (posAfterMarker < 0) { break }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1)\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1)\n  }\n  token.markup = String.fromCharCode(markerCharCode)\n\n  listLines[1] = nextLine\n  state.line = nextLine\n\n  state.parentType = oldParentType\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx)\n  }\n\n  return true\n}\n","import { isSpace, normalizeReference } from '../common/utils.mjs'\n\nexport default function reference (state, startLine, _endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n  let nextLine = startLine + 1\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false }\n\n  function getNextLine (nextLine) {\n    const endLine = state.lineMax\n\n    if (nextLine >= endLine || state.isEmpty(nextLine)) {\n      // empty line or end of input\n      return null\n    }\n\n    let isContinuation = false\n\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { isContinuation = true }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { isContinuation = true }\n\n    if (!isContinuation) {\n      const terminatorRules = state.md.block.ruler.getRules('reference')\n      const oldParentType = state.parentType\n      state.parentType = 'reference'\n\n      // Some tags can terminate paragraph without empty line.\n      let terminate = false\n      for (let i = 0, l = terminatorRules.length; i < l; i++) {\n        if (terminatorRules[i](state, nextLine, endLine, true)) {\n          terminate = true\n          break\n        }\n      }\n\n      state.parentType = oldParentType\n      if (terminate) {\n        // terminated by another block\n        return null\n      }\n    }\n\n    const pos = state.bMarks[nextLine] + state.tShift[nextLine]\n    const max = state.eMarks[nextLine]\n\n    // max + 1 explicitly includes the newline\n    return state.src.slice(pos, max + 1)\n  }\n\n  let str = state.src.slice(pos, max + 1)\n\n  max = str.length\n  let labelEnd = -1\n\n  for (pos = 1; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x5B /* [ */) {\n      return false\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos\n      break\n    } else if (ch === 0x0A /* \\n */) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (ch === 0x5C /* \\ */) {\n      pos++\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        const lineContent = getNextLine(nextLine)\n        if (lineContent !== null) {\n          str += lineContent\n          max = str.length\n          nextLine++\n        }\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x0A) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (isSpace(ch)) {\n      /* eslint no-empty:0 */\n    } else {\n      break\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  const destRes = state.md.helpers.parseLinkDestination(str, pos, max)\n  if (!destRes.ok) { return false }\n\n  const href = state.md.normalizeLink(destRes.str)\n  if (!state.md.validateLink(href)) { return false }\n\n  pos = destRes.pos\n\n  // save cursor state, we could require to rollback later\n  const destEndPos = pos\n  const destEndLineNo = nextLine\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  const start = pos\n  for (; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x0A) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (isSpace(ch)) {\n      /* eslint no-empty:0 */\n    } else {\n      break\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  let titleRes = state.md.helpers.parseLinkTitle(str, pos, max)\n  while (titleRes.can_continue) {\n    const lineContent = getNextLine(nextLine)\n    if (lineContent === null) break\n    str += lineContent\n    pos = max\n    max = str.length\n    nextLine++\n    titleRes = state.md.helpers.parseLinkTitle(str, pos, max, titleRes)\n  }\n  let title\n\n  if (pos < max && start !== pos && titleRes.ok) {\n    title = titleRes.str\n    pos = titleRes.pos\n  } else {\n    title = ''\n    pos = destEndPos\n    nextLine = destEndLineNo\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    const ch = str.charCodeAt(pos)\n    if (!isSpace(ch)) { break }\n    pos++\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = ''\n      pos = destEndPos\n      nextLine = destEndLineNo\n      while (pos < max) {\n        const ch = str.charCodeAt(pos)\n        if (!isSpace(ch)) { break }\n        pos++\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false\n  }\n\n  const label = normalizeReference(str.slice(1, labelEnd))\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /* istanbul ignore if */\n  if (silent) { return true }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {}\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title, href }\n  }\n\n  state.line = nextLine\n  return true\n}\n","// List of valid html blocks names, according to commonmark spec\n// https://spec.commonmark.org/0.30/#html-blocks\n\nexport default [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n","// Regexps to match html elements\n\nconst attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*'\n\nconst unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+'\nconst single_quoted = \"'[^']*'\"\nconst double_quoted = '\"[^\"]*\"'\n\nconst attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')'\n\nconst attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)'\n\nconst open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>'\n\nconst close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>'\nconst comment     = '<!---?>|<!--(?:[^-]|-[^-]|--[^>])*-->'\nconst processing  = '<[?][\\\\s\\\\S]*?[?]>'\nconst declaration = '<![A-Za-z][^>]*>'\nconst cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>'\n\nconst HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')')\nconst HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')')\n\nexport { HTML_TAG_RE, HTML_OPEN_CLOSE_TAG_RE }\n","// HTML block\n\nimport block_names from '../common/html_blocks.mjs'\nimport { HTML_OPEN_CLOSE_TAG_RE } from '../common/html_re.mjs'\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nconst HTML_SEQUENCES = [\n  [/^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true],\n  [/^<!--/,        /-->/,   true],\n  [/^<\\?/,         /\\?>/,   true],\n  [/^<![A-Z]/,     />/,     true],\n  [/^<!\\[CDATA\\[/, /\\]\\]>/, true],\n  [new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true],\n  [new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false]\n]\n\nexport default function html_block (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (!state.md.options.html) { return false }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false }\n\n  let lineText = state.src.slice(pos, max)\n\n  let i = 0\n  for (; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break }\n  }\n  if (i === HTML_SEQUENCES.length) { return false }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2]\n  }\n\n  let nextLine = startLine + 1\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine]\n      max = state.eMarks[nextLine]\n      lineText = state.src.slice(pos, max)\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++ }\n        break\n      }\n    }\n  }\n\n  state.line = nextLine\n\n  const token   = state.push('html_block', '', 0)\n  token.map     = [startLine, nextLine]\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true)\n\n  return true\n}\n","// heading (#, ##, ...)\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function heading (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  let ch  = state.src.charCodeAt(pos)\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false }\n\n  // count heading level\n  let level = 1\n  ch = state.src.charCodeAt(++pos)\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++\n    ch = state.src.charCodeAt(++pos)\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false }\n\n  if (silent) { return true }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos)\n  const tmp = state.skipCharsBack(max, 0x23, pos) // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp\n  }\n\n  state.line = startLine + 1\n\n  const token_o  = state.push('heading_open', 'h' + String(level), 1)\n  token_o.markup = '########'.slice(0, level)\n  token_o.map    = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = state.src.slice(pos, max).trim()\n  token_i.map      = [startLine, state.line]\n  token_i.children = []\n\n  const token_c  = state.push('heading_close', 'h' + String(level), -1)\n  token_c.markup = '########'.slice(0, level)\n\n  return true\n}\n","// lheading (---, ===)\n\nexport default function lheading (state, startLine, endLine/*, silent */) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph')\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  const oldParentType = state.parentType\n  state.parentType = 'paragraph' // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  let level = 0\n  let marker\n  let nextLine = startLine + 1\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      let pos = state.bMarks[nextLine] + state.tShift[nextLine]\n      const max = state.eMarks[nextLine]\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos)\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker)\n          pos = state.skipSpaces(pos)\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2)\n            break\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false\n  }\n\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()\n\n  state.line = nextLine + 1\n\n  const token_o    = state.push('heading_open', 'h' + String(level), 1)\n  token_o.markup   = String.fromCharCode(marker)\n  token_o.map      = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = content\n  token_i.map      = [startLine, state.line - 1]\n  token_i.children = []\n\n  const token_c    = state.push('heading_close', 'h' + String(level), -1)\n  token_c.markup   = String.fromCharCode(marker)\n\n  state.parentType = oldParentType\n\n  return true\n}\n","// Paragraph\n\nexport default function paragraph (state, startLine, endLine) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph')\n  const oldParentType = state.parentType\n  let nextLine = startLine + 1\n  state.parentType = 'paragraph'\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n  }\n\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()\n\n  state.line = nextLine\n\n  const token_o    = state.push('paragraph_open', 'p', 1)\n  token_o.map      = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = content\n  token_i.map      = [startLine, state.line]\n  token_i.children = []\n\n  state.push('paragraph_close', 'p', -1)\n\n  state.parentType = oldParentType\n\n  return true\n}\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateBlock from './rules_block/state_block.mjs'\n\nimport r_table from './rules_block/table.mjs'\nimport r_code from './rules_block/code.mjs'\nimport r_fence from './rules_block/fence.mjs'\nimport r_blockquote from './rules_block/blockquote.mjs'\nimport r_hr from './rules_block/hr.mjs'\nimport r_list from './rules_block/list.mjs'\nimport r_reference from './rules_block/reference.mjs'\nimport r_html_block from './rules_block/html_block.mjs'\nimport r_heading from './rules_block/heading.mjs'\nimport r_lheading from './rules_block/lheading.mjs'\nimport r_paragraph from './rules_block/paragraph.mjs'\n\nconst _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  ['table',      r_table,      ['paragraph', 'reference']],\n  ['code',       r_code],\n  ['fence',      r_fence,      ['paragraph', 'reference', 'blockquote', 'list']],\n  ['blockquote', r_blockquote, ['paragraph', 'reference', 'blockquote', 'list']],\n  ['hr',         r_hr,         ['paragraph', 'reference', 'blockquote', 'list']],\n  ['list',       r_list,       ['paragraph', 'reference', 'blockquote']],\n  ['reference',  r_reference],\n  ['html_block', r_html_block, ['paragraph', 'reference', 'blockquote']],\n  ['heading',    r_heading,    ['paragraph', 'reference', 'blockquote']],\n  ['lheading',   r_lheading],\n  ['paragraph',  r_paragraph]\n]\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock () {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() })\n  }\n}\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const maxNesting = state.md.options.maxNesting\n  let line = startLine\n  let hasEmptyLines = false\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line)\n    if (line >= endLine) { break }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine\n      break\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n    const prevLine = state.line\n    let ok = false\n\n    for (let i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false)\n      if (ok) {\n        if (prevLine >= state.line) {\n          throw new Error(\"block rule didn't increment state.line\")\n        }\n        break\n      }\n    }\n\n    // this can only happen if user disables paragraph rule\n    if (!ok) throw new Error('none of the block rules matched')\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true\n    }\n\n    line = state.line\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true\n      line++\n      state.line = line\n    }\n  }\n}\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  if (!src) { return }\n\n  const state = new this.State(src, md, env, outTokens)\n\n  this.tokenize(state, state.line, state.lineMax)\n}\n\nParserBlock.prototype.State = StateBlock\n\nexport default ParserBlock\n","// Inline parser state\n\nimport Token from '../token.mjs'\nimport { isWhiteSpace, isPunctChar, isMdAsciiPunct } from '../common/utils.mjs'\n\nfunction StateInline (src, md, env, outTokens) {\n  this.src = src\n  this.env = env\n  this.md = md\n  this.tokens = outTokens\n  this.tokens_meta = Array(outTokens.length)\n\n  this.pos = 0\n  this.posMax = this.src.length\n  this.level = 0\n  this.pending = ''\n  this.pendingLevel = 0\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {}\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = []\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = []\n\n  // backtick length => last seen position\n  this.backticks = {}\n  this.backticksScanned = false\n\n  // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n  this.linkLevel = 0\n}\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  const token = new Token('text', '', 0)\n  token.content = this.pending\n  token.level = this.pendingLevel\n  this.tokens.push(token)\n  this.pending = ''\n  return token\n}\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending()\n  }\n\n  const token = new Token(type, tag, nesting)\n  let token_meta = null\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--\n    this.delimiters = this._prev_delimiters.pop()\n  }\n\n  token.level = this.level\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++\n    this._prev_delimiters.push(this.delimiters)\n    this.delimiters = []\n    token_meta = { delimiters: this.delimiters }\n  }\n\n  this.pendingLevel = this.level\n  this.tokens.push(token)\n  this.tokens_meta.push(token_meta)\n  return token\n}\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  const max = this.posMax\n  const marker = this.src.charCodeAt(start)\n\n  // treat beginning of the line as a whitespace\n  const lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20\n\n  let pos = start\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++ }\n\n  const count = pos - start\n\n  // treat end of the line as a whitespace\n  const nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20\n\n  const isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar))\n  const isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar))\n\n  const isLastWhiteSpace = isWhiteSpace(lastChar)\n  const isNextWhiteSpace = isWhiteSpace(nextChar)\n\n  const left_flanking =\n    !isNextWhiteSpace && (!isNextPunctChar || isLastWhiteSpace || isLastPunctChar)\n  const right_flanking =\n    !isLastWhiteSpace && (!isLastPunctChar || isNextWhiteSpace || isNextPunctChar)\n\n  const can_open  = left_flanking  && (canSplitWord || !right_flanking || isLastPunctChar)\n  const can_close = right_flanking && (canSplitWord || !left_flanking  || isNextPunctChar)\n\n  return { can_open, can_close, length: count }\n}\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token\n\nexport default StateInline\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar (ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true\n    default:\n      return false\n  }\n}\n\nexport default function text (state, silent) {\n  let pos = state.pos\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++\n  }\n\n  if (pos === state.pos) { return false }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos) }\n\n  state.pos = pos\n\n  return true\n}\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParserInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n}; */\n","// Process links like https://example.org/\n\n// RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nconst SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i\n\nexport default function linkify (state, silent) {\n  if (!state.md.options.linkify) return false\n  if (state.linkLevel > 0) return false\n\n  const pos = state.pos\n  const max = state.posMax\n\n  if (pos + 3 > max) return false\n  if (state.src.charCodeAt(pos) !== 0x3A/* : */) return false\n  if (state.src.charCodeAt(pos + 1) !== 0x2F/* / */) return false\n  if (state.src.charCodeAt(pos + 2) !== 0x2F/* / */) return false\n\n  const match = state.pending.match(SCHEME_RE)\n  if (!match) return false\n\n  const proto = match[1]\n\n  const link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length))\n  if (!link) return false\n\n  let url = link.url\n\n  // invalid link, but still detected by linkify somehow;\n  // need to check to prevent infinite loop below\n  if (url.length <= proto.length) return false\n\n  // disallow '*' at the end of the link (conflicts with emphasis)\n  url = url.replace(/\\*+$/, '')\n\n  const fullUrl = state.md.normalizeLink(url)\n  if (!state.md.validateLink(fullUrl)) return false\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length)\n\n    const token_o = state.push('link_open', 'a', 1)\n    token_o.attrs = [['href', fullUrl]]\n    token_o.markup = 'linkify'\n    token_o.info = 'auto'\n\n    const token_t = state.push('text', '', 0)\n    token_t.content = state.md.normalizeLinkText(url)\n\n    const token_c = state.push('link_close', 'a', -1)\n    token_c.markup = 'linkify'\n    token_c.info = 'auto'\n  }\n\n  state.pos += url.length - proto.length\n  return true\n}\n","// Proceess '\\n'\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function newline (state, silent) {\n  let pos = state.pos\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false }\n\n  const pmax = state.pending.length - 1\n  const max = state.posMax\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        let ws = pmax - 1\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--\n\n        state.pending = state.pending.slice(0, ws)\n        state.push('hardbreak', 'br', 0)\n      } else {\n        state.pending = state.pending.slice(0, -1)\n        state.push('softbreak', 'br', 0)\n      }\n    } else {\n      state.push('softbreak', 'br', 0)\n    }\n  }\n\n  pos++\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++ }\n\n  state.pos = pos\n  return true\n}\n","// Process escaped chars and hardbreaks\n\nimport { isSpace } from '../common/utils.mjs'\n\nconst ESCAPED = []\n\nfor (let i = 0; i < 256; i++) { ESCAPED.push(0) }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1 })\n\nexport default function escape (state, silent) {\n  let pos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) return false\n  pos++\n\n  // '\\' at the end of the inline block\n  if (pos >= max) return false\n\n  let ch1 = state.src.charCodeAt(pos)\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0)\n    }\n\n    pos++\n    // skip leading whitespaces from next line\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos)\n      if (!isSpace(ch1)) break\n      pos++\n    }\n\n    state.pos = pos\n    return true\n  }\n\n  let escapedStr = state.src[pos]\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    const ch2 = state.src.charCodeAt(pos + 1)\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1]\n      pos++\n    }\n  }\n\n  const origStr = '\\\\' + escapedStr\n\n  if (!silent) {\n    const token = state.push('text_special', '', 0)\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr\n    } else {\n      token.content = origStr\n    }\n\n    token.markup = origStr\n    token.info   = 'escape'\n  }\n\n  state.pos = pos + 1\n  return true\n}\n","// Parse backticks\n\nexport default function backtick (state, silent) {\n  let pos = state.pos\n  const ch = state.src.charCodeAt(pos)\n\n  if (ch !== 0x60/* ` */) { return false }\n\n  const start = pos\n  pos++\n  const max = state.posMax\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++ }\n\n  const marker = state.src.slice(start, pos)\n  const openerLength = marker.length\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker\n    state.pos += openerLength\n    return true\n  }\n\n  let matchEnd = pos\n  let matchStart\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++ }\n\n    const closerLength = matchEnd - matchStart\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        const token = state.push('code_inline', 'code', 0)\n        token.markup = marker\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1')\n      }\n      state.pos = matchEnd\n      return true\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true\n\n  if (!silent) state.pending += marker\n  state.pos += openerLength\n  return true\n}\n","// ~~strike through~~\n//\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nfunction strikethrough_tokenize (state, silent) {\n  const start = state.pos\n  const marker = state.src.charCodeAt(start)\n\n  if (silent) { return false }\n\n  if (marker !== 0x7E/* ~ */) { return false }\n\n  const scanned = state.scanDelims(state.pos, true)\n  let len = scanned.length\n  const ch = String.fromCharCode(marker)\n\n  if (len < 2) { return false }\n\n  let token\n\n  if (len % 2) {\n    token         = state.push('text', '', 0)\n    token.content = ch\n    len--\n  }\n\n  for (let i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0)\n    token.content = ch + ch\n\n    state.delimiters.push({\n      marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token: state.tokens.length - 1,\n      end: -1,\n      open: scanned.can_open,\n      close: scanned.can_close\n    })\n  }\n\n  state.pos += scanned.length\n\n  return true\n}\n\nfunction postProcess (state, delimiters) {\n  let token\n  const loneMarkers = []\n  const max = delimiters.length\n\n  for (let i = 0; i < max; i++) {\n    const startDelim = delimiters[i]\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue\n    }\n\n    if (startDelim.end === -1) {\n      continue\n    }\n\n    const endDelim = delimiters[startDelim.end]\n\n    token         = state.tokens[startDelim.token]\n    token.type    = 's_open'\n    token.tag     = 's'\n    token.nesting = 1\n    token.markup  = '~~'\n    token.content = ''\n\n    token         = state.tokens[endDelim.token]\n    token.type    = 's_close'\n    token.tag     = 's'\n    token.nesting = -1\n    token.markup  = '~~'\n    token.content = ''\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n      loneMarkers.push(endDelim.token - 1)\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    const i = loneMarkers.pop()\n    let j = i + 1\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++\n    }\n\n    j--\n\n    if (i !== j) {\n      token = state.tokens[j]\n      state.tokens[j] = state.tokens[i]\n      state.tokens[i] = token\n    }\n  }\n}\n\n// Walk through delimiter list and replace text tokens with tags\n//\nfunction strikethrough_postProcess (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  postProcess(state, state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters)\n    }\n  }\n}\n\nexport default {\n  tokenize: strikethrough_tokenize,\n  postProcess: strikethrough_postProcess\n}\n","// Process *this* and _that_\n//\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nfunction emphasis_tokenize (state, silent) {\n  const start = state.pos\n  const marker = state.src.charCodeAt(start)\n\n  if (silent) { return false }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false }\n\n  const scanned = state.scanDelims(state.pos, marker === 0x2A)\n\n  for (let i = 0; i < scanned.length; i++) {\n    const token = state.push('text', '', 0)\n    token.content = String.fromCharCode(marker)\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token: state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end: -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open: scanned.can_open,\n      close: scanned.can_close\n    })\n  }\n\n  state.pos += scanned.length\n\n  return true\n}\n\nfunction postProcess (state, delimiters) {\n  const max = delimiters.length\n\n  for (let i = max - 1; i >= 0; i--) {\n    const startDelim = delimiters[i]\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue\n    }\n\n    const endDelim = delimiters[startDelim.end]\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    const isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1\n\n    const ch = String.fromCharCode(startDelim.marker)\n\n    const token_o   = state.tokens[startDelim.token]\n    token_o.type    = isStrong ? 'strong_open' : 'em_open'\n    token_o.tag     = isStrong ? 'strong' : 'em'\n    token_o.nesting = 1\n    token_o.markup  = isStrong ? ch + ch : ch\n    token_o.content = ''\n\n    const token_c   = state.tokens[endDelim.token]\n    token_c.type    = isStrong ? 'strong_close' : 'em_close'\n    token_c.tag     = isStrong ? 'strong' : 'em'\n    token_c.nesting = -1\n    token_c.markup  = isStrong ? ch + ch : ch\n    token_c.content = ''\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = ''\n      state.tokens[delimiters[startDelim.end + 1].token].content = ''\n      i--\n    }\n  }\n}\n\n// Walk through delimiter list and replace text tokens with tags\n//\nfunction emphasis_post_process (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  postProcess(state, state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters)\n    }\n  }\n}\n\nexport default {\n  tokenize: emphasis_tokenize,\n  postProcess: emphasis_post_process\n}\n","// Process [link](<to> \"stuff\")\n\nimport { normalizeReference, isSpace } from '../common/utils.mjs'\n\nexport default function link (state, silent) {\n  let code, label, res, ref\n  let href = ''\n  let title = ''\n  let start = state.pos\n  let parseReference = true\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false }\n\n  const oldPos = state.pos\n  const max = state.posMax\n  const labelStart = state.pos + 1\n  const labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true)\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false }\n\n  let pos = labelEnd + 1\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n    if (pos >= max) { return false }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax)\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str)\n      if (state.md.validateLink(href)) {\n        pos = res.pos\n      } else {\n        href = ''\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos)\n        if (!isSpace(code) && code !== 0x0A) { break }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax)\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str\n        pos = res.pos\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos)\n          if (!isSpace(code) && code !== 0x0A) { break }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true\n    }\n    pos++\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1\n      pos = state.md.helpers.parseLinkLabel(state, pos)\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++)\n      } else {\n        pos = labelEnd + 1\n      }\n    } else {\n      pos = labelEnd + 1\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd) }\n\n    ref = state.env.references[normalizeReference(label)]\n    if (!ref) {\n      state.pos = oldPos\n      return false\n    }\n    href = ref.href\n    title = ref.title\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart\n    state.posMax = labelEnd\n\n    const token_o = state.push('link_open', 'a', 1)\n    const attrs = [['href', href]]\n    token_o.attrs  = attrs\n    if (title) {\n      attrs.push(['title', title])\n    }\n\n    state.linkLevel++\n    state.md.inline.tokenize(state)\n    state.linkLevel--\n\n    state.push('link_close', 'a', -1)\n  }\n\n  state.pos = pos\n  state.posMax = max\n  return true\n}\n","// Process ![image](<src> \"title\")\n\nimport { normalizeReference, isSpace } from '../common/utils.mjs'\n\nexport default function image (state, silent) {\n  let code, content, label, pos, ref, res, title, start\n  let href = ''\n  const oldPos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false }\n\n  const labelStart = state.pos + 2\n  const labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false)\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false }\n\n  pos = labelEnd + 1\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n    if (pos >= max) { return false }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax)\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str)\n      if (state.md.validateLink(href)) {\n        pos = res.pos\n      } else {\n        href = ''\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax)\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str\n      pos = res.pos\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos)\n        if (!isSpace(code) && code !== 0x0A) { break }\n      }\n    } else {\n      title = ''\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos\n      return false\n    }\n    pos++\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1\n      pos = state.md.helpers.parseLinkLabel(state, pos)\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++)\n      } else {\n        pos = labelEnd + 1\n      }\n    } else {\n      pos = labelEnd + 1\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd) }\n\n    ref = state.env.references[normalizeReference(label)]\n    if (!ref) {\n      state.pos = oldPos\n      return false\n    }\n    href = ref.href\n    title = ref.title\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd)\n\n    const tokens = []\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens\n    )\n\n    const token = state.push('image', 'img', 0)\n    const attrs = [['src', href], ['alt', '']]\n    token.attrs = attrs\n    token.children = tokens\n    token.content = content\n\n    if (title) {\n      attrs.push(['title', title])\n    }\n  }\n\n  state.pos = pos\n  state.posMax = max\n  return true\n}\n","// Process autolinks '<protocol:...>'\n\n/* eslint max-len:0 */\nconst EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/\n/* eslint-disable-next-line no-control-regex */\nconst AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.-]{1,31}):([^<>\\x00-\\x20]*)$/\n\nexport default function autolink (state, silent) {\n  let pos = state.pos\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false }\n\n  const start = state.pos\n  const max = state.posMax\n\n  for (;;) {\n    if (++pos >= max) return false\n\n    const ch = state.src.charCodeAt(pos)\n\n    if (ch === 0x3C /* < */) return false\n    if (ch === 0x3E /* > */) break\n  }\n\n  const url = state.src.slice(start + 1, pos)\n\n  if (AUTOLINK_RE.test(url)) {\n    const fullUrl = state.md.normalizeLink(url)\n    if (!state.md.validateLink(fullUrl)) { return false }\n\n    if (!silent) {\n      const token_o   = state.push('link_open', 'a', 1)\n      token_o.attrs   = [['href', fullUrl]]\n      token_o.markup  = 'autolink'\n      token_o.info    = 'auto'\n\n      const token_t   = state.push('text', '', 0)\n      token_t.content = state.md.normalizeLinkText(url)\n\n      const token_c   = state.push('link_close', 'a', -1)\n      token_c.markup  = 'autolink'\n      token_c.info    = 'auto'\n    }\n\n    state.pos += url.length + 2\n    return true\n  }\n\n  if (EMAIL_RE.test(url)) {\n    const fullUrl = state.md.normalizeLink('mailto:' + url)\n    if (!state.md.validateLink(fullUrl)) { return false }\n\n    if (!silent) {\n      const token_o   = state.push('link_open', 'a', 1)\n      token_o.attrs   = [['href', fullUrl]]\n      token_o.markup  = 'autolink'\n      token_o.info    = 'auto'\n\n      const token_t   = state.push('text', '', 0)\n      token_t.content = state.md.normalizeLinkText(url)\n\n      const token_c   = state.push('link_close', 'a', -1)\n      token_c.markup  = 'autolink'\n      token_c.info    = 'auto'\n    }\n\n    state.pos += url.length + 2\n    return true\n  }\n\n  return false\n}\n","// Process html tags\n\nimport { HTML_TAG_RE } from '../common/html_re.mjs'\n\nfunction isLinkOpen (str) {\n  return /^<a[>\\s]/i.test(str)\n}\nfunction isLinkClose (str) {\n  return /^<\\/a\\s*>/i.test(str)\n}\n\nfunction isLetter (ch) {\n  /* eslint no-bitwise:0 */\n  const lc = ch | 0x20 // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */)\n}\n\nexport default function html_inline (state, silent) {\n  if (!state.md.options.html) { return false }\n\n  // Check start\n  const max = state.posMax\n  const pos = state.pos\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false\n  }\n\n  // Quick fail on second char\n  const ch = state.src.charCodeAt(pos + 1)\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false\n  }\n\n  const match = state.src.slice(pos).match(HTML_TAG_RE)\n  if (!match) { return false }\n\n  if (!silent) {\n    const token = state.push('html_inline', '', 0)\n    token.content = match[0]\n\n    if (isLinkOpen(token.content))  state.linkLevel++\n    if (isLinkClose(token.content)) state.linkLevel--\n  }\n  state.pos += match[0].length\n  return true\n}\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\nimport { decodeHTML } from 'entities'\nimport { isValidEntityCode, fromCodePoint } from '../common/utils.mjs'\n\nconst DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i\nconst NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i\n\nexport default function entity (state, silent) {\n  const pos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) return false\n\n  if (pos + 1 >= max) return false\n\n  const ch = state.src.charCodeAt(pos + 1)\n\n  if (ch === 0x23 /* # */) {\n    const match = state.src.slice(pos).match(DIGITAL_RE)\n    if (match) {\n      if (!silent) {\n        const code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10)\n\n        const token   = state.push('text_special', '', 0)\n        token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD)\n        token.markup  = match[0]\n        token.info    = 'entity'\n      }\n      state.pos += match[0].length\n      return true\n    }\n  } else {\n    const match = state.src.slice(pos).match(NAMED_RE)\n    if (match) {\n      const decoded = decodeHTML(match[0])\n      if (decoded !== match[0]) {\n        if (!silent) {\n          const token   = state.push('text_special', '', 0)\n          token.content = decoded\n          token.markup  = match[0]\n          token.info    = 'entity'\n        }\n        state.pos += match[0].length\n        return true\n      }\n    }\n  }\n\n  return false\n}\n","// For each opening emphasis-like marker find a matching closing one\n//\n\nfunction processDelimiters (delimiters) {\n  const openersBottom = {}\n  const max = delimiters.length\n\n  if (!max) return\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  let headerIdx = 0\n  let lastTokenIdx = -2 // needs any value lower than -1\n  const jumps = []\n\n  for (let closerIdx = 0; closerIdx < max; closerIdx++) {\n    const closer = delimiters[closerIdx]\n\n    jumps.push(0)\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx\n    }\n\n    lastTokenIdx = closer.token\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0\n\n    if (!closer.close) continue\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    /* eslint-disable-next-line no-prototype-builtins */\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [-1, -1, -1, -1, -1, -1]\n    }\n\n    const minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)]\n\n    let openerIdx = headerIdx - jumps[headerIdx] - 1\n\n    let newMinOpenerIdx = openerIdx\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      const opener = delimiters[openerIdx]\n\n      if (opener.marker !== closer.marker) continue\n\n      if (opener.open && opener.end < 0) {\n        let isOddMatch = false\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          const lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open\n            ? jumps[openerIdx - 1] + 1\n            : 0\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump\n          jumps[openerIdx] = lastJump\n\n          closer.open  = false\n          opener.end   = closerIdx\n          opener.close = false\n          newMinOpenerIdx = -1\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2\n          break\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx\n    }\n  }\n}\n\nexport default function link_pairs (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  processDelimiters(state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(tokens_meta[curr].delimiters)\n    }\n  }\n}\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n\nexport default function fragments_join (state) {\n  let curr, last\n  let level = 0\n  const tokens = state.tokens\n  const max = state.tokens.length\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level-- // closing tag\n    tokens[curr].level = level\n    if (tokens[curr].nesting > 0) level++ // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr] }\n\n      last++\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last\n  }\n}\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateInline from './rules_inline/state_inline.mjs'\n\nimport r_text from './rules_inline/text.mjs'\nimport r_linkify from './rules_inline/linkify.mjs'\nimport r_newline from './rules_inline/newline.mjs'\nimport r_escape from './rules_inline/escape.mjs'\nimport r_backticks from './rules_inline/backticks.mjs'\nimport r_strikethrough from './rules_inline/strikethrough.mjs'\nimport r_emphasis from './rules_inline/emphasis.mjs'\nimport r_link from './rules_inline/link.mjs'\nimport r_image from './rules_inline/image.mjs'\nimport r_autolink from './rules_inline/autolink.mjs'\nimport r_html_inline from './rules_inline/html_inline.mjs'\nimport r_entity from './rules_inline/entity.mjs'\n\nimport r_balance_pairs from './rules_inline/balance_pairs.mjs'\nimport r_fragments_join from './rules_inline/fragments_join.mjs'\n\n// Parser rules\n\nconst _rules = [\n  ['text',            r_text],\n  ['linkify',         r_linkify],\n  ['newline',         r_newline],\n  ['escape',          r_escape],\n  ['backticks',       r_backticks],\n  ['strikethrough',   r_strikethrough.tokenize],\n  ['emphasis',        r_emphasis.tokenize],\n  ['link',            r_link],\n  ['image',           r_image],\n  ['autolink',        r_autolink],\n  ['html_inline',     r_html_inline],\n  ['entity',          r_entity]\n]\n\n// `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\nconst _rules2 = [\n  ['balance_pairs',   r_balance_pairs],\n  ['strikethrough',   r_strikethrough.postProcess],\n  ['emphasis',        r_emphasis.postProcess],\n  // rules for pairs separate '**' into its own text tokens, which may be left unused,\n  // rule below merges unused segments back with the rest of the text\n  ['fragments_join',  r_fragments_join]\n]\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline () {\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1])\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler()\n\n  for (let i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1])\n  }\n}\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  const pos = state.pos\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const maxNesting = state.md.options.maxNesting\n  const cache = state.cache\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos]\n    return\n  }\n\n  let ok = false\n\n  if (state.level < maxNesting) {\n    for (let i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++\n      ok = rules[i](state, true)\n      state.level--\n\n      if (ok) {\n        if (pos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\") }\n        break\n      }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax\n  }\n\n  if (!ok) { state.pos++ }\n  cache[pos] = state.pos\n}\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const end = state.posMax\n  const maxNesting = state.md.options.maxNesting\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    const prevPos = state.pos\n    let ok = false\n\n    if (state.level < maxNesting) {\n      for (let i = 0; i < len; i++) {\n        ok = rules[i](state, false)\n        if (ok) {\n          if (prevPos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\") }\n          break\n        }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break }\n      continue\n    }\n\n    state.pending += state.src[state.pos++]\n  }\n\n  if (state.pending) {\n    state.pushPending()\n  }\n}\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  const state = new this.State(str, md, env, outTokens)\n\n  this.tokenize(state)\n\n  const rules = this.ruler2.getRules('')\n  const len = rules.length\n\n  for (let i = 0; i < len; i++) {\n    rules[i](state)\n  }\n}\n\nParserInline.prototype.State = StateInline\n\nexport default ParserInline\n","import { Any, Cc, Z, P } from 'uc.micro'\n\nexport default function (opts) {\n  const re = {}\n  opts = opts || {}\n\n  re.src_Any = Any.source\n  re.src_Cc = Cc.source\n  re.src_Z = Z.source\n  re.src_P = P.source\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [re.src_Z, re.src_P, re.src_Cc].join('|')\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [re.src_Z, re.src_Cc].join('|')\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  const text_separators = '[><\\uff5c]'\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')'\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?'\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?'\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')' +\n    '(?!' + (opts['---'] ? '-(?!--)|' : '-|') + '_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))'\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n\n          // allow `I'm_king` if no pair found\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-])|' +\n\n          // google has many dots in \"google search\" links (#66, #81).\n          // github has ... in commit range links,\n          // Restrict to\n          // - english\n          // - percent-encoded\n          // - parts of file path\n          // - params separator\n          // until more examples found.\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' +\n\n          '\\\\.(?!' + re.src_ZCc + '|[.]|$)|' +\n          (opts['---']\n            ? '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            : '\\\\-+|'\n          ) +\n          // allow `,,,` in paths\n          ',(?!' + re.src_ZCc + '|$)|' +\n\n          // allow `;` if not followed by space-like char\n          ';(?!' + re.src_ZCc + '|$)|' +\n\n          // allow `!!!` in paths, but not at the end\n          '\\\\!+(?!' + re.src_ZCc + '|[!]|$)|' +\n\n          '\\\\?(?!' + re.src_ZCc + '|[?]|$)' +\n        ')+' +\n      '|\\\\/' +\n    ')?'\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*'\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}'\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')'\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')'\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/* _root */ + ')' +\n    ')'\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')'\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))'\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator\n\n  //\n  // Main rules\n  //\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))'\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')'\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')'\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')'\n\n  return re\n}\n","import reFactory from './lib/re.mjs'\n\n//\n// Helpers\n//\n\n// Merge objects\n//\nfunction assign (obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1)\n\n  sources.forEach(function (source) {\n    if (!source) { return }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key]\n    })\n  })\n\n  return obj\n}\n\nfunction _class (obj) { return Object.prototype.toString.call(obj) }\nfunction isString (obj) { return _class(obj) === '[object String]' }\nfunction isObject (obj) { return _class(obj) === '[object Object]' }\nfunction isRegExp (obj) { return _class(obj) === '[object RegExp]' }\nfunction isFunction (obj) { return _class(obj) === '[object Function]' }\n\nfunction escapeRE (str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&') }\n\n//\n\nconst defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n}\n\nfunction isOptionsObj (obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    /* eslint-disable-next-line no-prototype-builtins */\n    return acc || defaultOptions.hasOwnProperty(k)\n  }, false)\n}\n\nconst defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http = new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        )\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length\n      }\n      return 0\n    }\n  },\n  'https:': 'http:',\n  'ftp:': 'http:',\n  '//': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http = new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        )\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0 }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0 }\n        return tail.match(self.re.no_http)[0].length\n      }\n      return 0\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.mailto) {\n        self.re.mailto = new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        )\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length\n      }\n      return 0\n    }\n  }\n}\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\n/* eslint-disable-next-line max-len */\nconst tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]'\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nconst tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|')\n\nfunction resetScanCache (self) {\n  self.__index__ = -1\n  self.__text_cache__ = ''\n}\n\nfunction createValidator (re) {\n  return function (text, pos) {\n    const tail = text.slice(pos)\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length\n    }\n    return 0\n  }\n}\n\nfunction createNormalizer () {\n  return function (match, self) {\n    self.normalize(match)\n  }\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile (self) {\n  // Load & clone RE patterns.\n  const re = self.re = reFactory(self.__opts__)\n\n  // Define dynamic patterns\n  const tlds = self.__tlds__.slice()\n\n  self.onCompile()\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re)\n  }\n  tlds.push(re.src_xn)\n\n  re.src_tlds = tlds.join('|')\n\n  function untpl (tpl) { return tpl.replace('%TLDS%', re.src_tlds) }\n\n  re.email_fuzzy = RegExp(untpl(re.tpl_email_fuzzy), 'i')\n  re.link_fuzzy = RegExp(untpl(re.tpl_link_fuzzy), 'i')\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i')\n  re.host_fuzzy_test = RegExp(untpl(re.tpl_host_fuzzy_test), 'i')\n\n  //\n  // Compile each schema\n  //\n\n  const aliases = []\n\n  self.__compiled__ = {} // Reset compiled data\n\n  function schemaError (name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val)\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    const val = self.__schemas__[name]\n\n    // skip disabled methods\n    if (val === null) { return }\n\n    const compiled = { validate: null, link: null }\n\n    self.__compiled__[name] = compiled\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate)\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate\n      } else {\n        schemaError(name, val)\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer()\n      } else {\n        schemaError(name, val)\n      }\n\n      return\n    }\n\n    if (isString(val)) {\n      aliases.push(name)\n      return\n    }\n\n    schemaError(name, val)\n  })\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize\n  })\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() }\n\n  //\n  // Build schema condition\n  //\n  const slist = Object.keys(self.__compiled__)\n    .filter(function (name) {\n      // Filter disabled & fake schemas\n      return name.length > 0 && self.__compiled__[name]\n    })\n    .map(escapeRE)\n    .join('|')\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i')\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig')\n  self.re.schema_at_start = RegExp('^' + self.re.schema_search.source, 'i')\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  )\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self)\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match (self, shift) {\n  const start = self.__index__\n  const end = self.__last_index__\n  const text = self.__text_cache__.slice(start, end)\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema = self.__schema__.toLowerCase()\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index = start + shift\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw = text\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text = text\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url = text\n}\n\nfunction createMatch (self, shift) {\n  const match = new Match(self, shift)\n\n  self.__compiled__[match.schema].normalize(match, self)\n\n  return match\n}\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt (schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options)\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas\n      schemas = {}\n    }\n  }\n\n  this.__opts__ = assign({}, defaultOptions, options)\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__ = -1\n  this.__last_index__ = -1 // Next scan position\n  this.__schema__ = ''\n  this.__text_cache__ = ''\n\n  this.__schemas__ = assign({}, defaultSchemas, schemas)\n  this.__compiled__ = {}\n\n  this.__tlds__ = tlds_default\n  this.__tlds_replaced__ = false\n\n  this.re = {}\n\n  compile(this)\n}\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add (schema, definition) {\n  this.__schemas__[schema] = definition\n  compile(this)\n  return this\n}\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set (options) {\n  this.__opts__ = assign(this.__opts__, options)\n  return this\n}\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test (text) {\n  // Reset scan cache\n  this.__text_cache__ = text\n  this.__index__ = -1\n\n  if (!text.length) { return false }\n\n  let m, ml, me, len, shift, next, re, tld_pos, at_pos\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search\n    re.lastIndex = 0\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex)\n      if (len) {\n        this.__schema__ = m[2]\n        this.__index__ = m.index + m[1].length\n        this.__last_index__ = m.index + m[0].length + len\n        break\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test)\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n          shift = ml.index + ml[1].length\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__ = ''\n            this.__index__ = shift\n            this.__last_index__ = ml.index + ml[0].length\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@')\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n        shift = me.index + me[1].length\n        next = me.index + me[0].length\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__ = 'mailto:'\n          this.__index__ = shift\n          this.__last_index__ = next\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0\n}\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest (text) {\n  return this.re.pretest.test(text)\n}\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt (text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this)\n}\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match (text) {\n  const result = []\n  let shift = 0\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift))\n    shift = this.__last_index__\n  }\n\n  // Cut head if cache was used\n  let tail = shift ? text.slice(shift) : text\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift))\n\n    tail = tail.slice(this.__last_index__)\n    shift += this.__last_index__\n  }\n\n  if (result.length) {\n    return result\n  }\n\n  return null\n}\n\n/**\n * LinkifyIt#matchAtStart(text) -> Match|null\n *\n * Returns fully-formed (not fuzzy) link if it starts at the beginning\n * of the string, and null otherwise.\n **/\nLinkifyIt.prototype.matchAtStart = function matchAtStart (text) {\n  // Reset scan cache\n  this.__text_cache__ = text\n  this.__index__ = -1\n\n  if (!text.length) return null\n\n  const m = this.re.schema_at_start.exec(text)\n  if (!m) return null\n\n  const len = this.testSchemaAt(text, m[2], m[0].length)\n  if (!len) return null\n\n  this.__schema__ = m[2]\n  this.__index__ = m.index + m[1].length\n  this.__last_index__ = m.index + m[0].length + len\n\n  return createMatch(this, 0)\n}\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds (list, keepOld) {\n  list = Array.isArray(list) ? list : [list]\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice()\n    this.__tlds_replaced__ = true\n    compile(this)\n    return this\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n    .sort()\n    .filter(function (el, idx, arr) {\n      return el !== arr[idx - 1]\n    })\n    .reverse()\n\n  compile(this)\n  return this\n}\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize (match) {\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url\n  }\n}\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile () {\n}\n\nexport default LinkifyIt\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7F]/; // Note: U+007F DEL is excluded too.\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, callback) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = callback(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {String} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(domain, callback) {\n\tconst parts = domain.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tdomain = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tdomain = domain.replace(regexSeparators, '\\x2E');\n\tconst labels = domain.split('.');\n\tconst encoded = map(labels, callback).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = codePoints => String.fromCodePoint(...codePoints);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint >= 0x30 && codePoint < 0x3A) {\n\t\treturn 26 + (codePoint - 0x30);\n\t}\n\tif (codePoint >= 0x41 && codePoint < 0x5B) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint >= 0x61 && codePoint < 0x7B) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tconst oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\t\t\tif (digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tconst inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tconst basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue === n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.3.1',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n","// markdown-it default options\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: false,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: false,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 100\n  },\n\n  components: {\n    core: {},\n    block: {},\n    inline: {}\n  }\n}\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: false,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: false,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 20\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'fragments_join'\n      ]\n    }\n  }\n}\n","// Commonmark default options\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: true,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: true,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 20\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'fragments_join'\n      ]\n    }\n  }\n}\n","// Main parser class\n\nimport * as utils from './common/utils.mjs'\nimport * as helpers from './helpers/index.mjs'\nimport Renderer from './renderer.mjs'\nimport ParserCore from './parser_core.mjs'\nimport ParserBlock from './parser_block.mjs'\nimport ParserInline from './parser_inline.mjs'\nimport LinkifyIt from 'linkify-it'\nimport * as mdurl from 'mdurl'\nimport punycode from 'punycode.js'\n\nimport cfg_default from './presets/default.mjs'\nimport cfg_zero from './presets/zero.mjs'\nimport cfg_commonmark from './presets/commonmark.mjs'\n\nconst config = {\n  default: cfg_default,\n  zero: cfg_zero,\n  commonmark: cfg_commonmark\n}\n\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nconst BAD_PROTO_RE = /^(vbscript|javascript|file|data):/\nconst GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/\n\nfunction validateLink (url) {\n  // url should be normalized at this point, and existing entities are decoded\n  const str = url.trim().toLowerCase()\n\n  return BAD_PROTO_RE.test(str) ? GOOD_DATA_RE.test(str) : true\n}\n\nconst RECODE_HOSTNAME_FOR = ['http:', 'https:', 'mailto:']\n\nfunction normalizeLink (url) {\n  const parsed = mdurl.parse(url, true)\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname)\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed))\n}\n\nfunction normalizeLinkText (url) {\n  const parsed = mdurl.parse(url, true)\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname)\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%')\n}\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.mjs) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.mjs) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.mjs) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.mjs) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>` or `<code>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre><code class=\"hljs\">' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre><code class=\"hljs\">' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt (presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options)\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {}\n      presetName = 'default'\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline()\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock()\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore()\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.mjs).\n   **/\n  this.renderer = new Renderer()\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.mjs)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt()\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.mjs).\n   **/\n  this.utils = utils\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers)\n\n  this.options = {}\n  this.configure(presetName)\n\n  if (options) { this.set(options) }\n}\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options)\n  return this\n}\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  const self = this\n\n  if (utils.isString(presets)) {\n    const presetName = presets\n    presets = config[presetName]\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name') }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty') }\n\n  if (presets.options) { self.set(presets.options) }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules)\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2)\n      }\n    })\n  }\n  return this\n}\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  let result = []\n\n  if (!Array.isArray(list)) { list = [list] }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true))\n  }, this)\n\n  result = result.concat(this.inline.ruler2.enable(list, true))\n\n  const missed = list.filter(function (name) { return result.indexOf(name) < 0 })\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed)\n  }\n\n  return this\n}\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  let result = []\n\n  if (!Array.isArray(list)) { list = [list] }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true))\n  }, this)\n\n  result = result.concat(this.inline.ruler2.disable(list, true))\n\n  const missed = list.filter(function (name) { return result.indexOf(name) < 0 })\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed)\n  }\n  return this\n}\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  const args = [this].concat(Array.prototype.slice.call(arguments, 1))\n  plugin.apply(plugin, args)\n  return this\n}\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String')\n  }\n\n  const state = new this.core.State(src, this, env)\n\n  this.core.process(state)\n\n  return state.tokens\n}\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {}\n\n  return this.renderer.render(this.parse(src, env), this.options, env)\n}\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  const state = new this.core.State(src, this, env)\n\n  state.inlineMode = true\n  this.core.process(state)\n\n  return state.tokens\n}\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {}\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env)\n}\n\nexport default MarkdownIt\n","/* ------------------------------------------------------------------\n   Manuscript tab renderer\n   ------------------------------------------------------------------ */\n\nimport MarkdownIt from 'markdown-it';\nimport { listFiles, readNote, deleteNote } from '../storage';\nimport { ManuscriptNote, AnyNote }         from '../models';\nimport { parseNote }                       from '../utils/markdown';\n\nconst md = new MarkdownIt();\n\n/** Render every “Manuscript” note for the selected chapter */\nexport async function renderManuscriptTab(book: string, chap: string) {\n  const panel = document.getElementById('tab-content') as HTMLElement;\n  panel.innerHTML = '<p class=\"italic\">Loading…</p>';\n\n  /* ── Collect notes ------------------------------------------------ */\n  const pairs: { note: ManuscriptNote; file: any }[] = [];\n\n  for (const file of await listFiles(book, chap)) {\n    /* readNote ⇒ raw Markdown string */\n    const raw  = (await readNote(file)) as string;\n    const note = parseNote(raw) as AnyNote | null;\n\n    if (note?.type === 'manuscript') {\n      pairs.push({ note: note as ManuscriptNote, file });\n    }\n  }\n\n  /* ── Empty state -------------------------------------------------- */\n  panel.innerHTML = '';\n  if (!pairs.length) {\n    panel.textContent = 'No manuscript entry yet…';\n    return;\n  }\n\n  /* ── Render ------------------------------------------------------- */\n  pairs.forEach(({ note, file }) => {\n    /* article wrapper */\n    const art = document.createElement('article');\n    art.className = 'prose dark:prose-invert mb-6';\n\n    /* header + delete */\n    const header = document.createElement('h2');\n    header.className =\n      'flex justify-between items-center font-semibold';\n    header.innerHTML = `\n      <span>${note.title}\n        <small class=\"text-gray-500\">(${note.range})</small>\n      </span>\n      <button class=\"text-red-500 hover:text-red-700\" title=\"Delete\">🗑</button>\n    `;\n    header\n      .querySelector('button')!\n      .addEventListener('click', async () => {\n        if (!confirm(`Delete manuscript “${note.title}”?`)) return;\n        await deleteNote(file);\n        renderManuscriptTab(book, chap); // refresh list\n      });\n\n    /* body */\n    const body = document.createElement('div');\n    body.innerHTML = md.render(note.content);\n\n    art.append(header, body);\n    panel.appendChild(art);\n  });\n}\n","/* ------------------------------------------------------------------\n   Commentary tab renderer\n   ------------------------------------------------------------------ */\n\nimport MarkdownIt from 'markdown-it';\nimport { listFiles, readNote, deleteNote } from '../storage';\nimport { CommentaryNote, AnyNote } from '../models';\nimport { parseNote }               from '../utils/markdown';\n\nconst md = new MarkdownIt();\n\n/** Render all “Commentary” notes for the current chapter */\nexport async function renderCommentaryTab(book: string, chap: string) {\n  const panel = document.getElementById('tab-content') as HTMLElement;\n  panel.innerHTML = '<p class=\"italic\">Loading…</p>';\n\n  /* ── Collect notes ------------------------------------------------ */\n  const pairs: { note: CommentaryNote; file: any }[] = [];\n\n  for (const file of await listFiles(book, chap)) {\n    /* readNote ⇒ raw Markdown string */\n    const raw = (await readNote(file)) as string;\n    const maybe = parseNote(raw) as AnyNote | null;\n\n    if (maybe?.type === 'commentary') {\n      pairs.push({ note: maybe as CommentaryNote, file });\n    }\n  }\n\n  /* ── Empty state -------------------------------------------------- */\n  panel.innerHTML = '';\n  if (!pairs.length) {\n    panel.textContent = 'No commentary yet…';\n    return;\n  }\n\n  /* ── Render each commentary -------------------------------------- */\n  pairs.forEach(({ note, file }) => {\n    /* wrapper */\n    const wrap = document.createElement('section');\n    wrap.className = 'mb-6';\n\n    /* header with delete */\n    const header = document.createElement('h2');\n    header.className =\n      'flex justify-between items-center font-semibold mb-2';\n    header.innerHTML = `\n      <span>${note.title}\n        <small class=\"text-gray-500\">(${note.range})</small>\n      </span>\n      <button class=\"text-red-500 hover:text-red-700\" title=\"Delete\">🗑</button>\n    `;\n    header\n      .querySelector('button')!\n      .addEventListener('click', async () => {\n        if (!confirm(`Delete commentary “${note.title}”?`)) return;\n        await deleteNote(file);\n        renderCommentaryTab(book, chap); // refresh\n      });\n\n    /* body */\n    const body = document.createElement('div');\n    body.className = 'prose dark:prose-invert';\n    body.innerHTML = md.render(note.content);\n\n    wrap.append(header, body);\n    panel.appendChild(wrap);\n  });\n}\n","/* src/drawer.ts — complete */\n\nimport { createNote } from './storage';\nimport { store } from './store';\nimport { OutlineNote, ManuscriptNote, CommentaryNote } from './models';\nimport { renderOutlineTab } from './renderers/outline';\nimport { renderManuscriptTab } from './renderers/manuscript';\nimport { renderCommentaryTab } from './renderers/commentary';\nimport { id } from './utils/dom';\n\n/* button wiring */\nexport function initDrawerLogic() {\n  id('btn-open-outline')   ?.addEventListener('click', () => open('outline'));\n  id('btn-open-manuscript')?.addEventListener('click', () => open('manuscript'));\n  id('btn-open-commentary')?.addEventListener('click', () => open('commentary'));\n  id('btn-close-drawer')   ?.addEventListener('click', close);\n}\n\ntype Mode = 'outline' | 'manuscript' | 'commentary';\n\nfunction open(mode: Mode) {\n  id('slide-drawer').classList.remove('translate-x-full');\n  const { book, chapter } = store.snapshot;\n  if (mode === 'outline')        renderOutlineForm(book, chapter);\n  else if (mode === 'manuscript') renderManuscriptForm(book, chapter);\n  else                            renderCommentaryForm(book, chapter);\n}\nfunction close() { id('slide-drawer').classList.add('translate-x-full'); }\n\n/* ─────────────── OUTLINE FORM ─────────────── */\n\nfunction renderOutlineForm(book: string, chap: string) {\n  id('drawer-title').textContent = 'New Outline';\n  const body = id('drawer-body');\n  body.innerHTML = header(book, chap);\n\n  const titleInp = input('Outline Title…');\n  const rangeInp = input('Verse Range…');\n\n  const pointsDiv = div('space-y-4 mb-4');\n  const addMain = button('＋ Add Main Point', 'bg-indigo-600 text-white',\n    () => pointsDiv.appendChild(pointBlock())\n  );\n\n  body.append(titleInp, rangeInp, pointsDiv, addMain, footer(async () => {\n    const items = Array.from(pointsDiv.children).map(parsePoint);\n    const note: OutlineNote = {\n      type: 'outline',\n      title: titleInp.value.trim(),\n      range: rangeInp.value.trim(),\n      items\n    };\n    await createNote(book, chap, note);\n    close(); renderOutlineTab(book, chap);\n  }));\n}\n\n/* ─────────────── MANUSCRIPT FORM ───────────── */\n\nfunction renderManuscriptForm(book: string, chap: string) {\n  id('drawer-title').textContent = 'New Manuscript';\n  const body = id('drawer-body');\n  body.innerHTML = header(book, chap);\n\n  const titleInp = input('Manuscript Title…');\n  const rangeInp = input('Verse Range…');\n  const ta       = textarea('Content…');\n\n  body.append(titleInp, rangeInp, ta, footer(async () => {\n    const note: ManuscriptNote = {\n      type: 'manuscript',\n      title: titleInp.value.trim(),\n      range: rangeInp.value.trim(),\n      content: ta.value.trim()\n    };\n    await createNote(book, chap, note);\n    close(); renderManuscriptTab(book, chap);\n  }));\n}\n\n/* ─────────────── COMMENTARY FORM ───────────── */\n\nfunction renderCommentaryForm(book: string, chap: string) {\n  id('drawer-title').textContent = 'New Commentary';\n  const body = id('drawer-body');\n  body.innerHTML = header(book, chap);\n\n  const titleInp = input('Commentary Title…');\n  const rangeInp = input('Verse Range…');\n  const ta       = textarea('Commentary…');\n\n  body.append(titleInp, rangeInp, ta, footer(async () => {\n    const note: CommentaryNote = {\n      type: 'commentary',\n      title: titleInp.value.trim(),\n      range: rangeInp.value.trim(),\n      content: ta.value.trim()\n    };\n    await createNote(book, chap, note);\n    close(); renderCommentaryTab(book, chap);\n  }));\n}\n\n/* ─────────────── helpers ─────────────── */\n\nconst inputCls =\n  'w-full p-2 mb-2 border rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 border-gray-300 dark:border-gray-600';\n\nconst input    = (ph: string) => Object.assign(document.createElement('input'),    { className: inputCls, placeholder: ph });\nconst textarea = (ph: string) => Object.assign(document.createElement('textarea'), { className: inputCls, rows: 8, placeholder: ph });\nconst div      = (cls = '') => Object.assign(document.createElement('div'), { className: cls });\nconst button   = (txt: string, cls: string, cb: () => void) =>\n  Object.assign(document.createElement('button'), {\n    type: 'button', textContent: txt,\n    className: `px-4 py-2 rounded hover:opacity-90 ${cls}`,\n    onclick: cb\n  });\n\nconst header = (b: string, c: string) =>\n  `<p class=\"text-sm mb-2\">Book <strong>${b}</strong> • Chapter <strong>${c}</strong></p>`;\n\nconst footer = (save: () => void) => {\n  const wrap = div('flex justify-end space-x-2 mt-4');\n  wrap.append(\n    button('Cancel', 'bg-gray-300', close),\n    button('Save',   'bg-green-600 text-white', save)\n  );\n  return wrap;\n};\n\nfunction pointBlock() {\n  const wrap = div('p-3 border rounded bg-gray-50 dark:bg-gray-700 space-y-2');\n  const lbl  = input('Main point…');\n  const vrs  = input('Verse (opt)…');\n\n  const sub = div('pl-4 space-y-2');\n  sub.appendChild(button('＋ Sub-point', 'text-sm text-indigo-600',\n    () => sub.appendChild(input('Sub-point…'))\n  ));\n\n  wrap.append(lbl, vrs, sub);\n  return wrap;\n}\nfunction parsePoint(el: Element) {\n  const [txt, vrs] = el.querySelectorAll<HTMLInputElement>('> input');\n  const subs = Array.from(el.querySelectorAll<HTMLInputElement>('.pl-4 input'))\n                    .map(s => s.value.trim()).filter(Boolean);\n  return { text: txt.value.trim(), verse: vrs.value.trim(), subpoints: subs };\n}\n","/* src/utils/toast.ts\n   Simple in-app toast / snackbar helper.\n   CSS classes assume Tailwind. */\n\nlet holder: HTMLDivElement | null = null;\n\nexport function toast(msg: string, ms = 2500) {\n  if (!holder) {\n    holder = Object.assign(document.createElement('div'), {\n      className:\n        'fixed bottom-6 left-1/2 -translate-x-1/2 z-[100] space-y-2',\n    });\n    document.body.appendChild(holder);\n  }\n\n  const div = document.createElement('div');\n  div.textContent = msg;\n  div.className =\n    'px-4 py-2 rounded bg-gray-800 text-gray-100 shadow-lg animate-fade-in';\n  holder.appendChild(div);\n\n  setTimeout(() => div.remove(), ms);\n}\n","/* src/importExport.ts */\n\nimport { listFiles, readNote, writeNote } from './storage';\nimport { parseNote, stringifyNote }       from './utils/markdown';\nimport { AnyNote }                        from './models';\nimport { toast }                          from './utils/toast';\n\n/*───────────────── Web-worker boot ─────────────────────────────*/\nconst zipWorker = new Worker(\n  new URL('./workers/zipWorker.ts', import.meta.url),\n  { type: 'module' }\n);\n\ntype ZipOk   = { ok: true;  buffer: Uint8Array };\ntype UnzipOk = { ok: true;  files: Record<string, string> };\ntype Fail    = { ok: false };\n\nfunction zip(files: Record<string, string>): Promise<Uint8Array> {\n  return new Promise((res, rej) => {\n    zipWorker.onmessage = (e: MessageEvent<ZipOk | Fail>) =>\n      e.data.ok ? res(e.data.buffer) : rej(new Error('zip failed'));\n    zipWorker.postMessage({ cmd: 'zip', files });\n  });\n}\n\nfunction unzip(buf: Uint8Array): Promise<Record<string, string>> {\n  return new Promise((res, rej) => {\n    zipWorker.onmessage = (e: MessageEvent<UnzipOk | Fail>) =>\n      e.data.ok ? res(e.data.files) : rej(new Error('unzip failed'));\n    zipWorker.postMessage({ cmd: 'unzip', buffer: buf });\n  });\n}\n\n/*───────────────── Public init (hook buttons) ─────────────────*/\nexport function initImportExportButtons() {\n  const impBtn = document.getElementById('btn-import');\n  const expBtn = document.getElementById('btn-export');\n  if (!impBtn || !expBtn) return;\n\n  /* hidden file picker */\n  const pickZip = Object.assign(document.createElement('input'), {\n    type: 'file',\n    accept: '.zip',\n    className: 'hidden',\n  });\n  document.body.appendChild(pickZip);\n\n  /* EXPORT ----------------------------------------------------*/\n  expBtn.addEventListener('click', async () => {\n    try {\n      toast('Building ZIP…');\n      const files = await collectAllNotes();\n      const buf   = await zip(files);\n      const blob  = new Blob([buf], { type: 'application/zip' });\n      const url   = URL.createObjectURL(blob);\n      Object.assign(document.createElement('a'), {\n        href: url,\n        download: 'expositor-notes.zip',\n      }).click();\n      URL.revokeObjectURL(url);\n      toast('✅ ZIP downloaded');\n    } catch (err) {\n      console.error(err);\n      toast('❌ Export failed');\n    }\n  });\n\n  /* IMPORT ----------------------------------------------------*/\n  impBtn.addEventListener('click', () => pickZip.click());\n  pickZip.addEventListener('change', async () => {\n    const file = pickZip.files?.[0];\n    if (!file) return;\n\n    try {\n      toast('Importing…');\n      const files = await unzip(new Uint8Array(await file.arrayBuffer()));\n      let count   = 0;\n      for (const [path, md] of Object.entries(files)) {\n        const note = parseNote(md);\n        if (!note) continue;                     // skip malformed\n        await writeNote({ name: path } as any, note);\n        count++;\n      }\n      toast(`✅ Imported ${count} notes`);\n    } catch (err) {\n      console.error(err);\n      toast('❌ Import failed');\n    } finally {\n      pickZip.value = '';\n    }\n  });\n}\n\n/*───────────────── Helpers ────────────────────────────────────*/\nasync function collectAllNotes() {\n  const manifest = (window as any).manifest as Record<string, number>;\n  const out: Record<string, string> = {};\n\n  for (const [book, total] of Object.entries(manifest)) {\n    for (let c = 1; c <= total; c++) {\n      const chap = c.toString();\n      for (const f of await listFiles(book, chap)) {\n        const raw    = await readNote(f);\n        const parsed = parseNote(raw ?? '');\n        if (!parsed) continue;                   // skip if unparsable\n        const key    = `${book}/${chap}/${f.name}`;\n        out[key]     = stringifyNote(parsed as AnyNote);\n      }\n    }\n  }\n  return out;\n}\n","/* src/index.ts — COMPLETE REPLACEMENT */\n\nimport './style.css';\n\n/* UI boot */\nimport { initToggles, initDraggable, initSettings } from './layout';\nimport { renderSidebar }        from './sidebar';\nimport { renderChapterContent } from './renderers/chapter';\nimport { initDrawerLogic }      from './drawer';\nimport { initImportExportButtons } from './importExport';\n\nimport { store } from './store';\n\n/*──────────────── 1. load manifest ────────────────*/\nlet manifest: Record<string, number> = {};\n(async () => {\n  const res = await fetch('/data/manifest.json');\n  manifest  = await res.json();\n  (window as any).manifest = manifest;           // global for import/export\n\n  /*──────────────── 2. render sidebar ──────────*/\n  renderSidebar(Object.keys(manifest));\n\n  /*──────────────── 3. init widgets ────────────*/\n  initToggles();\n  initDraggable();\n  initSettings();\n  initDrawerLogic();\n  initImportExportButtons();\n\n  /*──────────────── 4. default selection ───────*/\n  const [firstBook] = Object.keys(manifest);\n  store.set('book', firstBook);\n  store.set('chapter', '1');\n  renderChapterContent(firstBook, '1');\n})();\n"],"names":["id","button","text","className","onClick","btn","val","type","isBuffer","name","err","isObject","require$$0","o","len","i","obj","assign","a","b","key","typeOf","extend","require$$1","input","options","file","defaults","opts","delim","lines","sections","section","content","stack","initSections","closeSection","line","ln","subject","sequence","target","source","index","length","sourceKeys","string","count","result","cycle","number","common","YAMLException","reason","mark","compact","Mark","buffer","position","column","indent","maxLength","head","start","tail","end","snippet","where","map","style","alias","Type","tag","data","require$$2","schema","exclude","includedSchema","currentType","previousType","previousIndex","collectType","Schema","definition","schemas","types","require$$3","max","object","c","hasDigits","ch","value","sign","base","digits","v","d","res","require$$4","require$$5","match","year","month","day","hour","minute","second","fraction","delta","tz_hour","tz_minute","date","_require","require","code","idx","bitlen","tailbits","bits","_hasOwnProperty","_toString","objectKeys","pair","pairKey","pairHasKey","keys","require$$6","require$$7","regexp","modifiers","isRegExp","ast","params","body","param","isFunction","DEFAULT_SAFE_SCHEMA","DEFAULT_FULL_SCHEMA","_class","lc","State","state","message","args","major","minor","handle","prefix","checkJson","_position","_length","_character","_result","destination","overridableKeys","quantity","keyTag","keyNode","valueNode","startLine","startPos","allowComments","checkIndent","lineBreaks","nodeIndent","withinFlowCollection","preceding","following","captureStart","captureEnd","hasPendingContent","_line","_lineStart","_lineIndent","_kind","hexLength","hexResult","tmp","readNext","_tag","_anchor","terminator","isPair","isExplicitPair","isMapping","folding","chomping","didReadContent","detectedIndent","textIndent","emptyLines","atMoreIndented","detected","flowIndent","allowCompact","_pos","atExplicitKey","isVerbatim","isNamed","tagHandle","tagName","parentIndent","nodeContext","allowToSeek","allowBlockStyles","allowBlockScalars","allowBlockCollections","indentStatus","atNewLine","hasContent","typeIndex","typeQuantity","blockIndent","documentStart","directiveName","directiveArgs","hasDirectives","nullpos","iterator","documents","loader","character","spaces","ind","next","level","str","prev","leadingSpaceRe","singleLineOnly","indentPerLevel","lineWidth","testAmbiguousType","char","prev_char","hasLineBreak","hasFoldableLine","shouldTrackWidth","previousLineBreak","plain","iskey","testAmbiguity","indentIndicator","clip","keep","chomp","width","lineRe","nextLF","prevMoreIndented","moreIndented","breakRe","curr","nextChar","escapeSeq","objectKeyList","objectKey","objectValue","pairBuffer","explicitPair","explicit","typeList","block","objectOrArray","duplicateIndex","duplicate","arrayLevel","objects","duplicatesIndexes","dumper","jsYaml","require$$8","require$$9","stripBom","exports","substr","engines","utils","engine","getEngine","stringify","language","open","close","matter","buf","newline","excerpt","sep","delimiter","toFile","parse","cached","openLen","closeIndex","filepath","md","note","title","range","created","updated","front","FSStorage","root","h","listFiles","book","chap","chapDir","out","n","w","fileExists","constructors","request","promise","resolve","reject","unlisten","success","error","tx","done","complete","prop","receiver","callback","func","newValue","version","blocked","upgrade","blocking","terminated","openPromise","event","db","targetFuncName","useIndex","isWrite","method","storeName","oldTraps","cachedFunc","cursor","proxiedCursor","deleteNote","allKeys","k","idbRead","idbDelete","idbWrite","fileName","exists","f","idbExists","h1","h2","cont","sb","rp","drag","onMove","e","rect","onUp","onDown","area","dir","esvKey","loadSettingKV","label","inp","saveSettingKV","url","_a","l","cb","center","m","t","p","books","container","ul","li","sub","liN","btnN","panel","pairs","raw","wrapper","header","item","txt","cache","decode","seq","b1","b2","chr","b3","b4","encode","keepEscaped","nextCode","slashesDenoteHost","u","lowerProto","hec","slashes","rest","simplePath","proto","hostEnd","auth","atSign","host","ipv6Hostname","hostparts","part","newpart","j","validParts","notHost","bit","hash","qm","port","fromCodePoint","codePoint","output","CharCodes","BinTrieFlags","EntityDecoderState","DecodingMode","decodeTree","emitCodePoint","errors","decodeMode","offset","digitCount","startIdx","lastCp","expectedLength","current","valueLength","consumed","ret","decoder","lastIndex","nodeIdx","branchCount","jumpOffset","lo","hi","mid","midVal","mode","isString","src","pos","newElements","surrogate1","surrogate2","decoded","escaped","entity","escapeRE","ucmicro.P","ucmicro.S","disableNested","found","marker","prevPos","oldPos","labelEnd","prev_state","tokens","env","slf","token","info","langName","langAttrs","arr","highlighted","tmpAttrs","tmpToken","renderAttrs","renderToken","needLf","nextToken","rules","self","chains","rule","altName","chain","fn","opt","beforeName","ruleName","afterName","list","ignoreInvalid","chainName","nesting","attrIndex","attrs","attrPush","attrData","attrSet","attrGet","attrJoin","tok","isLinkOpen","isLinkClose","linkify","blockTokens","htmlLinkLevel","currentToken","links","nodes","lastPos","fullUrl","urlText","token_o","token_t","token_c","inlineTokens","inside_autolink","blkIdx","thisLevel","OUTER","canOpen","canClose","isSingle","lastChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","openQuote","closeQuote","last","_rules","r_normalize","r_block","r_inline","r_linkify","r_replacements","r_smartquotes","r_text_join","s","indent_found","isEmpty","skipEmptyLines","from","skipSpaces","skipSpacesBack","min","skipChars","skipCharsBack","getLines","begin","keepLastLF","queue","lineIndent","lineStart","first","isEscaped","endLine","silent","nextLine","firstCh","secondCh","lineText","columns","aligns","columnCount","oldParentType","terminatorRules","token_to","tableLines","token_tho","token_htro","token_ho","token_il","tbodyLines","autocompletedCells","terminate","token_tbo","token_tro","token_tdo","mem","markup","haveEndMarker","oldLineMax","oldBMarks","oldBSCount","oldSCount","oldTShift","lastLineEmpty","isOutdented","initial","spaceAfterMarker","adjustTab","oldIndent","cnt","tight","isTerminatingParagraph","isOrdered","markerValue","posAfterMarker","markerCharCode","listTokIdx","listLines","prevEmptyEnd","contentStart","indentAfterMarker","itemLines","oldTight","oldListIndent","_endLine","getNextLine","isContinuation","lineContent","destRes","href","destEndPos","destEndLineNo","titleRes","token_i","r_table","r_code","r_fence","r_blockquote","r_hr","r_list","r_reference","r_html_block","r_heading","r_lheading","r_paragraph","maxNesting","hasEmptyLines","prevLine","ok","outTokens","token_meta","canSplitWord","left_flanking","right_flanking","link","pmax","ws","ch1","escapedStr","ch2","origStr","openerLength","matchEnd","matchStart","closerLength","scanned","postProcess","delimiters","loneMarkers","startDelim","endDelim","tokens_meta","isStrong","ref","parseReference","labelStart","openersBottom","headerIdx","lastTokenIdx","jumps","closerIdx","closer","minOpenerIdx","openerIdx","newMinOpenerIdx","opener","isOddMatch","lastJump","r_text","r_newline","r_escape","r_backticks","r_link","r_image","r_autolink","r_html_inline","r_entity","r_balance_pairs","r_fragments_join","re","text_separators","acc","tlds","untpl","tpl","aliases","schemaError","compiled","slist","shift","add","set","test","ml","me","tld_pos","at_pos","pretest","testSchemaAt","matchAtStart","keepOld","el","normalize","onCompile","array","domain","parts","labels","encoded","counter","extra","codePoints","digit","flag","numPoints","firstTime","inputLength","bias","basic","oldi","baseMinusT","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","q","qMinusT","parsed","mdurl.parse","mdurl.encode","mdurl.format","mdurl.decode","presetName","utils.isString","ParserCore","utils.assign","presets","missed","plugin","art","maybe","wrap","_b","_c","_d","chapter","titleInp","rangeInp","pointsDiv","addMain","items","ta","ph","cls","save","lbl","vrs","subs","msg","ms","div","files","rej","impBtn","expBtn","pickZip","blob","path","manifest","total","firstBook"],"mappings":"ssBAIO,MAAM,EAAKA,GAChB,SAAS,eAAeA,CAAE,EAGf,GAAK,EAGF,SAAAC,SACdC,EACAC,EACAC,EACA,CACM,MAAAC,EAAM,SAAS,cAAc,QAAQ,EAC3C,OAAAA,EAAI,KAAO,SACXA,EAAI,YAAcH,EAClBG,EAAI,UAAYF,EACZE,EAAA,iBAAiB,QAASD,CAAO,EAC9BC,CACT,+kBCtBA,MAAe,sBAAA,CAAA,6MCAf,IAAI,SAAW,OAAO,UAAU,SAEhC,OAAiB,SAAgBC,EAAK,CACpC,GAAIA,IAAQ,OAAQ,MAAO,YAC3B,GAAIA,IAAQ,KAAM,MAAO,OAEzB,IAAIC,EAAO,OAAOD,EAClB,GAAIC,IAAS,UAAW,MAAO,UAC/B,GAAIA,IAAS,SAAU,MAAO,SAC9B,GAAIA,IAAS,SAAU,MAAO,SAC9B,GAAIA,IAAS,SAAU,MAAO,SAC9B,GAAIA,IAAS,WACX,OAAO,cAAcD,CAAG,EAAI,oBAAsB,WAGpD,GAAI,QAAQA,CAAG,EAAG,MAAO,QACzB,GAAIE,WAASF,CAAG,EAAG,MAAO,SAC1B,GAAI,YAAYA,CAAG,EAAG,MAAO,YAC7B,GAAI,OAAOA,CAAG,EAAG,MAAO,OACxB,GAAI,QAAQA,CAAG,EAAG,MAAO,QACzB,GAAI,SAASA,CAAG,EAAG,MAAO,SAE1B,OAAQ,SAASA,CAAG,EAAC,CACnB,IAAK,SAAU,MAAO,SACtB,IAAK,UAAW,MAAO,UAGvB,IAAK,UAAW,MAAO,UACvB,IAAK,UAAW,MAAO,UACvB,IAAK,MAAO,MAAO,MACnB,IAAK,MAAO,MAAO,MAGnB,IAAK,YAAa,MAAO,YACzB,IAAK,aAAc,MAAO,aAC1B,IAAK,oBAAqB,MAAO,oBAGjC,IAAK,aAAc,MAAO,aAC1B,IAAK,cAAe,MAAO,cAG3B,IAAK,aAAc,MAAO,aAC1B,IAAK,cAAe,MAAO,cAC3B,IAAK,eAAgB,MAAO,eAC5B,IAAK,eAAgB,MAAO,cAChC,CAEE,GAAI,eAAeA,CAAG,EACpB,MAAO,YAKT,OADAC,EAAO,SAAS,KAAKD,CAAG,EAChBC,EAAI,CACV,IAAK,kBAAmB,MAAO,SAE/B,IAAK,wBAAyB,MAAO,cACrC,IAAK,wBAAyB,MAAO,cACrC,IAAK,2BAA4B,MAAO,iBACxC,IAAK,0BAA2B,MAAO,eAC3C,CAGE,OAAOA,EAAK,MAAM,EAAG,EAAE,EAAE,cAAc,QAAQ,MAAO,EAAE,CAC1D,EAEA,SAAS,SAASD,EAAK,CACrB,OAAO,OAAOA,EAAI,aAAgB,WAAaA,EAAI,YAAY,KAAO,IACxE,CAEA,SAAS,QAAQA,EAAK,CACpB,OAAI,MAAM,QAAgB,MAAM,QAAQA,CAAG,EACpCA,aAAe,KACxB,CAEA,SAAS,QAAQA,EAAK,CACpB,OAAOA,aAAe,OAAU,OAAOA,EAAI,SAAY,UAAYA,EAAI,aAAe,OAAOA,EAAI,YAAY,iBAAoB,QACnI,CAEA,SAAS,OAAOA,EAAK,CACnB,OAAIA,aAAe,KAAa,GACzB,OAAOA,EAAI,cAAiB,YAC9B,OAAOA,EAAI,SAAY,YACvB,OAAOA,EAAI,SAAY,UAC9B,CAEA,SAAS,SAASA,EAAK,CACrB,OAAIA,aAAe,OAAe,GAC3B,OAAOA,EAAI,OAAU,UACvB,OAAOA,EAAI,YAAe,WAC1B,OAAOA,EAAI,WAAc,WACzB,OAAOA,EAAI,QAAW,SAC7B,CAEA,SAAS,cAAcG,EAAMH,EAAK,CAChC,OAAO,SAASG,CAAI,IAAM,mBAC5B,CAEA,SAAS,eAAeH,EAAK,CAC3B,OAAO,OAAOA,EAAI,OAAU,YACvB,OAAOA,EAAI,QAAW,YACtB,OAAOA,EAAI,MAAS,UAC3B,CAEA,SAAS,YAAYA,EAAK,CACxB,GAAI,CACF,GAAI,OAAOA,EAAI,QAAW,UAAY,OAAOA,EAAI,QAAW,WAC1D,MAAO,EAEV,OAAQI,EAAK,CACZ,GAAIA,EAAI,QAAQ,QAAQ,QAAQ,IAAM,GACpC,MAAO,EAEb,CACE,MAAO,EACT,CAOA,SAASF,WAASF,EAAK,CACrB,OAAIA,EAAI,aAAe,OAAOA,EAAI,YAAY,UAAa,WAClDA,EAAI,YAAY,SAASA,CAAG,EAE9B,EACT;;;;;GCvHA,IAAA,aAAiB,SAAsBA,EAAK,CAC1C,OAAO,OAAOA,EAAQ,KAAeA,IAAQ,OACvC,OAAOA,GAAQ,UAAY,OAAOA,GAAQ,WAClD,ECVIK,WAAWC,aAEf,cAAiB,SAAgBC,EAAgB,CAC1CF,WAASE,CAAC,IAAKA,EAAI,CAAA,GAGxB,QADIC,EAAM,UAAU,OACXC,EAAI,EAAGA,EAAID,EAAKC,IAAK,CAC5B,IAAIC,EAAM,UAAUD,CAAC,EAEjBJ,WAASK,CAAG,GACdC,SAAOJ,EAAGG,CAAG,CAEnB,CACE,OAAOH,CACT,EAEA,SAASI,SAAOC,EAAGC,EAAG,CACpB,QAASC,KAAOD,EACV,OAAOA,EAAGC,CAAG,IACfF,EAAEE,CAAG,EAAID,EAAEC,CAAG,EAGpB,CAMA,SAAS,OAAOJ,EAAKI,EAAK,CACxB,OAAO,OAAO,UAAU,eAAe,KAAKJ,EAAKI,CAAG,CACtD,CC9BA,IAAIC,SAAST,OACTU,SAASC,cAgBb,cAAiB,SAASC,EAAOC,EAAS,CACpC,OAAOA,GAAY,aACrBA,EAAU,CAAE,MAAOA,CAAS,GAG9B,IAAIC,EAAO,SAASF,CAAK,EACrBG,EAAW,CAAC,kBAAmB,MAAO,MAAO,QAAQ,EACrDC,EAAON,SAAO,GAAIK,EAAUF,CAAO,EACnCI,EAAQD,EAAK,kBACbE,EAAQJ,EAAK,QAAQ,MAAM,OAAO,EAClCK,EAAW,KACXC,EAAU,cAAe,EACzBC,EAAU,CAAE,EACZC,EAAQ,CAAE,EAEd,SAASC,EAAa7B,EAAK,CACzBoB,EAAK,QAAUpB,EACfyB,EAAW,CAAE,EACbE,EAAU,CAAE,CAChB,CAEE,SAASG,EAAa9B,EAAK,CACrB4B,EAAM,SACRF,EAAQ,IAAM,OAAOE,EAAM,CAAC,EAAGL,CAAK,EACpCG,EAAQ,QAAU1B,EAClBsB,EAAK,MAAMI,EAASD,CAAQ,EAC5BA,EAAS,KAAKC,CAAO,EACrBA,EAAU,cAAe,EACzBC,EAAU,CAAE,EACZC,EAAQ,CAAE,EAEhB,CAEE,QAASnB,EAAI,EAAGA,EAAIe,EAAM,OAAQf,IAAK,CACrC,IAAIsB,EAAOP,EAAMf,CAAC,EACdD,EAAMoB,EAAM,OACZI,EAAKD,EAAK,KAAM,EAEpB,GAAI,YAAYC,EAAIT,CAAK,EAAG,CAC1B,GAAIS,EAAG,SAAW,GAAKvB,IAAM,EAAG,CAC9B,GAAID,IAAQ,GAAKA,IAAQ,EAAG,CAC1BmB,EAAQ,KAAKI,CAAI,EACjB,QACV,CACQH,EAAM,KAAKI,CAAE,EACbN,EAAQ,KAAOC,EAAQ,KAAK;AAAA,CAAI,EAChCA,EAAU,CAAE,EACZ,QACR,CAEUF,IAAa,MACfI,EAAaF,EAAQ,KAAK;AAAA,CAAI,CAAC,EAG7BnB,IAAQ,GACVsB,EAAaH,EAAQ,KAAK;AAAA,CAAI,CAAC,EAGjCC,EAAM,KAAKI,CAAE,EACb,QACN,CAEIL,EAAQ,KAAKI,CAAI,CACrB,CAEE,OAAIN,IAAa,KACfI,EAAaF,EAAQ,KAAK;AAAA,CAAI,CAAC,EAE/BG,EAAaH,EAAQ,KAAK;AAAA,CAAI,CAAC,EAGjCP,EAAK,SAAWK,EACTL,CACT,EAEA,SAAS,YAAYW,EAAMR,EAAO,CAIhC,MAHI,EAAAQ,EAAK,MAAM,EAAGR,EAAM,MAAM,IAAMA,GAGhCQ,EAAK,OAAOR,EAAM,OAAS,CAAC,IAAMA,EAAM,MAAM,EAAE,EAItD,CAEA,SAAS,SAASL,EAAO,CAKvB,GAJIH,SAAOG,CAAK,IAAM,WACpBA,EAAQ,CAAE,QAASA,CAAO,GAGxB,OAAOA,EAAM,SAAY,UAAY,CAAC,SAASA,EAAM,OAAO,EAC9D,MAAM,IAAI,UAAU,6BAA6B,EAGnD,OAAAA,EAAM,QAAUA,EAAM,QAAQ,SAAU,EACxCA,EAAM,SAAW,CAAE,EACZA,CACT,CAEA,SAAS,OAAOlB,EAAKuB,EAAO,CAC1B,OAAOvB,EAAMA,EAAI,MAAMuB,EAAM,MAAM,EAAE,KAAI,EAAK,EAChD,CAEA,SAAS,eAAgB,CACvB,MAAO,CAAE,IAAK,GAAI,KAAM,GAAI,QAAS,EAAI,CAC3C,CAEA,SAAS,SAASvB,EAAK,CACrB,OAAOA,CACT,CAEA,SAAS,SAASA,EAAK,CACrB,OAAIA,GAAOA,EAAI,aAAe,OAAOA,EAAI,YAAY,UAAa,WACzDA,EAAI,YAAY,SAASA,CAAG,EAE9B,EACT,gECpIA,SAAS,UAAUiC,EAAS,CAC1B,OAAQ,OAAOA,EAAY,KAAiBA,IAAY,IAC1D,CAGA,SAAS5B,WAAS4B,EAAS,CACzB,OAAQ,OAAOA,GAAY,UAAcA,IAAY,IACvD,CAGA,SAAS,QAAQC,EAAU,CACzB,OAAI,MAAM,QAAQA,CAAQ,EAAUA,EAC3B,UAAUA,CAAQ,EAAU,CAAE,EAEhC,CAAEA,CAAU,CACrB,CAGA,SAAS,OAAOC,EAAQC,EAAQ,CAC9B,IAAIC,EAAOC,EAAQxB,EAAKyB,EAExB,GAAIH,EAGF,IAFAG,EAAa,OAAO,KAAKH,CAAM,EAE1BC,EAAQ,EAAGC,EAASC,EAAW,OAAQF,EAAQC,EAAQD,GAAS,EACnEvB,EAAMyB,EAAWF,CAAK,EACtBF,EAAOrB,CAAG,EAAIsB,EAAOtB,CAAG,EAI5B,OAAOqB,CACT,CAGA,SAAS,OAAOK,EAAQC,EAAO,CAC7B,IAAIC,EAAS,GAAIC,EAEjB,IAAKA,EAAQ,EAAGA,EAAQF,EAAOE,GAAS,EACtCD,GAAUF,EAGZ,OAAOE,CACT,CAGA,SAAS,eAAeE,EAAQ,CAC9B,OAAQA,IAAW,GAAO,OAAO,oBAAsB,EAAIA,CAC7D,CAGwBC,SAAA,UAAQ,UACTA,SAAA,SAASxC,WACVwC,SAAA,QAAU,QACXA,SAAA,OAAW,OACHA,SAAA,eAAG,eAChCA,SAAA,OAAgC,OCtDhC,SAASC,gBAAcC,EAAQC,EAAM,CAEnC,MAAM,KAAK,IAAI,EAEf,KAAK,KAAO,gBACZ,KAAK,OAASD,EACd,KAAK,KAAOC,EACZ,KAAK,SAAW,KAAK,QAAU,qBAAuB,KAAK,KAAO,IAAM,KAAK,KAAK,SAAQ,EAAK,IAG3F,MAAM,kBAER,MAAM,kBAAkB,KAAM,KAAK,WAAW,EAG9C,KAAK,MAAS,IAAI,MAAO,EAAE,OAAS,EAExC,CAIAF,gBAAc,UAAY,OAAO,OAAO,MAAM,SAAS,EACvDA,gBAAc,UAAU,YAAcA,gBAGtCA,gBAAc,UAAU,SAAW,SAAkBG,EAAS,CAC5D,IAAIP,EAAS,KAAK,KAAO,KAEzB,OAAAA,GAAU,KAAK,QAAU,mBAErB,CAACO,GAAW,KAAK,OACnBP,GAAU,IAAM,KAAK,KAAK,SAAU,GAG/BA,CACT,EAGA,IAAA,UAAiBI,gBCvCbD,SAASvC,SAGb,SAAS4C,OAAK/C,EAAMgD,EAAQC,EAAUrB,EAAMsB,EAAQ,CAClD,KAAK,KAAWlD,EAChB,KAAK,OAAWgD,EAChB,KAAK,SAAWC,EAChB,KAAK,KAAWrB,EAChB,KAAK,OAAWsB,CAClB,CAGAH,OAAK,UAAU,WAAa,SAAoBI,EAAQC,EAAW,CACjE,IAAIC,EAAMC,EAAOC,EAAMC,EAAKC,EAE5B,GAAI,CAAC,KAAK,OAAQ,OAAO,KAQzB,IANAN,EAASA,GAAU,EACnBC,EAAYA,GAAa,GAEzBC,EAAO,GACPC,EAAQ,KAAK,SAENA,EAAQ,GAAK;AAAA,eAA2B,QAAQ,KAAK,OAAO,OAAOA,EAAQ,CAAC,CAAC,IAAM,IAExF,GADAA,GAAS,EACL,KAAK,SAAWA,EAASF,EAAY,EAAI,EAAI,CAC/CC,EAAO,QACPC,GAAS,EACT,KACN,CAME,IAHAC,EAAO,GACPC,EAAM,KAAK,SAEJA,EAAM,KAAK,OAAO,QAAU;AAAA,eAA2B,QAAQ,KAAK,OAAO,OAAOA,CAAG,CAAC,IAAM,IAEjG,GADAA,GAAO,EACHA,EAAM,KAAK,SAAYJ,EAAY,EAAI,EAAI,CAC7CG,EAAO,QACPC,GAAO,EACP,KACN,CAGE,OAAAC,EAAU,KAAK,OAAO,MAAMH,EAAOE,CAAG,EAE/Bd,SAAO,OAAO,IAAKS,CAAM,EAAIE,EAAOI,EAAUF,EAAO;AAAA,EACrDb,SAAO,OAAO,IAAKS,EAAS,KAAK,SAAWG,EAAQD,EAAK,MAAM,EAAI,GAC5E,EAGAN,OAAK,UAAU,SAAW,SAAkBD,EAAS,CACnD,IAAIW,EAASC,EAAQ,GAErB,OAAI,KAAK,OACPA,GAAS,OAAS,KAAK,KAAO,MAGhCA,GAAS,YAAc,KAAK,KAAO,GAAK,aAAe,KAAK,OAAS,GAEhEZ,IACHW,EAAU,KAAK,WAAY,EAEvBA,IACFC,GAAS;AAAA,EAAQD,IAIdC,CACT,EAGA,IAAA,KAAiBX,OCzEbJ,gBAAgBxC,UAEhB,yBAA2B,CAC7B,OACA,UACA,YACA,aACA,YACA,YACA,eACA,cACF,EAEI,gBAAkB,CACpB,SACA,WACA,SACF,EAEA,SAAS,oBAAoBwD,EAAK,CAChC,IAAIpB,EAAS,CAAE,EAEf,OAAIoB,IAAQ,MACV,OAAO,KAAKA,CAAG,EAAE,QAAQ,SAAUC,EAAO,CACxCD,EAAIC,CAAK,EAAE,QAAQ,SAAUC,EAAO,CAClCtB,EAAO,OAAOsB,CAAK,CAAC,EAAID,CAChC,CAAO,CACP,CAAK,EAGIrB,CACT,CAEA,SAASuB,OAAKC,EAAK/C,EAAS,CAoB1B,GAnBAA,EAAUA,GAAW,CAAE,EAEvB,OAAO,KAAKA,CAAO,EAAE,QAAQ,SAAUhB,EAAM,CAC3C,GAAI,yBAAyB,QAAQA,CAAI,IAAM,GAC7C,MAAM,IAAI2C,gBAAc,mBAAqB3C,EAAO,8BAAgC+D,EAAM,cAAc,CAE9G,CAAG,EAGD,KAAK,IAAeA,EACpB,KAAK,KAAe/C,EAAQ,MAAmB,KAC/C,KAAK,QAAeA,EAAQ,SAAmB,UAAY,CAAE,MAAO,EAAO,EAC3E,KAAK,UAAeA,EAAQ,WAAmB,SAAUgD,EAAM,CAAE,OAAOA,CAAO,EAC/E,KAAK,WAAehD,EAAQ,YAAmB,KAC/C,KAAK,UAAeA,EAAQ,WAAmB,KAC/C,KAAK,UAAeA,EAAQ,WAAmB,KAC/C,KAAK,aAAeA,EAAQ,cAAmB,KAC/C,KAAK,aAAe,oBAAoBA,EAAQ,cAAmB,IAAI,EAEnE,gBAAgB,QAAQ,KAAK,IAAI,IAAM,GACzC,MAAM,IAAI2B,gBAAc,iBAAmB,KAAK,KAAO,uBAAyBoB,EAAM,cAAc,CAExG,CAEA,IAAA,KAAiBD,OCxDbpB,SAAgBvC,SAChBwC,gBAAgB7B,UAChBgD,OAAgBG,KAGpB,SAAS,YAAYC,EAAQlE,EAAMuC,EAAQ,CACzC,IAAI4B,EAAU,CAAE,EAEhB,OAAAD,EAAO,QAAQ,QAAQ,SAAUE,EAAgB,CAC/C7B,EAAS,YAAY6B,EAAgBpE,EAAMuC,CAAM,CACrD,CAAG,EAED2B,EAAOlE,CAAI,EAAE,QAAQ,SAAUqE,EAAa,CAC1C9B,EAAO,QAAQ,SAAU+B,EAAcC,EAAe,CAChDD,EAAa,MAAQD,EAAY,KAAOC,EAAa,OAASD,EAAY,MAC5EF,EAAQ,KAAKI,CAAa,CAElC,CAAK,EAEDhC,EAAO,KAAK8B,CAAW,CAC3B,CAAG,EAEM9B,EAAO,OAAO,SAAUzC,EAAMoC,EAAO,CAC1C,OAAOiC,EAAQ,QAAQjC,CAAK,IAAM,EACtC,CAAG,CACH,CAGA,SAAS,YAA2B,CAClC,IAAIK,EAAS,CACP,OAAQ,CAAE,EACV,SAAU,CAAE,EACZ,QAAS,CAAE,EACX,SAAU,CAAA,CACX,EAAEL,EAAOC,EAEd,SAASqC,EAAY1E,EAAM,CACzByC,EAAOzC,EAAK,IAAI,EAAEA,EAAK,GAAG,EAAIyC,EAAO,SAAYzC,EAAK,GAAG,EAAIA,CACjE,CAEE,IAAKoC,EAAQ,EAAGC,EAAS,UAAU,OAAQD,EAAQC,EAAQD,GAAS,EAClE,UAAUA,CAAK,EAAE,QAAQsC,CAAW,EAEtC,OAAOjC,CACT,CAGA,SAASkC,SAAOC,EAAY,CAC1B,KAAK,QAAWA,EAAW,SAAY,CAAE,EACzC,KAAK,SAAWA,EAAW,UAAY,CAAE,EACzC,KAAK,SAAWA,EAAW,UAAY,CAAE,EAEzC,KAAK,SAAS,QAAQ,SAAU5E,EAAM,CACpC,GAAIA,EAAK,UAAYA,EAAK,WAAa,SACrC,MAAM,IAAI6C,gBAAc,iHAAiH,CAE/I,CAAG,EAED,KAAK,iBAAmB,YAAY,KAAM,WAAY,CAAA,CAAE,EACxD,KAAK,iBAAmB,YAAY,KAAM,WAAY,CAAA,CAAE,EACxD,KAAK,gBAAmB,WAAW,KAAK,iBAAkB,KAAK,gBAAgB,CACjF,CAGA8B,SAAO,QAAU,KAGjBA,SAAO,OAAS,UAAwB,CACtC,IAAIE,EAASC,EAEb,OAAQ,UAAU,OAAM,CACtB,IAAK,GACHD,EAAUF,SAAO,QACjBG,EAAQ,UAAU,CAAC,EACnB,MAEF,IAAK,GACHD,EAAU,UAAU,CAAC,EACrBC,EAAQ,UAAU,CAAC,EACnB,MAEF,QACE,MAAM,IAAIjC,gBAAc,sDAAsD,CACpF,CAKE,GAHAgC,EAAUjC,SAAO,QAAQiC,CAAO,EAChCC,EAAQlC,SAAO,QAAQkC,CAAK,EAExB,CAACD,EAAQ,MAAM,SAAUT,EAAQ,CAAE,OAAOA,aAAkBO,QAAO,CAAE,EACvE,MAAM,IAAI9B,gBAAc,2FAA2F,EAGrH,GAAI,CAACiC,EAAM,MAAM,SAAU9E,EAAM,CAAE,OAAOA,aAAgBgE,MAAK,CAAE,EAC/D,MAAM,IAAInB,gBAAc,oFAAoF,EAG9G,OAAO,IAAI8B,SAAO,CAChB,QAASE,EACT,SAAUC,CACd,CAAG,CACH,EAGA,IAAA,OAAiBH,SCzGbX,OAAO3D,KAEX,IAAiB,IAAI2D,OAAK,wBAAyB,CACjD,KAAM,SACN,UAAW,SAAUE,EAAM,CAAE,OAAOA,IAAS,KAAOA,EAAO,EAAG,CAChE,CAAC,ECLGF,OAAO3D,KAEX,IAAiB,IAAI2D,OAAK,wBAAyB,CACjD,KAAM,WACN,UAAW,SAAUE,EAAM,CAAE,OAAOA,IAAS,KAAOA,EAAO,EAAG,CAChE,CAAC,ECLGF,OAAO3D,KAEXwD,MAAiB,IAAIG,OAAK,wBAAyB,CACjD,KAAM,UACN,UAAW,SAAUE,EAAM,CAAE,OAAOA,IAAS,KAAOA,EAAO,EAAG,CAChE,CAAC,ECAGS,SAAStE,OAGb,SAAiB,IAAIsE,SAAO,CAC1B,SAAU,CACR3D,IACAmD,IACAY,KACJ,CACA,CAAC,ECdGf,OAAO3D,KAEX,SAAS,gBAAgB6D,EAAM,CAC7B,GAAIA,IAAS,KAAM,MAAO,GAE1B,IAAIc,EAAMd,EAAK,OAEf,OAAQc,IAAQ,GAAKd,IAAS,KACtBc,IAAQ,IAAMd,IAAS,QAAUA,IAAS,QAAUA,IAAS,OACvE,CAEA,SAAS,mBAAoB,CAC3B,OAAO,IACT,CAEA,SAAS,OAAOe,EAAQ,CACtB,OAAOA,IAAW,IACpB,CAEA,IAAA,MAAiB,IAAIjB,OAAK,yBAA0B,CAClD,KAAM,SACN,QAAS,gBACT,UAAW,kBACX,UAAW,OACX,UAAW,CACT,UAAW,UAAY,CAAE,MAAO,GAAS,EACzC,UAAW,UAAY,CAAE,MAAO,MAAS,EACzC,UAAW,UAAY,CAAE,MAAO,MAAS,EACzC,UAAW,UAAY,CAAE,MAAO,MAAO,CACxC,EACD,aAAc,WAChB,CAAC,EC/BGA,OAAO3D,KAEX,SAAS,mBAAmB6D,EAAM,CAChC,GAAIA,IAAS,KAAM,MAAO,GAE1B,IAAIc,EAAMd,EAAK,OAEf,OAAQc,IAAQ,IAAMd,IAAS,QAAUA,IAAS,QAAUA,IAAS,SAC7Dc,IAAQ,IAAMd,IAAS,SAAWA,IAAS,SAAWA,IAAS,QACzE,CAEA,SAAS,qBAAqBA,EAAM,CAClC,OAAOA,IAAS,QACTA,IAAS,QACTA,IAAS,MAClB,CAEA,SAAS,UAAUe,EAAQ,CACzB,OAAO,OAAO,UAAU,SAAS,KAAKA,CAAM,IAAM,kBACpD,CAEA,IAAA,KAAiB,IAAIjB,OAAK,yBAA0B,CAClD,KAAM,SACN,QAAS,mBACT,UAAW,qBACX,UAAW,UACX,UAAW,CACT,UAAW,SAAUiB,EAAQ,CAAE,OAAOA,EAAS,OAAS,OAAU,EAClE,UAAW,SAAUA,EAAQ,CAAE,OAAOA,EAAS,OAAS,OAAU,EAClE,UAAW,SAAUA,EAAQ,CAAE,OAAOA,EAAS,OAAS,OAAQ,CACjE,EACD,aAAc,WAChB,CAAC,EChCGrC,SAASvC,SACT2D,OAAShD,KAEb,SAAS,UAAUkE,EAAG,CACpB,MAAS,KAAeA,GAAOA,GAAK,IAC3B,IAAeA,GAAOA,GAAK,IAC3B,IAAeA,GAAOA,GAAK,GACtC,CAEA,SAAS,UAAUA,EAAG,CACpB,MAAS,KAAeA,GAAOA,GAAK,EACtC,CAEA,SAAS,UAAUA,EAAG,CACpB,MAAS,KAAeA,GAAOA,GAAK,EACtC,CAEA,SAAS,mBAAmBhB,EAAM,CAChC,GAAIA,IAAS,KAAM,MAAO,GAE1B,IAAIc,EAAMd,EAAK,OACX9B,EAAQ,EACR+C,EAAY,GACZC,EAEJ,GAAI,CAACJ,EAAK,MAAO,GASjB,GAPAI,EAAKlB,EAAK9B,CAAK,GAGXgD,IAAO,KAAOA,IAAO,OACvBA,EAAKlB,EAAK,EAAE9B,CAAK,GAGfgD,IAAO,IAAK,CAEd,GAAIhD,EAAQ,IAAM4C,EAAK,MAAO,GAK9B,GAJAI,EAAKlB,EAAK,EAAE9B,CAAK,EAIbgD,IAAO,IAAK,CAId,IAFAhD,IAEOA,EAAQ4C,EAAK5C,IAElB,GADAgD,EAAKlB,EAAK9B,CAAK,EACXgD,IAAO,IACX,IAAIA,IAAO,KAAOA,IAAO,IAAK,MAAO,GACrCD,EAAY,GAEd,OAAOA,GAAaC,IAAO,GACjC,CAGI,GAAIA,IAAO,IAAK,CAId,IAFAhD,IAEOA,EAAQ4C,EAAK5C,IAElB,GADAgD,EAAKlB,EAAK9B,CAAK,EACXgD,IAAO,IACX,IAAI,CAAC,UAAUlB,EAAK,WAAW9B,CAAK,CAAC,EAAG,MAAO,GAC/C+C,EAAY,GAEd,OAAOA,GAAaC,IAAO,GACjC,CAGI,KAAOhD,EAAQ4C,EAAK5C,IAElB,GADAgD,EAAKlB,EAAK9B,CAAK,EACXgD,IAAO,IACX,IAAI,CAAC,UAAUlB,EAAK,WAAW9B,CAAK,CAAC,EAAG,MAAO,GAC/C+C,EAAY,GAEd,OAAOA,GAAaC,IAAO,GAC/B,CAKE,GAAIA,IAAO,IAAK,MAAO,GAEvB,KAAOhD,EAAQ4C,EAAK5C,IAElB,GADAgD,EAAKlB,EAAK9B,CAAK,EACXgD,IAAO,IACX,IAAIA,IAAO,IAAK,MAChB,GAAI,CAAC,UAAUlB,EAAK,WAAW9B,CAAK,CAAC,EACnC,MAAO,GAET+C,EAAY,GAId,MAAI,CAACA,GAAaC,IAAO,IAAY,GAGjCA,IAAO,IAAY,GAGhB,oBAAoB,KAAKlB,EAAK,MAAM9B,CAAK,CAAC,CACnD,CAEA,SAAS,qBAAqB8B,EAAM,CAClC,IAAImB,EAAQnB,EAAMoB,EAAO,EAAGF,EAAIG,EAAMC,EAAS,CAAE,EAcjD,OAZIH,EAAM,QAAQ,GAAG,IAAM,KACzBA,EAAQA,EAAM,QAAQ,KAAM,EAAE,GAGhCD,EAAKC,EAAM,CAAC,GAERD,IAAO,KAAOA,IAAO,OACnBA,IAAO,MAAKE,EAAO,IACvBD,EAAQA,EAAM,MAAM,CAAC,EACrBD,EAAKC,EAAM,CAAC,GAGVA,IAAU,IAAY,EAEtBD,IAAO,IACLC,EAAM,CAAC,IAAM,IAAYC,EAAO,SAASD,EAAM,MAAM,CAAC,EAAG,CAAC,EAC1DA,EAAM,CAAC,IAAM,IAAYC,EAAO,SAASD,EAAO,EAAE,EAC/CC,EAAO,SAASD,EAAO,CAAC,EAG7BA,EAAM,QAAQ,GAAG,IAAM,IACzBA,EAAM,MAAM,GAAG,EAAE,QAAQ,SAAUI,EAAG,CACpCD,EAAO,QAAQ,SAASC,EAAG,EAAE,CAAC,CACpC,CAAK,EAEDJ,EAAQ,EACRE,EAAO,EAEPC,EAAO,QAAQ,SAAUE,EAAG,CAC1BL,GAAUK,EAAIH,EACdA,GAAQ,EACd,CAAK,EAEMD,EAAOD,GAITC,EAAO,SAASD,EAAO,EAAE,CAClC,CAEA,SAAS,UAAUJ,EAAQ,CACzB,OAAQ,OAAO,UAAU,SAAS,KAAKA,CAAM,IAAO,mBAC5CA,EAAS,IAAM,GAAK,CAACrC,SAAO,eAAeqC,CAAM,CAC3D,CAEA,IAAA,IAAiB,IAAIjB,OAAK,wBAAyB,CACjD,KAAM,SACN,QAAS,mBACT,UAAW,qBACX,UAAW,UACX,UAAW,CACT,OAAa,SAAUvD,EAAK,CAAE,OAAOA,GAAO,EAAI,KAAOA,EAAI,SAAS,CAAC,EAAI,MAAQA,EAAI,SAAS,CAAC,EAAE,MAAM,CAAC,CAAI,EAC5G,MAAa,SAAUA,EAAK,CAAE,OAAOA,GAAO,EAAI,IAAOA,EAAI,SAAS,CAAC,EAAI,KAAQA,EAAI,SAAS,CAAC,EAAE,MAAM,CAAC,CAAI,EAC5G,QAAa,SAAUA,EAAK,CAAE,OAAOA,EAAI,SAAS,EAAE,CAAI,EAExD,YAAa,SAAUA,EAAK,CAAE,OAAOA,GAAO,EAAI,KAAOA,EAAI,SAAS,EAAE,EAAE,cAAiB,MAAQA,EAAI,SAAS,EAAE,EAAE,YAAa,EAAC,MAAM,CAAC,CAAE,CAC1I,EACD,aAAc,UACd,aAAc,CACZ,OAAa,CAAE,EAAI,KAAO,EAC1B,MAAa,CAAE,EAAI,KAAO,EAC1B,QAAa,CAAE,GAAI,KAAO,EAC1B,YAAa,CAAE,GAAI,KAAK,CAC5B,CACA,CAAC,EC1KGmC,SAASvC,SACT2D,OAAShD,KAET,mBAAqB,IAAI,OAE3B,yLASuB,EAEzB,SAAS,iBAAiBkD,EAAM,CAG9B,MAFI,EAAAA,IAAS,MAET,CAAC,mBAAmB,KAAKA,CAAI,GAG7BA,EAAKA,EAAK,OAAS,CAAC,IAAM,IAKhC,CAEA,SAAS,mBAAmBA,EAAM,CAChC,IAAImB,EAAOC,EAAMC,EAAMC,EAUvB,OARAH,EAASnB,EAAK,QAAQ,KAAM,EAAE,EAAE,YAAa,EAC7CoB,EAASD,EAAM,CAAC,IAAM,IAAM,GAAK,EACjCG,EAAS,CAAE,EAEP,KAAK,QAAQH,EAAM,CAAC,CAAC,GAAK,IAC5BA,EAAQA,EAAM,MAAM,CAAC,GAGnBA,IAAU,OACJC,IAAS,EAAK,OAAO,kBAAoB,OAAO,kBAE/CD,IAAU,OACZ,IAEEA,EAAM,QAAQ,GAAG,GAAK,GAC/BA,EAAM,MAAM,GAAG,EAAE,QAAQ,SAAUI,EAAG,CACpCD,EAAO,QAAQ,WAAWC,EAAG,EAAE,CAAC,CACtC,CAAK,EAEDJ,EAAQ,EACRE,EAAO,EAEPC,EAAO,QAAQ,SAAUE,EAAG,CAC1BL,GAASK,EAAIH,EACbA,GAAQ,EACd,CAAK,EAEMD,EAAOD,GAGTC,EAAO,WAAWD,EAAO,EAAE,CACpC,CAGA,IAAI,uBAAyB,gBAE7B,SAAS,mBAAmBJ,EAAQnB,EAAO,CACzC,IAAI6B,EAEJ,GAAI,MAAMV,CAAM,EACd,OAAQnB,EAAK,CACX,IAAK,YAAa,MAAO,OACzB,IAAK,YAAa,MAAO,OACzB,IAAK,YAAa,MAAO,MAC/B,SACa,OAAO,oBAAsBmB,EACtC,OAAQnB,EAAK,CACX,IAAK,YAAa,MAAO,OACzB,IAAK,YAAa,MAAO,OACzB,IAAK,YAAa,MAAO,MAC/B,SACa,OAAO,oBAAsBmB,EACtC,OAAQnB,EAAK,CACX,IAAK,YAAa,MAAO,QACzB,IAAK,YAAa,MAAO,QACzB,IAAK,YAAa,MAAO,OAC/B,SACalB,SAAO,eAAeqC,CAAM,EACrC,MAAO,OAGT,OAAAU,EAAMV,EAAO,SAAS,EAAE,EAKjB,uBAAuB,KAAKU,CAAG,EAAIA,EAAI,QAAQ,IAAK,IAAI,EAAIA,CACrE,CAEA,SAAS,QAAQV,EAAQ,CACvB,OAAQ,OAAO,UAAU,SAAS,KAAKA,CAAM,IAAM,oBAC3CA,EAAS,IAAM,GAAKrC,SAAO,eAAeqC,CAAM,EAC1D,CAEA,IAAA,MAAiB,IAAIjB,OAAK,0BAA2B,CACnD,KAAM,SACN,QAAS,iBACT,UAAW,mBACX,UAAW,QACX,UAAW,mBACX,aAAc,WAChB,CAAC,ECxGGW,SAAStE,OAGb,KAAiB,IAAIsE,SAAO,CAC1B,QAAS,CACP3D,QACD,EACD,SAAU,CACRmD,MACAY,KACAa,IACAC,KACJ,CACA,CAAC,ECdGlB,SAAStE,OAGb,KAAiB,IAAIsE,SAAO,CAC1B,QAAS,CACP3D,IACJ,CACA,CAAC,ECfGgD,OAAO3D,KAEP,iBAAmB,IAAI,OACzB,oDAEgB,EAEd,sBAAwB,IAAI,OAC9B,kLASwB,EAE1B,SAAS,qBAAqB6D,EAAM,CAClC,OAAIA,IAAS,KAAa,GACtB,iBAAiB,KAAKA,CAAI,IAAM,MAChC,sBAAsB,KAAKA,CAAI,IAAM,IAE3C,CAEA,SAAS,uBAAuBA,EAAM,CACpC,IAAI4B,EAAOC,EAAMC,EAAOC,EAAKC,EAAMC,EAAQC,EAAQC,EAAW,EAC1DC,EAAQ,KAAMC,EAASC,EAAWC,EAKtC,GAHAX,EAAQ,iBAAiB,KAAK5B,CAAI,EAC9B4B,IAAU,OAAMA,EAAQ,sBAAsB,KAAK5B,CAAI,GAEvD4B,IAAU,KAAM,MAAM,IAAI,MAAM,oBAAoB,EAQxD,GAJAC,EAAO,CAAED,EAAM,CAAC,EAChBE,EAAQ,CAAEF,EAAM,CAAC,EAAK,EACtBG,EAAM,CAAEH,EAAM,CAAC,EAEX,CAACA,EAAM,CAAC,EACV,OAAO,IAAI,KAAK,KAAK,IAAIC,EAAMC,EAAOC,CAAG,CAAC,EAS5C,GAJAC,EAAO,CAAEJ,EAAM,CAAC,EAChBK,EAAS,CAAEL,EAAM,CAAC,EAClBM,EAAS,CAAEN,EAAM,CAAC,EAEdA,EAAM,CAAC,EAAG,CAEZ,IADAO,EAAWP,EAAM,CAAC,EAAE,MAAM,EAAG,CAAC,EACvBO,EAAS,OAAS,GACvBA,GAAY,IAEdA,EAAW,CAACA,CAChB,CAIE,OAAIP,EAAM,CAAC,IACTS,EAAU,CAAET,EAAM,EAAE,EACpBU,EAAY,EAAEV,EAAM,EAAE,GAAK,GAC3BQ,GAASC,EAAU,GAAKC,GAAa,IACjCV,EAAM,CAAC,IAAM,MAAKQ,EAAQ,CAACA,IAGjCG,EAAO,IAAI,KAAK,KAAK,IAAIV,EAAMC,EAAOC,EAAKC,EAAMC,EAAQC,EAAQC,CAAQ,CAAC,EAEtEC,GAAOG,EAAK,QAAQA,EAAK,QAAS,EAAGH,CAAK,EAEvCG,CACT,CAEA,SAAS,uBAAuBxB,EAAoB,CAClD,OAAOA,EAAO,YAAa,CAC7B,CAEA,IAAA,UAAiB,IAAIjB,OAAK,8BAA+B,CACvD,KAAM,SACN,QAAS,qBACT,UAAW,uBACX,WAAY,KACZ,UAAW,sBACb,CAAC,ECrFGA,OAAO3D,KAEX,SAAS,iBAAiB6D,EAAM,CAC9B,OAAOA,IAAS,MAAQA,IAAS,IACnC,CAEA,IAAA,MAAiB,IAAIF,OAAK,0BAA2B,CACnD,KAAM,SACN,QAAS,gBACX,CAAC,+OCPD,IAAI,WAEJ,GAAI,CAEF,IAAI0C,WAAWC,gBACf,WAAaD,WAAS,QAAQ,EAAE,MAClC,MAAa,CAAA,CAEb,IAAI1C,OAAa3D,KAIb,WAAa;AAAA,IAGjB,SAAS,kBAAkB6D,EAAM,CAC/B,GAAIA,IAAS,KAAM,MAAO,GAE1B,IAAI0C,EAAMC,EAAKC,EAAS,EAAG9B,EAAMd,EAAK,OAAQL,EAAM,WAGpD,IAAKgD,EAAM,EAAGA,EAAM7B,EAAK6B,IAIvB,GAHAD,EAAO/C,EAAI,QAAQK,EAAK,OAAO2C,CAAG,CAAC,EAG/B,EAAAD,EAAO,IAGX,IAAIA,EAAO,EAAG,MAAO,GAErBE,GAAU,EAIZ,OAAQA,EAAS,IAAO,CAC1B,CAEA,SAAS,oBAAoB5C,EAAM,CACjC,IAAI2C,EAAKE,EACL9F,EAAQiD,EAAK,QAAQ,WAAY,EAAE,EACnCc,EAAM/D,EAAM,OACZ4C,EAAM,WACNmD,EAAO,EACPvE,EAAS,CAAE,EAIf,IAAKoE,EAAM,EAAGA,EAAM7B,EAAK6B,IAClBA,EAAM,IAAM,GAAMA,IACrBpE,EAAO,KAAMuE,GAAQ,GAAM,GAAI,EAC/BvE,EAAO,KAAMuE,GAAQ,EAAK,GAAI,EAC9BvE,EAAO,KAAKuE,EAAO,GAAI,GAGzBA,EAAQA,GAAQ,EAAKnD,EAAI,QAAQ5C,EAAM,OAAO4F,CAAG,CAAC,EAmBpD,OAdAE,EAAY/B,EAAM,EAAK,EAEnB+B,IAAa,GACftE,EAAO,KAAMuE,GAAQ,GAAM,GAAI,EAC/BvE,EAAO,KAAMuE,GAAQ,EAAK,GAAI,EAC9BvE,EAAO,KAAKuE,EAAO,GAAI,GACdD,IAAa,IACtBtE,EAAO,KAAMuE,GAAQ,GAAM,GAAI,EAC/BvE,EAAO,KAAMuE,GAAQ,EAAK,GAAI,GACrBD,IAAa,IACtBtE,EAAO,KAAMuE,GAAQ,EAAK,GAAI,EAI5B,WAEK,WAAW,KAAO,WAAW,KAAKvE,CAAM,EAAI,IAAI,WAAWA,CAAM,EAGnEA,CACT,CAEA,SAAS,oBAAoBwC,EAAoB,CAC/C,IAAIxC,EAAS,GAAIuE,EAAO,EAAGH,EAAKpD,EAC5BuB,EAAMC,EAAO,OACbpB,EAAM,WAIV,IAAKgD,EAAM,EAAGA,EAAM7B,EAAK6B,IAClBA,EAAM,IAAM,GAAMA,IACrBpE,GAAUoB,EAAKmD,GAAQ,GAAM,EAAI,EACjCvE,GAAUoB,EAAKmD,GAAQ,GAAM,EAAI,EACjCvE,GAAUoB,EAAKmD,GAAQ,EAAK,EAAI,EAChCvE,GAAUoB,EAAImD,EAAO,EAAI,GAG3BA,GAAQA,GAAQ,GAAK/B,EAAO4B,CAAG,EAKjC,OAAApD,EAAOuB,EAAM,EAETvB,IAAS,GACXhB,GAAUoB,EAAKmD,GAAQ,GAAM,EAAI,EACjCvE,GAAUoB,EAAKmD,GAAQ,GAAM,EAAI,EACjCvE,GAAUoB,EAAKmD,GAAQ,EAAK,EAAI,EAChCvE,GAAUoB,EAAImD,EAAO,EAAI,GAChBvD,IAAS,GAClBhB,GAAUoB,EAAKmD,GAAQ,GAAM,EAAI,EACjCvE,GAAUoB,EAAKmD,GAAQ,EAAK,EAAI,EAChCvE,GAAUoB,EAAKmD,GAAQ,EAAK,EAAI,EAChCvE,GAAUoB,EAAI,EAAE,GACPJ,IAAS,IAClBhB,GAAUoB,EAAKmD,GAAQ,EAAK,EAAI,EAChCvE,GAAUoB,EAAKmD,GAAQ,EAAK,EAAI,EAChCvE,GAAUoB,EAAI,EAAE,EAChBpB,GAAUoB,EAAI,EAAE,GAGXpB,CACT,CAEA,SAAS,SAASwC,EAAQ,CACxB,OAAO,YAAc,WAAW,SAASA,CAAM,CACjD,CAEA,IAAA,OAAiB,IAAIjB,OAAK,2BAA4B,CACpD,KAAM,SACN,QAAS,kBACT,UAAW,oBACX,UAAW,SACX,UAAW,mBACb,CAAC,ECvIGA,OAAO3D,KAEP4G,kBAAkB,OAAO,UAAU,eACnCC,YAAkB,OAAO,UAAU,SAEvC,SAAS,gBAAgBhD,EAAM,CAC7B,GAAIA,IAAS,KAAM,MAAO,GAE1B,IAAIiD,EAAa,CAAA,EAAI/E,EAAOC,EAAQ+E,EAAMC,EAASC,EAC/CrC,EAASf,EAEb,IAAK9B,EAAQ,EAAGC,EAAS4C,EAAO,OAAQ7C,EAAQC,EAAQD,GAAS,EAAG,CAIlE,GAHAgF,EAAOnC,EAAO7C,CAAK,EACnBkF,EAAa,GAETJ,YAAU,KAAKE,CAAI,IAAM,kBAAmB,MAAO,GAEvD,IAAKC,KAAWD,EACd,GAAIH,kBAAgB,KAAKG,EAAMC,CAAO,EACpC,GAAI,CAACC,EAAYA,EAAa,OACzB,OAAO,GAIhB,GAAI,CAACA,EAAY,MAAO,GAExB,GAAIH,EAAW,QAAQE,CAAO,IAAM,GAAIF,EAAW,KAAKE,CAAO,MAC1D,OAAO,EAChB,CAEE,MAAO,EACT,CAEA,SAAS,kBAAkBnD,EAAM,CAC/B,OAAOA,IAAS,KAAOA,EAAO,CAAE,CAClC,CAEA,IAAA,KAAiB,IAAIF,OAAK,yBAA0B,CAClD,KAAM,WACN,QAAS,gBACT,UAAW,iBACb,CAAC,ECzCGA,OAAO3D,KAEP6G,YAAY,OAAO,UAAU,SAEjC,SAAS,iBAAiBhD,EAAM,CAC9B,GAAIA,IAAS,KAAM,MAAO,GAE1B,IAAI9B,EAAOC,EAAQ+E,EAAMG,EAAM9E,EAC3BwC,EAASf,EAIb,IAFAzB,EAAS,IAAI,MAAMwC,EAAO,MAAM,EAE3B7C,EAAQ,EAAGC,EAAS4C,EAAO,OAAQ7C,EAAQC,EAAQD,GAAS,EAAG,CAOlE,GANAgF,EAAOnC,EAAO7C,CAAK,EAEf8E,YAAU,KAAKE,CAAI,IAAM,oBAE7BG,EAAO,OAAO,KAAKH,CAAI,EAEnBG,EAAK,SAAW,GAAG,MAAO,GAE9B9E,EAAOL,CAAK,EAAI,CAAEmF,EAAK,CAAC,EAAGH,EAAKG,EAAK,CAAC,CAAC,CAAG,CAC9C,CAEE,MAAO,EACT,CAEA,SAAS,mBAAmBrD,EAAM,CAChC,GAAIA,IAAS,KAAM,MAAO,CAAE,EAE5B,IAAI9B,EAAOC,EAAQ+E,EAAMG,EAAM9E,EAC3BwC,EAASf,EAIb,IAFAzB,EAAS,IAAI,MAAMwC,EAAO,MAAM,EAE3B7C,EAAQ,EAAGC,EAAS4C,EAAO,OAAQ7C,EAAQC,EAAQD,GAAS,EAC/DgF,EAAOnC,EAAO7C,CAAK,EAEnBmF,EAAO,OAAO,KAAKH,CAAI,EAEvB3E,EAAOL,CAAK,EAAI,CAAEmF,EAAK,CAAC,EAAGH,EAAKG,EAAK,CAAC,CAAC,CAAG,EAG5C,OAAO9E,CACT,CAEA,IAAA,MAAiB,IAAIuB,OAAK,0BAA2B,CACnD,KAAM,WACN,QAAS,iBACT,UAAW,kBACb,CAAC,EClDGA,OAAO3D,KAEP4G,kBAAkB,OAAO,UAAU,eAEvC,SAAS,eAAe/C,EAAM,CAC5B,GAAIA,IAAS,KAAM,MAAO,GAE1B,IAAIrD,EAAKoE,EAASf,EAElB,IAAKrD,KAAOoE,EACV,GAAIgC,kBAAgB,KAAKhC,EAAQpE,CAAG,GAC9BoE,EAAOpE,CAAG,IAAM,KAAM,MAAO,GAIrC,MAAO,EACT,CAEA,SAAS,iBAAiBqD,EAAM,CAC9B,OAAOA,IAAS,KAAOA,EAAO,CAAE,CAClC,CAEA,IAAA,IAAiB,IAAIF,OAAK,wBAAyB,CACjD,KAAM,UACN,QAAS,eACT,UAAW,gBACb,CAAC,EClBGW,SAAStE,OAGb,aAAiB,IAAIsE,SAAO,CAC1B,QAAS,CACP3D,IACD,EACD,SAAU,CACRmD,UACAY,KACD,EACD,SAAU,CACRa,OACAC,KACA2B,MACAC,GACJ,CACA,CAAC,ECzBGzD,OAAO3D,KAEX,SAAS,4BAA6B,CACpC,MAAO,EACT,CAEA,SAAS,8BAA+B,CAGxC,CAEA,SAAS,8BAA+B,CACtC,MAAO,EACT,CAEA,SAAS,YAAY4E,EAAQ,CAC3B,OAAO,OAAOA,EAAW,GAC3B,CAEA,IAAA,WAAiB,IAAIjB,OAAK,iCAAkC,CAC1D,KAAM,SACN,QAAS,2BACT,UAAW,6BACX,UAAW,YACX,UAAW,4BACb,CAAC,ECzBGA,OAAO3D,KAEX,SAAS,wBAAwB6D,EAAM,CAErC,GADIA,IAAS,MACTA,EAAK,SAAW,EAAG,MAAO,GAE9B,IAAIwD,EAASxD,EACTT,EAAS,cAAc,KAAKS,CAAI,EAChCyD,EAAY,GAIhB,MAAI,EAAAD,EAAO,CAAC,IAAM,MACZjE,IAAMkE,EAAYlE,EAAK,CAAC,GAExBkE,EAAU,OAAS,GAEnBD,EAAOA,EAAO,OAASC,EAAU,OAAS,CAAC,IAAM,KAIzD,CAEA,SAAS,0BAA0BzD,EAAM,CACvC,IAAIwD,EAASxD,EACTT,EAAS,cAAc,KAAKS,CAAI,EAChCyD,EAAY,GAGhB,OAAID,EAAO,CAAC,IAAM,MACZjE,IAAMkE,EAAYlE,EAAK,CAAC,GAC5BiE,EAASA,EAAO,MAAM,EAAGA,EAAO,OAASC,EAAU,OAAS,CAAC,GAGxD,IAAI,OAAOD,EAAQC,CAAS,CACrC,CAEA,SAAS,0BAA0B1C,EAAoB,CACrD,IAAIxC,EAAS,IAAMwC,EAAO,OAAS,IAEnC,OAAIA,EAAO,SAAQxC,GAAU,KACzBwC,EAAO,YAAWxC,GAAU,KAC5BwC,EAAO,aAAYxC,GAAU,KAE1BA,CACT,CAEA,SAASmF,WAAS3C,EAAQ,CACxB,OAAO,OAAO,UAAU,SAAS,KAAKA,CAAM,IAAM,iBACpD,CAEA,IAAA,OAAiB,IAAIjB,OAAK,8BAA+B,CACvD,KAAM,SACN,QAAS,wBACT,UAAW,0BACX,UAAW4D,WACX,UAAW,yBACb,CAAC,ECzDG,QASJ,GAAI,CAEF,IAAI,SAAWjB,gBACf,QAAU,SAAS,SAAS,CAC9B,MAAY,CAGN,OAAO,OAAW,MAAa,QAAU,OAAO,QACtD,CAEA,IAAI,KAAOtG,KAEX,SAAS,0BAA0B6D,EAAM,CACvC,GAAIA,IAAS,KAAM,MAAO,GAE1B,GAAI,CACF,IAAI/B,EAAS,IAAM+B,EAAO,IACtB2D,EAAS,QAAQ,MAAM1F,EAAQ,CAAE,MAAO,GAAM,EAElD,MAAI,EAAA0F,EAAI,OAA4B,WAChCA,EAAI,KAAK,SAAuB,GAChCA,EAAI,KAAK,CAAC,EAAE,OAAoB,uBAC/BA,EAAI,KAAK,CAAC,EAAE,WAAW,OAAS,2BAC/BA,EAAI,KAAK,CAAC,EAAE,WAAW,OAAS,qBAKvC,MAAa,CACZ,MAAO,EACX,CACA,CAEA,SAAS,4BAA4B3D,EAAM,CAGzC,IAAI/B,EAAS,IAAM+B,EAAO,IACtB2D,EAAS,QAAQ,MAAM1F,EAAQ,CAAE,MAAO,GAAM,EAC9C2F,EAAS,CAAE,EACXC,EAEJ,GAAIF,EAAI,OAA4B,WAChCA,EAAI,KAAK,SAAuB,GAChCA,EAAI,KAAK,CAAC,EAAE,OAAoB,uBAC/BA,EAAI,KAAK,CAAC,EAAE,WAAW,OAAS,2BAC/BA,EAAI,KAAK,CAAC,EAAE,WAAW,OAAS,qBACpC,MAAM,IAAI,MAAM,4BAA4B,EAW9C,OARAA,EAAI,KAAK,CAAC,EAAE,WAAW,OAAO,QAAQ,SAAUG,EAAO,CACrDF,EAAO,KAAKE,EAAM,IAAI,CAC1B,CAAG,EAEDD,EAAOF,EAAI,KAAK,CAAC,EAAE,WAAW,KAAK,MAI/BA,EAAI,KAAK,CAAC,EAAE,WAAW,KAAK,OAAS,iBAEhC,IAAI,SAASC,EAAQ3F,EAAO,MAAM4F,EAAK,CAAC,EAAI,EAAGA,EAAK,CAAC,EAAI,CAAC,CAAC,EAK7D,IAAI,SAASD,EAAQ,UAAY3F,EAAO,MAAM4F,EAAK,CAAC,EAAGA,EAAK,CAAC,CAAC,CAAC,CACxE,CAEA,SAAS,4BAA4B9C,EAAoB,CACvD,OAAOA,EAAO,SAAU,CAC1B,CAEA,SAASgD,aAAWhD,EAAQ,CAC1B,OAAO,OAAO,UAAU,SAAS,KAAKA,CAAM,IAAM,mBACpD,CAEA,IAAA,UAAiB,IAAI,KAAK,gCAAiC,CACzD,KAAM,SACN,QAAS,0BACT,UAAW,4BACX,UAAWgD,aACX,UAAW,2BACb,CAAC,EChFG,OAAS5H,OAGb,aAAiB,OAAO,QAAU,IAAI,OAAO,CAC3C,QAAS,CACPW,YACD,EACD,SAAU,CACRmD,WACAY,OACAa,SACJ,CACA,CAAC,ECpBGhD,SAAsBvC,SACtBwC,gBAAsB7B,UACtB,KAAsBmD,KACtB+D,sBAAsBnD,aACtBoD,sBAAsBvC,aAGtBqB,kBAAkB,OAAO,UAAU,eAGnC,gBAAoB,EACpB,iBAAoB,EACpB,iBAAoB,EACpB,kBAAoB,EAGpB,cAAiB,EACjB,eAAiB,EACjB,cAAiB,EAGjB,sBAAgC,sIAChC,8BAAgC,qBAChC,wBAAgC,cAChC,mBAAgC,yBAChC,gBAAgC,mFAGpC,SAASmB,SAAO3H,EAAK,CAAE,OAAO,OAAO,UAAU,SAAS,KAAKA,CAAG,CAAE,CAElE,SAAS,OAAOyE,EAAG,CACjB,OAAQA,IAAM,IAAkBA,IAAM,EACxC,CAEA,SAAS,eAAeA,EAAG,CACzB,OAAQA,IAAM,GAAmBA,IAAM,EACzC,CAEA,SAAS,aAAaA,EAAG,CACvB,OAAQA,IAAM,GACNA,IAAM,IACNA,IAAM,IACNA,IAAM,EAChB,CAEA,SAAS,kBAAkBA,EAAG,CAC5B,OAAOA,IAAM,IACNA,IAAM,IACNA,IAAM,IACNA,IAAM,KACNA,IAAM,GACf,CAEA,SAAS,YAAYA,EAAG,CACtB,IAAImD,EAEJ,MAAK,KAAenD,GAAOA,GAAK,GACvBA,EAAI,IAIbmD,EAAKnD,EAAI,GAEJ,IAAemD,GAAQA,GAAM,IACzBA,EAAK,GAAO,GAGd,GACT,CAEA,SAAS,cAAcnD,EAAG,CACxB,OAAIA,IAAM,IAAsB,EAC5BA,IAAM,IAAsB,EAC5BA,IAAM,GAAsB,EACzB,CACT,CAEA,SAAS,gBAAgBA,EAAG,CAC1B,MAAK,KAAeA,GAAOA,GAAK,GACvBA,EAAI,GAGN,EACT,CAEA,SAAS,qBAAqBA,EAAG,CAE/B,OAAQA,IAAM,GAAe,KACtBA,IAAM,GAAe,OACrBA,IAAM,GAAe,KACrBA,IAAM,KACNA,IAAM,EADe,IAErBA,IAAM,IAAe;AAAA,EACrBA,IAAM,IAAe,KACrBA,IAAM,IAAe,KACrBA,IAAM,IAAe,KACrBA,IAAM,IAAe,OACrBA,IAAM,GAAmB,IACzBA,IAAM,GAAe,IACrBA,IAAM,GAAe,IACrBA,IAAM,GAAe,KACrBA,IAAM,GAAe,IACrBA,IAAM,GAAe,IACrBA,IAAM,GAAe,SACrBA,IAAM,GAAe,SAAW,EACzC,CAEA,SAAS,kBAAkBA,EAAG,CAC5B,OAAIA,GAAK,MACA,OAAO,aAAaA,CAAC,EAIvB,OAAO,cACVA,EAAI,OAAa,IAAM,OACvBA,EAAI,MAAY,MAAU,KAC7B,CACH,CAEA,IAAI,kBAAoB,IAAI,MAAM,GAAG,EACjC,gBAAkB,IAAI,MAAM,GAAG,EACnC,QAAS,EAAI,EAAG,EAAI,IAAK,IACvB,kBAAkB,CAAC,EAAI,qBAAqB,CAAC,EAAI,EAAI,EACrD,gBAAgB,CAAC,EAAI,qBAAqB,CAAC,EAI7C,SAASoD,QAAMrH,EAAOC,EAAS,CAC7B,KAAK,MAAQD,EAEb,KAAK,SAAYC,EAAQ,UAAgB,KACzC,KAAK,OAAYA,EAAQ,QAAgBiH,sBACzC,KAAK,UAAYjH,EAAQ,WAAgB,KACzC,KAAK,OAAYA,EAAQ,QAAgB,GACzC,KAAK,KAAYA,EAAQ,MAAgB,GACzC,KAAK,SAAYA,EAAQ,UAAgB,KAEzC,KAAK,cAAgB,KAAK,OAAO,iBACjC,KAAK,QAAgB,KAAK,OAAO,gBAEjC,KAAK,OAAaD,EAAM,OACxB,KAAK,SAAa,EAClB,KAAK,KAAa,EAClB,KAAK,UAAa,EAClB,KAAK,WAAa,EAElB,KAAK,UAAY,CAAE,CAYrB,CAGA,SAAS,cAAcsH,EAAOC,EAAS,CACrC,OAAO,IAAI3F,gBACT2F,EACA,IAAI,KAAKD,EAAM,SAAUA,EAAM,MAAOA,EAAM,SAAUA,EAAM,KAAOA,EAAM,SAAWA,EAAM,SAAS,CAAE,CACzG,CAEA,SAAS,WAAWA,EAAOC,EAAS,CAClC,MAAM,cAAcD,EAAOC,CAAO,CACpC,CAEA,SAAS,aAAaD,EAAOC,EAAS,CAChCD,EAAM,WACRA,EAAM,UAAU,KAAK,KAAM,cAAcA,EAAOC,CAAO,CAAC,CAE5D,CAGA,IAAI,kBAAoB,CAEtB,KAAM,SAA6BD,EAAOrI,EAAMuI,EAAM,CAEpD,IAAI3C,EAAO4C,EAAOC,EAEdJ,EAAM,UAAY,MACpB,WAAWA,EAAO,gCAAgC,EAGhDE,EAAK,SAAW,GAClB,WAAWF,EAAO,6CAA6C,EAGjEzC,EAAQ,uBAAuB,KAAK2C,EAAK,CAAC,CAAC,EAEvC3C,IAAU,MACZ,WAAWyC,EAAO,2CAA2C,EAG/DG,EAAQ,SAAS5C,EAAM,CAAC,EAAG,EAAE,EAC7B6C,EAAQ,SAAS7C,EAAM,CAAC,EAAG,EAAE,EAEzB4C,IAAU,GACZ,WAAWH,EAAO,2CAA2C,EAG/DA,EAAM,QAAUE,EAAK,CAAC,EACtBF,EAAM,gBAAmBI,EAAQ,EAE7BA,IAAU,GAAKA,IAAU,GAC3B,aAAaJ,EAAO,0CAA0C,CAEjE,EAED,IAAK,SAA4BA,EAAOrI,EAAMuI,EAAM,CAElD,IAAIG,EAAQC,EAERJ,EAAK,SAAW,GAClB,WAAWF,EAAO,6CAA6C,EAGjEK,EAASH,EAAK,CAAC,EACfI,EAASJ,EAAK,CAAC,EAEV,mBAAmB,KAAKG,CAAM,GACjC,WAAWL,EAAO,6DAA6D,EAG7EtB,kBAAgB,KAAKsB,EAAM,OAAQK,CAAM,GAC3C,WAAWL,EAAO,8CAAgDK,EAAS,cAAc,EAGtF,gBAAgB,KAAKC,CAAM,GAC9B,WAAWN,EAAO,8DAA8D,EAGlFA,EAAM,OAAOK,CAAM,EAAIC,CAC3B,CACA,EAGA,SAAS,eAAeN,EAAO/E,EAAOE,EAAKoF,EAAW,CACpD,IAAIC,EAAWC,EAASC,EAAYC,EAEpC,GAAI1F,EAAQE,EAAK,CAGf,GAFAwF,EAAUX,EAAM,MAAM,MAAM/E,EAAOE,CAAG,EAElCoF,EACF,IAAKC,EAAY,EAAGC,EAAUE,EAAQ,OAAQH,EAAYC,EAASD,GAAa,EAC9EE,EAAaC,EAAQ,WAAWH,CAAS,EACnCE,IAAe,GACd,IAAQA,GAAcA,GAAc,SACzC,WAAWV,EAAO,+BAA+B,OAG5C,sBAAsB,KAAKW,CAAO,GAC3C,WAAWX,EAAO,8CAA8C,EAGlEA,EAAM,QAAUW,CACpB,CACA,CAEA,SAAS,cAAcX,EAAOY,EAAahH,EAAQiH,EAAiB,CAClE,IAAI9G,EAAYzB,EAAKuB,EAAOiH,EAQ5B,IANKzG,SAAO,SAAST,CAAM,GACzB,WAAWoG,EAAO,mEAAmE,EAGvFjG,EAAa,OAAO,KAAKH,CAAM,EAE1BC,EAAQ,EAAGiH,EAAW/G,EAAW,OAAQF,EAAQiH,EAAUjH,GAAS,EACvEvB,EAAMyB,EAAWF,CAAK,EAEjB6E,kBAAgB,KAAKkC,EAAatI,CAAG,IACxCsI,EAAYtI,CAAG,EAAIsB,EAAOtB,CAAG,EAC7BuI,EAAgBvI,CAAG,EAAI,GAG7B,CAEA,SAAS,iBAAiB0H,EAAOW,EAASE,EAAiBE,EAAQC,EAASC,EAAWC,EAAWC,EAAU,CAC1G,IAAItH,EAAOiH,EAKX,GAAI,MAAM,QAAQE,CAAO,EAGvB,IAFAA,EAAU,MAAM,UAAU,MAAM,KAAKA,CAAO,EAEvCnH,EAAQ,EAAGiH,EAAWE,EAAQ,OAAQnH,EAAQiH,EAAUjH,GAAS,EAChE,MAAM,QAAQmH,EAAQnH,CAAK,CAAC,GAC9B,WAAWmG,EAAO,6CAA6C,EAG7D,OAAOgB,GAAY,UAAYnB,SAAOmB,EAAQnH,CAAK,CAAC,IAAM,oBAC5DmH,EAAQnH,CAAK,EAAI,mBAmBvB,GAXI,OAAOmH,GAAY,UAAYnB,SAAOmB,CAAO,IAAM,oBACrDA,EAAU,mBAIZA,EAAU,OAAOA,CAAO,EAEpBL,IAAY,OACdA,EAAU,CAAE,GAGVI,IAAW,0BACb,GAAI,MAAM,QAAQE,CAAS,EACzB,IAAKpH,EAAQ,EAAGiH,EAAWG,EAAU,OAAQpH,EAAQiH,EAAUjH,GAAS,EACtE,cAAcmG,EAAOW,EAASM,EAAUpH,CAAK,EAAGgH,CAAe,OAGjE,cAAcb,EAAOW,EAASM,EAAWJ,CAAe,MAGtD,CAACb,EAAM,MACP,CAACtB,kBAAgB,KAAKmC,EAAiBG,CAAO,GAC9CtC,kBAAgB,KAAKiC,EAASK,CAAO,IACvChB,EAAM,KAAOkB,GAAalB,EAAM,KAChCA,EAAM,SAAWmB,GAAYnB,EAAM,SACnC,WAAWA,EAAO,wBAAwB,GAE5CW,EAAQK,CAAO,EAAIC,EACnB,OAAOJ,EAAgBG,CAAO,EAGhC,OAAOL,CACT,CAEA,SAAS,cAAcX,EAAO,CAC5B,IAAInD,EAEJA,EAAKmD,EAAM,MAAM,WAAWA,EAAM,QAAQ,EAEtCnD,IAAO,GACTmD,EAAM,WACGnD,IAAO,IAChBmD,EAAM,WACFA,EAAM,MAAM,WAAWA,EAAM,QAAQ,IAAM,IAC7CA,EAAM,YAGR,WAAWA,EAAO,0BAA0B,EAG9CA,EAAM,MAAQ,EACdA,EAAM,UAAYA,EAAM,QAC1B,CAEA,SAAS,oBAAoBA,EAAOoB,EAAeC,EAAa,CAI9D,QAHIC,EAAa,EACbzE,EAAKmD,EAAM,MAAM,WAAWA,EAAM,QAAQ,EAEvCnD,IAAO,GAAG,CACf,KAAO,eAAeA,CAAE,GACtBA,EAAKmD,EAAM,MAAM,WAAW,EAAEA,EAAM,QAAQ,EAG9C,GAAIoB,GAAiBvE,IAAO,GAC1B,GACEA,EAAKmD,EAAM,MAAM,WAAW,EAAEA,EAAM,QAAQ,QACrCnD,IAAO,IAAgBA,IAAO,IAAgBA,IAAO,GAGhE,GAAI,OAAOA,CAAE,EAOX,IANA,cAAcmD,CAAK,EAEnBnD,EAAKmD,EAAM,MAAM,WAAWA,EAAM,QAAQ,EAC1CsB,IACAtB,EAAM,WAAa,EAEZnD,IAAO,IACZmD,EAAM,aACNnD,EAAKmD,EAAM,MAAM,WAAW,EAAEA,EAAM,QAAQ,MAG9C,MAEN,CAEE,OAAIqB,IAAgB,IAAMC,IAAe,GAAKtB,EAAM,WAAaqB,GAC/D,aAAarB,EAAO,uBAAuB,EAGtCsB,CACT,CAEA,SAAS,sBAAsBtB,EAAO,CACpC,IAAIQ,EAAYR,EAAM,SAClBnD,EAMJ,OAJAA,EAAKmD,EAAM,MAAM,WAAWQ,CAAS,EAIhC,IAAA3D,IAAO,IAAeA,IAAO,KAC9BA,IAAOmD,EAAM,MAAM,WAAWQ,EAAY,CAAC,GAC3C3D,IAAOmD,EAAM,MAAM,WAAWQ,EAAY,CAAC,IAE7CA,GAAa,EAEb3D,EAAKmD,EAAM,MAAM,WAAWQ,CAAS,EAEjC3D,IAAO,GAAK,aAAaA,CAAE,GAMnC,CAEA,SAAS,iBAAiBmD,EAAO/F,EAAO,CAClCA,IAAU,EACZ+F,EAAM,QAAU,IACP/F,EAAQ,IACjB+F,EAAM,QAAU3F,SAAO,OAAO;AAAA,EAAMJ,EAAQ,CAAC,EAEjD,CAGA,SAAS,gBAAgB+F,EAAOuB,EAAYC,EAAsB,CAChE,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAAQjC,EAAM,KACdW,EAAUX,EAAM,OAChBnD,EAoBJ,GAlBAA,EAAKmD,EAAM,MAAM,WAAWA,EAAM,QAAQ,EAEtC,aAAanD,CAAE,GACf,kBAAkBA,CAAE,GACpBA,IAAO,IACPA,IAAO,IACPA,IAAO,IACPA,IAAO,IACPA,IAAO,KACPA,IAAO,IACPA,IAAO,IACPA,IAAO,IACPA,IAAO,IACPA,IAAO,IACPA,IAAO,KAIPA,IAAO,IAAeA,IAAO,MAC/B6E,EAAY1B,EAAM,MAAM,WAAWA,EAAM,SAAW,CAAC,EAEjD,aAAa0B,CAAS,GACtBF,GAAwB,kBAAkBE,CAAS,GACrD,MAAO,GASX,IALA1B,EAAM,KAAO,SACbA,EAAM,OAAS,GACf2B,EAAeC,EAAa5B,EAAM,SAClC6B,EAAoB,GAEbhF,IAAO,GAAG,CACf,GAAIA,IAAO,IAGT,GAFA6E,EAAY1B,EAAM,MAAM,WAAWA,EAAM,SAAW,CAAC,EAEjD,aAAa0B,CAAS,GACtBF,GAAwB,kBAAkBE,CAAS,EACrD,cAGO7E,IAAO,IAGhB,GAFA4E,EAAYzB,EAAM,MAAM,WAAWA,EAAM,SAAW,CAAC,EAEjD,aAAayB,CAAS,EACxB,UAGG,IAAKzB,EAAM,WAAaA,EAAM,WAAa,sBAAsBA,CAAK,GAClEwB,GAAwB,kBAAkB3E,CAAE,EACrD,MAEK,GAAI,OAAOA,CAAE,EAMlB,GALAiF,EAAQ9B,EAAM,KACd+B,EAAa/B,EAAM,UACnBgC,EAAchC,EAAM,WACpB,oBAAoBA,EAAO,GAAO,EAAE,EAEhCA,EAAM,YAAcuB,EAAY,CAClCM,EAAoB,GACpBhF,EAAKmD,EAAM,MAAM,WAAWA,EAAM,QAAQ,EAC1C,QACR,KAAa,CACLA,EAAM,SAAW4B,EACjB5B,EAAM,KAAO8B,EACb9B,EAAM,UAAY+B,EAClB/B,EAAM,WAAagC,EACnB,KACR,EAGQH,IACF,eAAe7B,EAAO2B,EAAcC,EAAY,EAAK,EACrD,iBAAiB5B,EAAOA,EAAM,KAAO8B,CAAK,EAC1CH,EAAeC,EAAa5B,EAAM,SAClC6B,EAAoB,IAGjB,eAAehF,CAAE,IACpB+E,EAAa5B,EAAM,SAAW,GAGhCnD,EAAKmD,EAAM,MAAM,WAAW,EAAEA,EAAM,QAAQ,CAChD,CAIE,OAFA,eAAeA,EAAO2B,EAAcC,EAAY,EAAK,EAEjD5B,EAAM,OACD,IAGTA,EAAM,KAAOiC,EACbjC,EAAM,OAASW,EACR,GACT,CAEA,SAAS,uBAAuBX,EAAOuB,EAAY,CACjD,IAAI1E,EACA8E,EAAcC,EAIlB,GAFA/E,EAAKmD,EAAM,MAAM,WAAWA,EAAM,QAAQ,EAEtCnD,IAAO,GACT,MAAO,GAQT,IALAmD,EAAM,KAAO,SACbA,EAAM,OAAS,GACfA,EAAM,WACN2B,EAAeC,EAAa5B,EAAM,UAE1BnD,EAAKmD,EAAM,MAAM,WAAWA,EAAM,QAAQ,KAAO,GACvD,GAAInD,IAAO,GAIT,GAHA,eAAemD,EAAO2B,EAAc3B,EAAM,SAAU,EAAI,EACxDnD,EAAKmD,EAAM,MAAM,WAAW,EAAEA,EAAM,QAAQ,EAExCnD,IAAO,GACT8E,EAAe3B,EAAM,SACrBA,EAAM,WACN4B,EAAa5B,EAAM,aAEnB,OAAO,QAGA,OAAOnD,CAAE,GAClB,eAAemD,EAAO2B,EAAcC,EAAY,EAAI,EACpD,iBAAiB5B,EAAO,oBAAoBA,EAAO,GAAOuB,CAAU,CAAC,EACrEI,EAAeC,EAAa5B,EAAM,UAEzBA,EAAM,WAAaA,EAAM,WAAa,sBAAsBA,CAAK,EAC1E,WAAWA,EAAO,8DAA8D,GAGhFA,EAAM,WACN4B,EAAa5B,EAAM,UAIvB,WAAWA,EAAO,4DAA4D,CAChF,CAEA,SAAS,uBAAuBA,EAAOuB,EAAY,CACjD,IAAII,EACAC,EACAM,EACAC,EACAC,EACAvF,EAIJ,GAFAA,EAAKmD,EAAM,MAAM,WAAWA,EAAM,QAAQ,EAEtCnD,IAAO,GACT,MAAO,GAQT,IALAmD,EAAM,KAAO,SACbA,EAAM,OAAS,GACfA,EAAM,WACN2B,EAAeC,EAAa5B,EAAM,UAE1BnD,EAAKmD,EAAM,MAAM,WAAWA,EAAM,QAAQ,KAAO,GAAG,CAC1D,GAAInD,IAAO,GACT,sBAAemD,EAAO2B,EAAc3B,EAAM,SAAU,EAAI,EACxDA,EAAM,WACC,GAEF,GAAInD,IAAO,GAAa,CAI7B,GAHA,eAAemD,EAAO2B,EAAc3B,EAAM,SAAU,EAAI,EACxDnD,EAAKmD,EAAM,MAAM,WAAW,EAAEA,EAAM,QAAQ,EAExC,OAAOnD,CAAE,EACX,oBAAoBmD,EAAO,GAAOuB,CAAU,UAGnC1E,EAAK,KAAO,kBAAkBA,CAAE,EACzCmD,EAAM,QAAU,gBAAgBnD,CAAE,EAClCmD,EAAM,oBAEIoC,EAAM,cAAcvF,CAAE,GAAK,EAAG,CAIxC,IAHAqF,EAAYE,EACZD,EAAY,EAELD,EAAY,EAAGA,IACpBrF,EAAKmD,EAAM,MAAM,WAAW,EAAEA,EAAM,QAAQ,GAEvCoC,EAAM,YAAYvF,CAAE,IAAM,EAC7BsF,GAAaA,GAAa,GAAKC,EAG/B,WAAWpC,EAAO,gCAAgC,EAItDA,EAAM,QAAU,kBAAkBmC,CAAS,EAE3CnC,EAAM,UAEd,MACQ,WAAWA,EAAO,yBAAyB,EAG7C2B,EAAeC,EAAa5B,EAAM,QAExC,MAAe,OAAOnD,CAAE,GAClB,eAAemD,EAAO2B,EAAcC,EAAY,EAAI,EACpD,iBAAiB5B,EAAO,oBAAoBA,EAAO,GAAOuB,CAAU,CAAC,EACrEI,EAAeC,EAAa5B,EAAM,UAEzBA,EAAM,WAAaA,EAAM,WAAa,sBAAsBA,CAAK,EAC1E,WAAWA,EAAO,8DAA8D,GAGhFA,EAAM,WACN4B,EAAa5B,EAAM,SAEzB,CAEE,WAAWA,EAAO,4DAA4D,CAChF,CAEA,SAAS,mBAAmBA,EAAOuB,EAAY,CAC7C,IAAIc,EAAW,GACXP,EACAQ,EAAWtC,EAAM,IACjBW,EACA4B,EAAWvC,EAAM,OACjB0B,EACAc,EACAC,EACAC,EACAC,EACA9B,EAAkB,CAAE,EACpBG,EACAD,EACAE,EACApE,EAIJ,GAFAA,EAAKmD,EAAM,MAAM,WAAWA,EAAM,QAAQ,EAEtCnD,IAAO,GACT2F,EAAa,GACbG,EAAY,GACZhC,EAAU,CAAE,UACH9D,IAAO,IAChB2F,EAAa,IACbG,EAAY,GACZhC,EAAU,CAAE,MAEZ,OAAO,GAST,IANIX,EAAM,SAAW,OACnBA,EAAM,UAAUA,EAAM,MAAM,EAAIW,GAGlC9D,EAAKmD,EAAM,MAAM,WAAW,EAAEA,EAAM,QAAQ,EAErCnD,IAAO,GAAG,CAKf,GAJA,oBAAoBmD,EAAO,GAAMuB,CAAU,EAE3C1E,EAAKmD,EAAM,MAAM,WAAWA,EAAM,QAAQ,EAEtCnD,IAAO2F,EACT,OAAAxC,EAAM,WACNA,EAAM,IAAMsC,EACZtC,EAAM,OAASuC,EACfvC,EAAM,KAAO2C,EAAY,UAAY,WACrC3C,EAAM,OAASW,EACR,GACG0B,GACV,WAAWrC,EAAO,8CAA8C,EAGlEe,EAASC,EAAUC,EAAY,KAC/BwB,EAASC,EAAiB,GAEtB7F,IAAO,KACT6E,EAAY1B,EAAM,MAAM,WAAWA,EAAM,SAAW,CAAC,EAEjD,aAAa0B,CAAS,IACxBe,EAASC,EAAiB,GAC1B1C,EAAM,WACN,oBAAoBA,EAAO,GAAMuB,CAAU,IAI/CO,EAAQ9B,EAAM,KACd,YAAYA,EAAOuB,EAAY,gBAAiB,GAAO,EAAI,EAC3DR,EAASf,EAAM,IACfgB,EAAUhB,EAAM,OAChB,oBAAoBA,EAAO,GAAMuB,CAAU,EAE3C1E,EAAKmD,EAAM,MAAM,WAAWA,EAAM,QAAQ,GAErC0C,GAAkB1C,EAAM,OAAS8B,IAAUjF,IAAO,KACrD4F,EAAS,GACT5F,EAAKmD,EAAM,MAAM,WAAW,EAAEA,EAAM,QAAQ,EAC5C,oBAAoBA,EAAO,GAAMuB,CAAU,EAC3C,YAAYvB,EAAOuB,EAAY,gBAAiB,GAAO,EAAI,EAC3DN,EAAYjB,EAAM,QAGhB2C,EACF,iBAAiB3C,EAAOW,EAASE,EAAiBE,EAAQC,EAASC,CAAS,EACnEwB,EACT9B,EAAQ,KAAK,iBAAiBX,EAAO,KAAMa,EAAiBE,EAAQC,EAASC,CAAS,CAAC,EAEvFN,EAAQ,KAAKK,CAAO,EAGtB,oBAAoBhB,EAAO,GAAMuB,CAAU,EAE3C1E,EAAKmD,EAAM,MAAM,WAAWA,EAAM,QAAQ,EAEtCnD,IAAO,IACTwF,EAAW,GACXxF,EAAKmD,EAAM,MAAM,WAAW,EAAEA,EAAM,QAAQ,GAE5CqC,EAAW,EAEjB,CAEE,WAAWrC,EAAO,uDAAuD,CAC3E,CAEA,SAAS,gBAAgBA,EAAOuB,EAAY,CAC1C,IAAII,EACAiB,EACAC,EAAiB,cACjBC,EAAiB,GACjBC,EAAiB,GACjBC,EAAiBzB,EACjB0B,EAAiB,EACjBC,EAAiB,GACjBd,EACAvF,EAIJ,GAFAA,EAAKmD,EAAM,MAAM,WAAWA,EAAM,QAAQ,EAEtCnD,IAAO,IACT+F,EAAU,WACD/F,IAAO,GAChB+F,EAAU,OAEV,OAAO,GAMT,IAHA5C,EAAM,KAAO,SACbA,EAAM,OAAS,GAERnD,IAAO,GAGZ,GAFAA,EAAKmD,EAAM,MAAM,WAAW,EAAEA,EAAM,QAAQ,EAExCnD,IAAO,IAAeA,IAAO,GAC3B,gBAAkBgG,EACpBA,EAAYhG,IAAO,GAAe,cAAgB,eAElD,WAAWmD,EAAO,sCAAsC,WAGhDoC,EAAM,gBAAgBvF,CAAE,IAAM,EACpCuF,IAAQ,EACV,WAAWpC,EAAO,8EAA8E,EACtF+C,EAIV,WAAW/C,EAAO,2CAA2C,GAH7DgD,EAAazB,EAAaa,EAAM,EAChCW,EAAiB,QAMnB,OAIJ,GAAI,eAAelG,CAAE,EAAG,CACtB,GAAKA,EAAKmD,EAAM,MAAM,WAAW,EAAEA,EAAM,QAAQ,QAC1C,eAAenD,CAAE,GAExB,GAAIA,IAAO,GACT,GAAKA,EAAKmD,EAAM,MAAM,WAAW,EAAEA,EAAM,QAAQ,QAC1C,CAAC,OAAOnD,CAAE,GAAMA,IAAO,EAEpC,CAEE,KAAOA,IAAO,GAAG,CAMf,IALA,cAAcmD,CAAK,EACnBA,EAAM,WAAa,EAEnBnD,EAAKmD,EAAM,MAAM,WAAWA,EAAM,QAAQ,GAElC,CAAC+C,GAAkB/C,EAAM,WAAagD,IACtCnG,IAAO,IACbmD,EAAM,aACNnD,EAAKmD,EAAM,MAAM,WAAW,EAAEA,EAAM,QAAQ,EAO9C,GAJI,CAAC+C,GAAkB/C,EAAM,WAAagD,IACxCA,EAAahD,EAAM,YAGjB,OAAOnD,CAAE,EAAG,CACdoG,IACA,QACN,CAGI,GAAIjD,EAAM,WAAagD,EAAY,CAG7BH,IAAa,cACf7C,EAAM,QAAU3F,SAAO,OAAO;AAAA,EAAMyI,EAAiB,EAAIG,EAAaA,CAAU,EACvEJ,IAAa,eAClBC,IACF9C,EAAM,QAAU;AAAA,GAKpB,KACN,CAsCI,IAnCI4C,EAGE,eAAe/F,CAAE,GACnBqG,EAAiB,GAEjBlD,EAAM,QAAU3F,SAAO,OAAO;AAAA,EAAMyI,EAAiB,EAAIG,EAAaA,CAAU,GAGvEC,GACTA,EAAiB,GACjBlD,EAAM,QAAU3F,SAAO,OAAO;AAAA,EAAM4I,EAAa,CAAC,GAGzCA,IAAe,EACpBH,IACF9C,EAAM,QAAU,KAKlBA,EAAM,QAAU3F,SAAO,OAAO;AAAA,EAAM4I,CAAU,EAMhDjD,EAAM,QAAU3F,SAAO,OAAO;AAAA,EAAMyI,EAAiB,EAAIG,EAAaA,CAAU,EAGlFH,EAAiB,GACjBC,EAAiB,GACjBE,EAAa,EACbtB,EAAe3B,EAAM,SAEd,CAAC,OAAOnD,CAAE,GAAMA,IAAO,GAC5BA,EAAKmD,EAAM,MAAM,WAAW,EAAEA,EAAM,QAAQ,EAG9C,eAAeA,EAAO2B,EAAc3B,EAAM,SAAU,EAAK,CAC7D,CAEE,MAAO,EACT,CAEA,SAAS,kBAAkBA,EAAOuB,EAAY,CAC5C,IAAIO,EACAQ,EAAYtC,EAAM,IAClBuC,EAAYvC,EAAM,OAClBW,EAAY,CAAE,EACde,EACAyB,EAAY,GACZtG,EAQJ,IANImD,EAAM,SAAW,OACnBA,EAAM,UAAUA,EAAM,MAAM,EAAIW,GAGlC9D,EAAKmD,EAAM,MAAM,WAAWA,EAAM,QAAQ,EAEnCnD,IAAO,GAER,EAAAA,IAAO,KAIX6E,EAAY1B,EAAM,MAAM,WAAWA,EAAM,SAAW,CAAC,EAEjD,CAAC,aAAa0B,CAAS,KARZ,CAef,GAHAyB,EAAW,GACXnD,EAAM,WAEF,oBAAoBA,EAAO,GAAM,EAAE,GACjCA,EAAM,YAAcuB,EAAY,CAClCZ,EAAQ,KAAK,IAAI,EACjB9D,EAAKmD,EAAM,MAAM,WAAWA,EAAM,QAAQ,EAC1C,QACR,CAUI,GAPA8B,EAAQ9B,EAAM,KACd,YAAYA,EAAOuB,EAAY,iBAAkB,GAAO,EAAI,EAC5DZ,EAAQ,KAAKX,EAAM,MAAM,EACzB,oBAAoBA,EAAO,GAAM,EAAE,EAEnCnD,EAAKmD,EAAM,MAAM,WAAWA,EAAM,QAAQ,GAErCA,EAAM,OAAS8B,GAAS9B,EAAM,WAAauB,IAAgB1E,IAAO,EACrE,WAAWmD,EAAO,qCAAqC,UAC9CA,EAAM,WAAauB,EAC5B,KAEN,CAEE,OAAI4B,GACFnD,EAAM,IAAMsC,EACZtC,EAAM,OAASuC,EACfvC,EAAM,KAAO,WACbA,EAAM,OAASW,EACR,IAEF,EACT,CAEA,SAAS,iBAAiBX,EAAOuB,EAAY6B,EAAY,CACvD,IAAI1B,EACA2B,EACAvB,EACAwB,EACAhB,EAAgBtC,EAAM,IACtBuC,EAAgBvC,EAAM,OACtBW,EAAgB,CAAE,EAClBE,EAAkB,CAAE,EACpBE,EAAgB,KAChBC,EAAgB,KAChBC,EAAgB,KAChBsC,EAAgB,GAChBJ,EAAgB,GAChBtG,EAQJ,IANImD,EAAM,SAAW,OACnBA,EAAM,UAAUA,EAAM,MAAM,EAAIW,GAGlC9D,EAAKmD,EAAM,MAAM,WAAWA,EAAM,QAAQ,EAEnCnD,IAAO,GAAG,CASf,GARA6E,EAAY1B,EAAM,MAAM,WAAWA,EAAM,SAAW,CAAC,EACrD8B,EAAQ9B,EAAM,KACdsD,EAAOtD,EAAM,UAMRnD,IAAO,IAAeA,IAAO,KAAgB,aAAa6E,CAAS,EAElE7E,IAAO,IACL0G,IACF,iBAAiBvD,EAAOW,EAASE,EAAiBE,EAAQC,EAAS,IAAI,EACvED,EAASC,EAAUC,EAAY,MAGjCkC,EAAW,GACXI,EAAgB,GAChBF,EAAe,IAENE,GAETA,EAAgB,GAChBF,EAAe,IAGf,WAAWrD,EAAO,mGAAmG,EAGvHA,EAAM,UAAY,EAClBnD,EAAK6E,UAKI,YAAY1B,EAAOoD,EAAY,iBAAkB,GAAO,EAAI,EAErE,GAAIpD,EAAM,OAAS8B,EAAO,CAGxB,IAFAjF,EAAKmD,EAAM,MAAM,WAAWA,EAAM,QAAQ,EAEnC,eAAenD,CAAE,GACtBA,EAAKmD,EAAM,MAAM,WAAW,EAAEA,EAAM,QAAQ,EAG9C,GAAInD,IAAO,GACTA,EAAKmD,EAAM,MAAM,WAAW,EAAEA,EAAM,QAAQ,EAEvC,aAAanD,CAAE,GAClB,WAAWmD,EAAO,yFAAyF,EAGzGuD,IACF,iBAAiBvD,EAAOW,EAASE,EAAiBE,EAAQC,EAAS,IAAI,EACvED,EAASC,EAAUC,EAAY,MAGjCkC,EAAW,GACXI,EAAgB,GAChBF,EAAe,GACftC,EAASf,EAAM,IACfgB,EAAUhB,EAAM,eAEPmD,EACT,WAAWnD,EAAO,0DAA0D,MAG5E,QAAAA,EAAM,IAAMsC,EACZtC,EAAM,OAASuC,EACR,EAGV,SAAUY,EACT,WAAWnD,EAAO,gFAAgF,MAGlG,QAAAA,EAAM,IAAMsC,EACZtC,EAAM,OAASuC,EACR,OAIT,OAwBF,IAlBIvC,EAAM,OAAS8B,GAAS9B,EAAM,WAAauB,KACzC,YAAYvB,EAAOuB,EAAY,kBAAmB,GAAM8B,CAAY,IAClEE,EACFvC,EAAUhB,EAAM,OAEhBiB,EAAYjB,EAAM,QAIjBuD,IACH,iBAAiBvD,EAAOW,EAASE,EAAiBE,EAAQC,EAASC,EAAWa,EAAOwB,CAAI,EACzFvC,EAASC,EAAUC,EAAY,MAGjC,oBAAoBjB,EAAO,GAAM,EAAE,EACnCnD,EAAKmD,EAAM,MAAM,WAAWA,EAAM,QAAQ,GAGxCA,EAAM,WAAauB,GAAe1E,IAAO,EAC3C,WAAWmD,EAAO,oCAAoC,UAC7CA,EAAM,WAAauB,EAC5B,KAEN,CAOE,OAAIgC,GACF,iBAAiBvD,EAAOW,EAASE,EAAiBE,EAAQC,EAAS,IAAI,EAIrEmC,IACFnD,EAAM,IAAMsC,EACZtC,EAAM,OAASuC,EACfvC,EAAM,KAAO,UACbA,EAAM,OAASW,GAGVwC,CACT,CAEA,SAAS,gBAAgBnD,EAAO,CAC9B,IAAIQ,EACAgD,EAAa,GACbC,EAAa,GACbC,EACAC,EACA9G,EAIJ,GAFAA,EAAKmD,EAAM,MAAM,WAAWA,EAAM,QAAQ,EAEtCnD,IAAO,GAAa,MAAO,GAuB/B,GArBImD,EAAM,MAAQ,MAChB,WAAWA,EAAO,+BAA+B,EAGnDnD,EAAKmD,EAAM,MAAM,WAAW,EAAEA,EAAM,QAAQ,EAExCnD,IAAO,IACT2G,EAAa,GACb3G,EAAKmD,EAAM,MAAM,WAAW,EAAEA,EAAM,QAAQ,GAEnCnD,IAAO,IAChB4G,EAAU,GACVC,EAAY,KACZ7G,EAAKmD,EAAM,MAAM,WAAW,EAAEA,EAAM,QAAQ,GAG5C0D,EAAY,IAGdlD,EAAYR,EAAM,SAEdwD,EAAY,CACd,GAAK3G,EAAKmD,EAAM,MAAM,WAAW,EAAEA,EAAM,QAAQ,QAC1CnD,IAAO,GAAKA,IAAO,IAEtBmD,EAAM,SAAWA,EAAM,QACzB2D,EAAU3D,EAAM,MAAM,MAAMQ,EAAWR,EAAM,QAAQ,EACrDnD,EAAKmD,EAAM,MAAM,WAAW,EAAEA,EAAM,QAAQ,GAE5C,WAAWA,EAAO,oDAAoD,CAE5E,KAAS,CACL,KAAOnD,IAAO,GAAK,CAAC,aAAaA,CAAE,GAE7BA,IAAO,KACJ4G,EAUH,WAAWzD,EAAO,6CAA6C,GAT/D0D,EAAY1D,EAAM,MAAM,MAAMQ,EAAY,EAAGR,EAAM,SAAW,CAAC,EAE1D,mBAAmB,KAAK0D,CAAS,GACpC,WAAW1D,EAAO,iDAAiD,EAGrEyD,EAAU,GACVjD,EAAYR,EAAM,SAAW,IAMjCnD,EAAKmD,EAAM,MAAM,WAAW,EAAEA,EAAM,QAAQ,EAG9C2D,EAAU3D,EAAM,MAAM,MAAMQ,EAAWR,EAAM,QAAQ,EAEjD,wBAAwB,KAAK2D,CAAO,GACtC,WAAW3D,EAAO,qDAAqD,CAE7E,CAEE,OAAI2D,GAAW,CAAC,gBAAgB,KAAKA,CAAO,GAC1C,WAAW3D,EAAO,4CAA8C2D,CAAO,EAGrEH,EACFxD,EAAM,IAAM2D,EAEHjF,kBAAgB,KAAKsB,EAAM,OAAQ0D,CAAS,EACrD1D,EAAM,IAAMA,EAAM,OAAO0D,CAAS,EAAIC,EAE7BD,IAAc,IACvB1D,EAAM,IAAM,IAAM2D,EAETD,IAAc,KACvB1D,EAAM,IAAM,qBAAuB2D,EAGnC,WAAW3D,EAAO,0BAA4B0D,EAAY,GAAG,EAGxD,EACT,CAEA,SAAS,mBAAmB1D,EAAO,CACjC,IAAIQ,EACA3D,EAIJ,GAFAA,EAAKmD,EAAM,MAAM,WAAWA,EAAM,QAAQ,EAEtCnD,IAAO,GAAa,MAAO,GAS/B,IAPImD,EAAM,SAAW,MACnB,WAAWA,EAAO,mCAAmC,EAGvDnD,EAAKmD,EAAM,MAAM,WAAW,EAAEA,EAAM,QAAQ,EAC5CQ,EAAYR,EAAM,SAEXnD,IAAO,GAAK,CAAC,aAAaA,CAAE,GAAK,CAAC,kBAAkBA,CAAE,GAC3DA,EAAKmD,EAAM,MAAM,WAAW,EAAEA,EAAM,QAAQ,EAG9C,OAAIA,EAAM,WAAaQ,GACrB,WAAWR,EAAO,4DAA4D,EAGhFA,EAAM,OAASA,EAAM,MAAM,MAAMQ,EAAWR,EAAM,QAAQ,EACnD,EACT,CAEA,SAAS,UAAUA,EAAO,CACxB,IAAIQ,EAAWhF,EACXqB,EAIJ,GAFAA,EAAKmD,EAAM,MAAM,WAAWA,EAAM,QAAQ,EAEtCnD,IAAO,GAAa,MAAO,GAK/B,IAHAA,EAAKmD,EAAM,MAAM,WAAW,EAAEA,EAAM,QAAQ,EAC5CQ,EAAYR,EAAM,SAEXnD,IAAO,GAAK,CAAC,aAAaA,CAAE,GAAK,CAAC,kBAAkBA,CAAE,GAC3DA,EAAKmD,EAAM,MAAM,WAAW,EAAEA,EAAM,QAAQ,EAG9C,OAAIA,EAAM,WAAaQ,GACrB,WAAWR,EAAO,2DAA2D,EAG/ExE,EAAQwE,EAAM,MAAM,MAAMQ,EAAWR,EAAM,QAAQ,EAE9CtB,kBAAgB,KAAKsB,EAAM,UAAWxE,CAAK,GAC9C,WAAWwE,EAAO,uBAAyBxE,EAAQ,GAAG,EAGxDwE,EAAM,OAASA,EAAM,UAAUxE,CAAK,EACpC,oBAAoBwE,EAAO,GAAM,EAAE,EAC5B,EACT,CAEA,SAAS,YAAYA,EAAO4D,EAAcC,EAAaC,EAAaT,EAAc,CAChF,IAAIU,EACAC,EACAC,EACAC,EAAe,EACfC,EAAa,GACbC,EAAa,GACbC,EACAC,EACA7M,EACA2L,EACAmB,EA6BJ,GA3BIvE,EAAM,WAAa,MACrBA,EAAM,SAAS,OAAQA,CAAK,EAG9BA,EAAM,IAAS,KACfA,EAAM,OAAS,KACfA,EAAM,KAAS,KACfA,EAAM,OAAS,KAEf+D,EAAmBC,EAAoBC,EACrC,oBAAsBJ,GACtB,mBAAsBA,EAEpBC,GACE,oBAAoB9D,EAAO,GAAM,EAAE,IACrCmE,EAAY,GAERnE,EAAM,WAAa4D,EACrBM,EAAe,EACNlE,EAAM,aAAe4D,EAC9BM,EAAe,EACNlE,EAAM,WAAa4D,IAC5BM,EAAe,KAKjBA,IAAiB,EACnB,KAAO,gBAAgBlE,CAAK,GAAK,mBAAmBA,CAAK,GACnD,oBAAoBA,EAAO,GAAM,EAAE,GACrCmE,EAAY,GACZF,EAAwBF,EAEpB/D,EAAM,WAAa4D,EACrBM,EAAe,EACNlE,EAAM,aAAe4D,EAC9BM,EAAe,EACNlE,EAAM,WAAa4D,IAC5BM,EAAe,KAGjBD,EAAwB,GAwD9B,GAnDIA,IACFA,EAAwBE,GAAad,IAGnCa,IAAiB,GAAK,oBAAsBL,KAC1C,kBAAoBA,GAAe,mBAAqBA,EAC1DT,EAAaQ,EAEbR,EAAaQ,EAAe,EAG9BW,EAAcvE,EAAM,SAAWA,EAAM,UAEjCkE,IAAiB,EACfD,IACC,kBAAkBjE,EAAOuE,CAAW,GACpC,iBAAiBvE,EAAOuE,EAAanB,CAAU,IAChD,mBAAmBpD,EAAOoD,CAAU,EACtCgB,EAAa,IAERJ,GAAqB,gBAAgBhE,EAAOoD,CAAU,GACvD,uBAAuBpD,EAAOoD,CAAU,GACxC,uBAAuBpD,EAAOoD,CAAU,EAC1CgB,EAAa,GAEJ,UAAUpE,CAAK,GACxBoE,EAAa,IAETpE,EAAM,MAAQ,MAAQA,EAAM,SAAW,OACzC,WAAWA,EAAO,2CAA2C,GAGtD,gBAAgBA,EAAOoD,EAAY,kBAAoBS,CAAW,IAC3EO,EAAa,GAETpE,EAAM,MAAQ,OAChBA,EAAM,IAAM,MAIZA,EAAM,SAAW,OACnBA,EAAM,UAAUA,EAAM,MAAM,EAAIA,EAAM,SAGjCkE,IAAiB,IAG1BE,EAAaH,GAAyB,kBAAkBjE,EAAOuE,CAAW,IAI1EvE,EAAM,MAAQ,MAAQA,EAAM,MAAQ,IACtC,GAAIA,EAAM,MAAQ,KAWhB,IAJIA,EAAM,SAAW,MAAQA,EAAM,OAAS,UAC1C,WAAWA,EAAO,oEAAsEA,EAAM,KAAO,GAAG,EAGrGqE,EAAY,EAAGC,EAAetE,EAAM,cAAc,OAAQqE,EAAYC,EAAcD,GAAa,EAGpG,GAFA5M,EAAOuI,EAAM,cAAcqE,CAAS,EAEhC5M,EAAK,QAAQuI,EAAM,MAAM,EAAG,CAC9BA,EAAM,OAASvI,EAAK,UAAUuI,EAAM,MAAM,EAC1CA,EAAM,IAAMvI,EAAK,IACbuI,EAAM,SAAW,OACnBA,EAAM,UAAUA,EAAM,MAAM,EAAIA,EAAM,QAExC,KACV,OAEetB,kBAAgB,KAAKsB,EAAM,QAAQA,EAAM,MAAQ,UAAU,EAAGA,EAAM,GAAG,GAChFvI,EAAOuI,EAAM,QAAQA,EAAM,MAAQ,UAAU,EAAEA,EAAM,GAAG,EAEpDA,EAAM,SAAW,MAAQvI,EAAK,OAASuI,EAAM,MAC/C,WAAWA,EAAO,gCAAkCA,EAAM,IAAM,wBAA0BvI,EAAK,KAAO,WAAauI,EAAM,KAAO,GAAG,EAGhIvI,EAAK,QAAQuI,EAAM,MAAM,GAG5BA,EAAM,OAASvI,EAAK,UAAUuI,EAAM,MAAM,EACtCA,EAAM,SAAW,OACnBA,EAAM,UAAUA,EAAM,MAAM,EAAIA,EAAM,SAJxC,WAAWA,EAAO,gCAAkCA,EAAM,IAAM,gBAAgB,GAQlF,WAAWA,EAAO,iBAAmBA,EAAM,IAAM,GAAG,EAIxD,OAAIA,EAAM,WAAa,MACrBA,EAAM,SAAS,QAASA,CAAK,EAExBA,EAAM,MAAQ,MAASA,EAAM,SAAW,MAAQoE,CACzD,CAEA,SAAS,aAAapE,EAAO,CAC3B,IAAIwE,EAAgBxE,EAAM,SACtBQ,EACAiE,EACAC,EACAC,EAAgB,GAChB9H,EAOJ,IALAmD,EAAM,QAAU,KAChBA,EAAM,gBAAkBA,EAAM,OAC9BA,EAAM,OAAS,CAAE,EACjBA,EAAM,UAAY,CAAE,GAEZnD,EAAKmD,EAAM,MAAM,WAAWA,EAAM,QAAQ,KAAO,IACvD,oBAAoBA,EAAO,GAAM,EAAE,EAEnCnD,EAAKmD,EAAM,MAAM,WAAWA,EAAM,QAAQ,EAEtC,EAAAA,EAAM,WAAa,GAAKnD,IAAO,MALuB,CAa1D,IAJA8H,EAAgB,GAChB9H,EAAKmD,EAAM,MAAM,WAAW,EAAEA,EAAM,QAAQ,EAC5CQ,EAAYR,EAAM,SAEXnD,IAAO,GAAK,CAAC,aAAaA,CAAE,GACjCA,EAAKmD,EAAM,MAAM,WAAW,EAAEA,EAAM,QAAQ,EAU9C,IAPAyE,EAAgBzE,EAAM,MAAM,MAAMQ,EAAWR,EAAM,QAAQ,EAC3D0E,EAAgB,CAAE,EAEdD,EAAc,OAAS,GACzB,WAAWzE,EAAO,8DAA8D,EAG3EnD,IAAO,GAAG,CACf,KAAO,eAAeA,CAAE,GACtBA,EAAKmD,EAAM,MAAM,WAAW,EAAEA,EAAM,QAAQ,EAG9C,GAAInD,IAAO,GAAa,CACtB,GAAKA,EAAKmD,EAAM,MAAM,WAAW,EAAEA,EAAM,QAAQ,QAC1CnD,IAAO,GAAK,CAAC,OAAOA,CAAE,GAC7B,KACR,CAEM,GAAI,OAAOA,CAAE,EAAG,MAIhB,IAFA2D,EAAYR,EAAM,SAEXnD,IAAO,GAAK,CAAC,aAAaA,CAAE,GACjCA,EAAKmD,EAAM,MAAM,WAAW,EAAEA,EAAM,QAAQ,EAG9C0E,EAAc,KAAK1E,EAAM,MAAM,MAAMQ,EAAWR,EAAM,QAAQ,CAAC,CACrE,CAEQnD,IAAO,GAAG,cAAcmD,CAAK,EAE7BtB,kBAAgB,KAAK,kBAAmB+F,CAAa,EACvD,kBAAkBA,CAAa,EAAEzE,EAAOyE,EAAeC,CAAa,EAEpE,aAAa1E,EAAO,+BAAiCyE,EAAgB,GAAG,CAE9E,CAyBE,GAvBA,oBAAoBzE,EAAO,GAAM,EAAE,EAE/BA,EAAM,aAAe,GACrBA,EAAM,MAAM,WAAWA,EAAM,QAAQ,IAAU,IAC/CA,EAAM,MAAM,WAAWA,EAAM,SAAW,CAAC,IAAM,IAC/CA,EAAM,MAAM,WAAWA,EAAM,SAAW,CAAC,IAAM,IACjDA,EAAM,UAAY,EAClB,oBAAoBA,EAAO,GAAM,EAAE,GAE1B2E,GACT,WAAW3E,EAAO,iCAAiC,EAGrD,YAAYA,EAAOA,EAAM,WAAa,EAAG,kBAAmB,GAAO,EAAI,EACvE,oBAAoBA,EAAO,GAAM,EAAE,EAE/BA,EAAM,iBACN,8BAA8B,KAAKA,EAAM,MAAM,MAAMwE,EAAexE,EAAM,QAAQ,CAAC,GACrF,aAAaA,EAAO,kDAAkD,EAGxEA,EAAM,UAAU,KAAKA,EAAM,MAAM,EAE7BA,EAAM,WAAaA,EAAM,WAAa,sBAAsBA,CAAK,EAAG,CAElEA,EAAM,MAAM,WAAWA,EAAM,QAAQ,IAAM,KAC7CA,EAAM,UAAY,EAClB,oBAAoBA,EAAO,GAAM,EAAE,GAErC,MACJ,CAEE,GAAIA,EAAM,SAAYA,EAAM,OAAS,EACnC,WAAWA,EAAO,uDAAuD,MAEzE,OAEJ,CAGA,SAAS,cAActH,EAAOC,EAAS,CACrCD,EAAQ,OAAOA,CAAK,EACpBC,EAAUA,GAAW,CAAE,EAEnBD,EAAM,SAAW,IAGfA,EAAM,WAAWA,EAAM,OAAS,CAAC,IAAM,IACvCA,EAAM,WAAWA,EAAM,OAAS,CAAC,IAAM,KACzCA,GAAS;AAAA,GAIPA,EAAM,WAAW,CAAC,IAAM,QAC1BA,EAAQA,EAAM,MAAM,CAAC,IAIzB,IAAIsH,EAAQ,IAAID,QAAMrH,EAAOC,CAAO,EAEhCiM,EAAUlM,EAAM,QAAQ,IAAI,EAUhC,IARIkM,IAAY,KACd5E,EAAM,SAAW4E,EACjB,WAAW5E,EAAO,mCAAmC,GAIvDA,EAAM,OAAS,KAERA,EAAM,MAAM,WAAWA,EAAM,QAAQ,IAAM,IAChDA,EAAM,YAAc,EACpBA,EAAM,UAAY,EAGpB,KAAOA,EAAM,SAAYA,EAAM,OAAS,GACtC,aAAaA,CAAK,EAGpB,OAAOA,EAAM,SACf,CAGA,SAAS,QAAQtH,EAAOmM,EAAUlM,EAAS,CACrCkM,IAAa,MAAQ,OAAOA,GAAa,UAAY,OAAOlM,EAAY,MAC1EA,EAAUkM,EACVA,EAAW,MAGb,IAAIC,EAAY,cAAcpM,EAAOC,CAAO,EAE5C,GAAI,OAAOkM,GAAa,WACtB,OAAOC,EAGT,QAASjL,EAAQ,EAAGC,EAASgL,EAAU,OAAQjL,EAAQC,EAAQD,GAAS,EACtEgL,EAASC,EAAUjL,CAAK,CAAC,CAE7B,CAGA,SAAS,KAAKnB,EAAOC,EAAS,CAC5B,IAAImM,EAAY,cAAcpM,EAAOC,CAAO,EAE5C,GAAImM,EAAU,SAAW,EAGlB,IAAIA,EAAU,SAAW,EAC9B,OAAOA,EAAU,CAAC,EAEpB,MAAM,IAAIxK,gBAAc,0DAA0D,EACpF,CAGA,SAAS,YAAY5B,EAAOmM,EAAUlM,EAAS,CAC7C,OAAI,OAAOkM,GAAa,UAAYA,IAAa,MAAQ,OAAOlM,EAAY,MAC1EA,EAAUkM,EACVA,EAAW,MAGN,QAAQnM,EAAOmM,EAAUxK,SAAO,OAAO,CAAE,OAAQsF,uBAAuBhH,CAAO,CAAC,CACzF,CAGA,SAAS,SAASD,EAAOC,EAAS,CAChC,OAAO,KAAKD,EAAO2B,SAAO,OAAO,CAAE,OAAQsF,uBAAuBhH,CAAO,CAAC,CAC5E,CAGsBoM,SAAA,QAAO,QACVA,SAAA,KAAU,KACHA,SAAA,YAAG,YAC7BA,SAAA,SAA6B,yBCvmDzB,OAAsBjN,SACtB,cAAsBW,UACtB,oBAAsBmD,aACtB,oBAAsBY,aAEtB,UAAkB,OAAO,UAAU,SACnCkC,kBAAkB,OAAO,UAAU,eAEnC,SAA4B,EAC5B,eAA4B,GAC5B,qBAA4B,GAC5B,WAA4B,GAC5B,iBAA4B,GAC5B,kBAA4B,GAC5B,WAA4B,GAC5B,aAA4B,GAC5B,eAA4B,GAC5B,kBAA4B,GAC5B,cAA4B,GAC5B,WAA4B,GAC5B,WAA4B,GAC5B,WAA4B,GAC5B,YAA4B,GAC5B,kBAA4B,GAC5B,cAA4B,GAC5B,mBAA4B,GAC5B,yBAA4B,GAC5B,0BAA4B,GAC5B,kBAA4B,GAC5B,wBAA4B,IAC5B,mBAA4B,IAC5B,yBAA4B,IAE5B,iBAAmB,CAAE,EAEzB,iBAAiB,CAAI,EAAM,MAC3B,iBAAiB,CAAI,EAAM,MAC3B,iBAAiB,CAAI,EAAM,MAC3B,iBAAiB,CAAI,EAAM,MAC3B,iBAAiB,EAAI,EAAM,MAC3B,iBAAiB,EAAI,EAAM,MAC3B,iBAAiB,EAAI,EAAM,MAC3B,iBAAiB,EAAI,EAAM,MAC3B,iBAAiB,EAAI,EAAM,MAC3B,iBAAiB,EAAI,EAAM,MAC3B,iBAAiB,EAAI,EAAM,OAC3B,iBAAiB,GAAI,EAAM,MAC3B,iBAAiB,GAAI,EAAM,MAC3B,iBAAiB,IAAM,EAAI,MAC3B,iBAAiB,IAAM,EAAI,MAE3B,IAAI,2BAA6B,CAC/B,IAAK,IAAK,MAAO,MAAO,MAAO,KAAM,KAAM,KAC3C,IAAK,IAAK,KAAM,KAAM,KAAM,MAAO,MAAO,KAC5C,EAEA,SAAS,gBAAgB7C,EAAQP,EAAK,CACpC,IAAIpB,EAAQ8E,EAAMnF,EAAOC,EAAQ4B,EAAKH,EAAO9D,EAE7C,GAAI6D,IAAQ,KAAM,MAAO,CAAE,EAK3B,IAHApB,EAAS,CAAE,EACX8E,EAAO,OAAO,KAAK1D,CAAG,EAEjBzB,EAAQ,EAAGC,EAASkF,EAAK,OAAQnF,EAAQC,EAAQD,GAAS,EAC7D6B,EAAMsD,EAAKnF,CAAK,EAChB0B,EAAQ,OAAOD,EAAII,CAAG,CAAC,EAEnBA,EAAI,MAAM,EAAG,CAAC,IAAM,OACtBA,EAAM,qBAAuBA,EAAI,MAAM,CAAC,GAE1CjE,EAAOoE,EAAO,gBAAgB,SAAYH,CAAG,EAEzCjE,GAAQiH,kBAAgB,KAAKjH,EAAK,aAAc8D,CAAK,IACvDA,EAAQ9D,EAAK,aAAa8D,CAAK,GAGjCrB,EAAOwB,CAAG,EAAIH,EAGhB,OAAOrB,CACT,CAEA,SAAS,UAAU8K,EAAW,CAC5B,IAAIhL,EAAQqG,EAAQvG,EAIpB,GAFAE,EAASgL,EAAU,SAAS,EAAE,EAAE,YAAa,EAEzCA,GAAa,IACf3E,EAAS,IACTvG,EAAS,UACAkL,GAAa,MACtB3E,EAAS,IACTvG,EAAS,UACAkL,GAAa,WACtB3E,EAAS,IACTvG,EAAS,MAET,OAAM,IAAI,cAAc,+DAA+D,EAGzF,MAAO,KAAOuG,EAAS,OAAO,OAAO,IAAKvG,EAASE,EAAO,MAAM,EAAIA,CACtE,CAEA,SAAS,MAAMrB,EAAS,CACtB,KAAK,OAAgBA,EAAQ,QAAa,oBAC1C,KAAK,OAAgB,KAAK,IAAI,EAAIA,EAAQ,QAAa,CAAG,EAC1D,KAAK,cAAgBA,EAAQ,eAAoB,GACjD,KAAK,YAAgBA,EAAQ,aAAkB,GAC/C,KAAK,UAAiB,OAAO,UAAUA,EAAQ,SAAY,EAAI,GAAKA,EAAQ,UAC5E,KAAK,SAAgB,gBAAgB,KAAK,OAAQA,EAAQ,QAAa,IAAI,EAC3E,KAAK,SAAgBA,EAAQ,UAAe,GAC5C,KAAK,UAAgBA,EAAQ,WAAgB,GAC7C,KAAK,OAAgBA,EAAQ,QAAa,GAC1C,KAAK,aAAgBA,EAAQ,cAAmB,GAChD,KAAK,aAAgBA,EAAQ,cAAmB,GAEhD,KAAK,cAAgB,KAAK,OAAO,iBACjC,KAAK,cAAgB,KAAK,OAAO,iBAEjC,KAAK,IAAM,KACX,KAAK,OAAS,GAEd,KAAK,WAAa,CAAE,EACpB,KAAK,eAAiB,IACxB,CAGA,SAAS,aAAaqB,EAAQiL,EAAQ,CAQpC,QAPIC,EAAM,OAAO,OAAO,IAAKD,CAAM,EAC/BrK,EAAW,EACXuK,EAAO,GACPjL,EAAS,GACTX,EACAO,EAASE,EAAO,OAEbY,EAAWd,GAChBqL,EAAOnL,EAAO,QAAQ;AAAA,EAAMY,CAAQ,EAChCuK,IAAS,IACX5L,EAAOS,EAAO,MAAMY,CAAQ,EAC5BA,EAAWd,IAEXP,EAAOS,EAAO,MAAMY,EAAUuK,EAAO,CAAC,EACtCvK,EAAWuK,EAAO,GAGhB5L,EAAK,QAAUA,IAAS;AAAA,IAAMW,GAAUgL,GAE5ChL,GAAUX,EAGZ,OAAOW,CACT,CAEA,SAAS,iBAAiB8F,EAAOoF,EAAO,CACtC,MAAO;AAAA,EAAO,OAAO,OAAO,IAAKpF,EAAM,OAASoF,CAAK,CACvD,CAEA,SAAS,sBAAsBpF,EAAOqF,EAAK,CACzC,IAAIxL,EAAOC,EAAQrC,EAEnB,IAAKoC,EAAQ,EAAGC,EAASkG,EAAM,cAAc,OAAQnG,EAAQC,EAAQD,GAAS,EAG5E,GAFApC,EAAOuI,EAAM,cAAcnG,CAAK,EAE5BpC,EAAK,QAAQ4N,CAAG,EAClB,MAAO,GAIX,MAAO,EACT,CAGA,SAAS,aAAa1I,EAAG,CACvB,OAAOA,IAAM,YAAcA,IAAM,QACnC,CAMA,SAAS,YAAYA,EAAG,CACtB,MAAS,KAAWA,GAAKA,GAAK,KACrB,KAAWA,GAAKA,GAAK,OAAaA,IAAM,MAAUA,IAAM,MACxD,OAAWA,GAAKA,GAAK,OAAaA,IAAM,OACxC,OAAWA,GAAKA,GAAK,OAChC,CAQA,SAAS,SAASA,EAAG,CACnB,OAAO,YAAYA,CAAC,GAAK,CAAC,aAAaA,CAAC,GAEnCA,IAAM,OAENA,IAAM,sBACNA,IAAM,cACb,CAGA,SAAS,YAAYA,EAAG2I,EAAM,CAG5B,OAAO,YAAY3I,CAAC,GAAKA,IAAM,OAE1BA,IAAM,YACNA,IAAM,0BACNA,IAAM,2BACNA,IAAM,yBACNA,IAAM,0BAGNA,IAAM,aACJA,IAAM,YAAgB2I,GAAQ,SAASA,CAAI,EACpD,CAGA,SAAS,iBAAiB3I,EAAG,CAG3B,OAAO,YAAYA,CAAC,GAAKA,IAAM,OAC1B,CAAC,aAAaA,CAAC,GAGfA,IAAM,YACNA,IAAM,eACNA,IAAM,YACNA,IAAM,YACNA,IAAM,0BACNA,IAAM,2BACNA,IAAM,yBACNA,IAAM,0BAENA,IAAM,YACNA,IAAM,gBACNA,IAAM,eACNA,IAAM,kBACNA,IAAM,oBACNA,IAAM,aACNA,IAAM,mBACNA,IAAM,mBACNA,IAAM,mBAENA,IAAM,cACNA,IAAM,oBACNA,IAAM,iBACb,CAGA,SAAS,oBAAoB3C,EAAQ,CACnC,IAAIuL,EAAiB,QACrB,OAAOA,EAAe,KAAKvL,CAAM,CACnC,CAEA,IAAI,YAAgB,EAChB,aAAgB,EAChB,cAAgB,EAChB,aAAgB,EAChB,aAAgB,EASpB,SAAS,kBAAkBA,EAAQwL,EAAgBC,EAAgBC,EAAWC,EAAmB,CAC/F,IAAI1N,EACA2N,EAAMC,EACNC,EAAe,GACfC,EAAkB,GAClBC,EAAmBN,IAAc,GACjCO,EAAoB,GACpBC,EAAQ,iBAAiBlM,EAAO,WAAW,CAAC,CAAC,GACtC,CAAC,aAAaA,EAAO,WAAWA,EAAO,OAAS,CAAC,CAAC,EAE7D,GAAIwL,EAGF,IAAKvN,EAAI,EAAGA,EAAI+B,EAAO,OAAQ/B,IAAK,CAElC,GADA2N,EAAO5L,EAAO,WAAW/B,CAAC,EACtB,CAAC,YAAY2N,CAAI,EACnB,OAAO,aAETC,EAAY5N,EAAI,EAAI+B,EAAO,WAAW/B,EAAI,CAAC,EAAI,KAC/CiO,EAAQA,GAAS,YAAYN,EAAMC,CAAS,CAClD,KACS,CAEL,IAAK5N,EAAI,EAAGA,EAAI+B,EAAO,OAAQ/B,IAAK,CAElC,GADA2N,EAAO5L,EAAO,WAAW/B,CAAC,EACtB2N,IAAS,eACXE,EAAe,GAEXE,IACFD,EAAkBA,GAEf9N,EAAIgO,EAAoB,EAAIP,GAC5B1L,EAAOiM,EAAoB,CAAC,IAAM,IACrCA,EAAoBhO,WAEb,CAAC,YAAY2N,CAAI,EAC1B,OAAO,aAETC,EAAY5N,EAAI,EAAI+B,EAAO,WAAW/B,EAAI,CAAC,EAAI,KAC/CiO,EAAQA,GAAS,YAAYN,EAAMC,CAAS,CAClD,CAEIE,EAAkBA,GAAoBC,GACnC/N,EAAIgO,EAAoB,EAAIP,GAC5B1L,EAAOiM,EAAoB,CAAC,IAAM,GACzC,CAIE,MAAI,CAACH,GAAgB,CAACC,EAGbG,GAAS,CAACP,EAAkB3L,CAAM,EACrC,YAAc,aAGhByL,EAAiB,GAAK,oBAAoBzL,CAAM,EAC3C,aAIF+L,EAAkB,aAAe,aAC1C,CAQA,SAAS,YAAY/F,EAAOhG,EAAQoL,EAAOe,EAAO,CAChDnG,EAAM,KAAQ,UAAY,CACxB,GAAIhG,EAAO,SAAW,EACpB,MAAO,KAET,GAAI,CAACgG,EAAM,cACP,2BAA2B,QAAQhG,CAAM,IAAM,GACjD,MAAO,IAAMA,EAAS,IAGxB,IAAIc,EAASkF,EAAM,OAAS,KAAK,IAAI,EAAGoF,CAAK,EAQzCM,EAAY1F,EAAM,YAAc,GAChC,GAAK,KAAK,IAAI,KAAK,IAAIA,EAAM,UAAW,EAAE,EAAGA,EAAM,UAAYlF,CAAM,EAGrE0K,EAAiBW,GAEfnG,EAAM,UAAY,IAAMoF,GAASpF,EAAM,UAC7C,SAASoG,EAAcpM,EAAQ,CAC7B,OAAO,sBAAsBgG,EAAOhG,CAAM,CAChD,CAEI,OAAQ,kBAAkBA,EAAQwL,EAAgBxF,EAAM,OAAQ0F,EAAWU,CAAa,EAAC,CACvF,KAAK,YACH,OAAOpM,EACT,KAAK,aACH,MAAO,IAAMA,EAAO,QAAQ,KAAM,IAAI,EAAI,IAC5C,KAAK,cACH,MAAO,IAAM,YAAYA,EAAQgG,EAAM,MAAM,EACzC,kBAAkB,aAAahG,EAAQc,CAAM,CAAC,EACpD,KAAK,aACH,MAAO,IAAM,YAAYd,EAAQgG,EAAM,MAAM,EACzC,kBAAkB,aAAa,WAAWhG,EAAQ0L,CAAS,EAAG5K,CAAM,CAAC,EAC3E,KAAK,aACH,MAAO,IAAM,aAAad,CAAiB,EAAI,IACjD,QACE,MAAM,IAAI,cAAc,wCAAwC,CACxE,CACA,GACA,CAGA,SAAS,YAAYA,EAAQyL,EAAgB,CAC3C,IAAIY,EAAkB,oBAAoBrM,CAAM,EAAI,OAAOyL,CAAc,EAAI,GAGzEa,EAAgBtM,EAAOA,EAAO,OAAS,CAAC,IAAM;AAAA,EAC9CuM,EAAOD,IAAStM,EAAOA,EAAO,OAAS,CAAC,IAAM;AAAA,GAAQA,IAAW;AAAA,GACjEwM,EAAQD,EAAO,IAAOD,EAAO,GAAK,IAEtC,OAAOD,EAAkBG,EAAQ;AAAA,CACnC,CAGA,SAAS,kBAAkBxM,EAAQ,CACjC,OAAOA,EAAOA,EAAO,OAAS,CAAC,IAAM;AAAA,EAAOA,EAAO,MAAM,EAAG,EAAE,EAAIA,CACpE,CAIA,SAAS,WAAWA,EAAQyM,EAAO,CAoBjC,QAfIC,EAAS,iBAGTxM,EAAU,UAAY,CACxB,IAAIyM,EAAS3M,EAAO,QAAQ;AAAA,CAAI,EAChC,OAAA2M,EAASA,IAAW,GAAKA,EAAS3M,EAAO,OACzC0M,EAAO,UAAYC,EACZ,SAAS3M,EAAO,MAAM,EAAG2M,CAAM,EAAGF,CAAK,CAClD,IAEMG,EAAmB5M,EAAO,CAAC,IAAM;AAAA,GAAQA,EAAO,CAAC,IAAM,IACvD6M,EAGAtJ,EACIA,EAAQmJ,EAAO,KAAK1M,CAAM,GAAI,CACpC,IAAIsG,EAAS/C,EAAM,CAAC,EAAGhE,EAAOgE,EAAM,CAAC,EACrCsJ,EAAgBtN,EAAK,CAAC,IAAM,IAC5BW,GAAUoG,GACL,CAACsG,GAAoB,CAACC,GAAgBtN,IAAS,GAC9C;AAAA,EAAO,IACT,SAASA,EAAMkN,CAAK,EACxBG,EAAmBC,CACvB,CAEE,OAAO3M,CACT,CAMA,SAAS,SAASX,EAAMkN,EAAO,CAC7B,GAAIlN,IAAS,IAAMA,EAAK,CAAC,IAAM,IAAK,OAAOA,EAa3C,QAVIuN,EAAU,SACVvJ,EAEAtC,EAAQ,EAAGE,EAAK4L,EAAO,EAAG5B,EAAO,EACjCjL,EAAS,GAMLqD,EAAQuJ,EAAQ,KAAKvN,CAAI,GAC/B4L,EAAO5H,EAAM,MAET4H,EAAOlK,EAAQwL,IACjBtL,EAAO4L,EAAO9L,EAAS8L,EAAO5B,EAC9BjL,GAAU;AAAA,EAAOX,EAAK,MAAM0B,EAAOE,CAAG,EAEtCF,EAAQE,EAAM,GAEhB4L,EAAO5B,EAKT,OAAAjL,GAAU;AAAA,EAENX,EAAK,OAAS0B,EAAQwL,GAASM,EAAO9L,EACxCf,GAAUX,EAAK,MAAM0B,EAAO8L,CAAI,EAAI;AAAA,EAAOxN,EAAK,MAAMwN,EAAO,CAAC,EAE9D7M,GAAUX,EAAK,MAAM0B,CAAK,EAGrBf,EAAO,MAAM,CAAC,CACvB,CAGA,SAAS,aAAaF,EAAQ,CAK5B,QAJIE,EAAS,GACT0L,EAAMoB,EACNC,EAEKhP,EAAI,EAAGA,EAAI+B,EAAO,OAAQ/B,IAAK,CAGtC,GAFA2N,EAAO5L,EAAO,WAAW/B,CAAC,EAEtB2N,GAAQ,OAAUA,GAAQ,QAC5BoB,EAAWhN,EAAO,WAAW/B,EAAI,CAAC,EAC9B+O,GAAY,OAAUA,GAAY,OAA2B,CAE/D9M,GAAU,WAAW0L,EAAO,OAAU,KAAQoB,EAAW,MAAS,KAAO,EAEzE/O,IAAK,QACb,CAEIgP,EAAY,iBAAiBrB,CAAI,EACjC1L,GAAU,CAAC+M,GAAa,YAAYrB,CAAI,EACpC5L,EAAO/B,CAAC,EACRgP,GAAa,UAAUrB,CAAI,CACnC,CAEE,OAAO1L,CACT,CAEA,SAAS,kBAAkB8F,EAAOoF,EAAO1I,EAAQ,CAC/C,IAAIiE,EAAU,GACV2B,EAAUtC,EAAM,IAChBnG,EACAC,EAEJ,IAAKD,EAAQ,EAAGC,EAAS4C,EAAO,OAAQ7C,EAAQC,EAAQD,GAAS,EAE3D,UAAUmG,EAAOoF,EAAO1I,EAAO7C,CAAK,EAAG,GAAO,EAAK,IACjDA,IAAU,IAAG8G,GAAW,KAAQX,EAAM,aAAqB,GAAN,MACzDW,GAAWX,EAAM,MAIrBA,EAAM,IAAMsC,EACZtC,EAAM,KAAO,IAAMW,EAAU,GAC/B,CAEA,SAAS,mBAAmBX,EAAOoF,EAAO1I,EAAQjC,EAAS,CACzD,IAAIkG,EAAU,GACV2B,EAAUtC,EAAM,IAChBnG,EACAC,EAEJ,IAAKD,EAAQ,EAAGC,EAAS4C,EAAO,OAAQ7C,EAAQC,EAAQD,GAAS,EAE3D,UAAUmG,EAAOoF,EAAQ,EAAG1I,EAAO7C,CAAK,EAAG,GAAM,EAAI,KACnD,CAACY,GAAWZ,IAAU,KACxB8G,GAAW,iBAAiBX,EAAOoF,CAAK,GAGtCpF,EAAM,MAAQ,iBAAmBA,EAAM,KAAK,WAAW,CAAC,EAC1DW,GAAW,IAEXA,GAAW,KAGbA,GAAWX,EAAM,MAIrBA,EAAM,IAAMsC,EACZtC,EAAM,KAAOW,GAAW,IAC1B,CAEA,SAAS,iBAAiBX,EAAOoF,EAAO1I,EAAQ,CAC9C,IAAIiE,EAAgB,GAChB2B,EAAgBtC,EAAM,IACtBkH,EAAgB,OAAO,KAAKxK,CAAM,EAClC7C,EACAC,EACAqN,EACAC,EACAC,EAEJ,IAAKxN,EAAQ,EAAGC,EAASoN,EAAc,OAAQrN,EAAQC,EAAQD,GAAS,EAEtEwN,EAAa,GACTxN,IAAU,IAAGwN,GAAc,MAE3BrH,EAAM,eAAcqH,GAAc,KAEtCF,EAAYD,EAAcrN,CAAK,EAC/BuN,EAAc1K,EAAOyK,CAAS,EAEzB,UAAUnH,EAAOoF,EAAO+B,EAAW,GAAO,EAAK,IAIhDnH,EAAM,KAAK,OAAS,OAAMqH,GAAc,MAE5CA,GAAcrH,EAAM,MAAQA,EAAM,aAAe,IAAM,IAAM,KAAOA,EAAM,aAAe,GAAK,KAEzF,UAAUA,EAAOoF,EAAOgC,EAAa,GAAO,EAAK,IAItDC,GAAcrH,EAAM,KAGpBW,GAAW0G,IAGbrH,EAAM,IAAMsC,EACZtC,EAAM,KAAO,IAAMW,EAAU,GAC/B,CAEA,SAAS,kBAAkBX,EAAOoF,EAAO1I,EAAQjC,EAAS,CACxD,IAAIkG,EAAgB,GAChB2B,EAAgBtC,EAAM,IACtBkH,EAAgB,OAAO,KAAKxK,CAAM,EAClC7C,EACAC,EACAqN,EACAC,EACAE,EACAD,EAGJ,GAAIrH,EAAM,WAAa,GAErBkH,EAAc,KAAM,UACX,OAAOlH,EAAM,UAAa,WAEnCkH,EAAc,KAAKlH,EAAM,QAAQ,UACxBA,EAAM,SAEf,MAAM,IAAI,cAAc,0CAA0C,EAGpE,IAAKnG,EAAQ,EAAGC,EAASoN,EAAc,OAAQrN,EAAQC,EAAQD,GAAS,EACtEwN,EAAa,IAET,CAAC5M,GAAWZ,IAAU,KACxBwN,GAAc,iBAAiBrH,EAAOoF,CAAK,GAG7C+B,EAAYD,EAAcrN,CAAK,EAC/BuN,EAAc1K,EAAOyK,CAAS,EAEzB,UAAUnH,EAAOoF,EAAQ,EAAG+B,EAAW,GAAM,GAAM,EAAI,IAI5DG,EAAgBtH,EAAM,MAAQ,MAAQA,EAAM,MAAQ,KACpCA,EAAM,MAAQA,EAAM,KAAK,OAAS,KAE9CsH,IACEtH,EAAM,MAAQ,iBAAmBA,EAAM,KAAK,WAAW,CAAC,EAC1DqH,GAAc,IAEdA,GAAc,MAIlBA,GAAcrH,EAAM,KAEhBsH,IACFD,GAAc,iBAAiBrH,EAAOoF,CAAK,GAGxC,UAAUpF,EAAOoF,EAAQ,EAAGgC,EAAa,GAAME,CAAY,IAI5DtH,EAAM,MAAQ,iBAAmBA,EAAM,KAAK,WAAW,CAAC,EAC1DqH,GAAc,IAEdA,GAAc,KAGhBA,GAAcrH,EAAM,KAGpBW,GAAW0G,IAGbrH,EAAM,IAAMsC,EACZtC,EAAM,KAAOW,GAAW,IAC1B,CAEA,SAAS,WAAWX,EAAOtD,EAAQ6K,EAAU,CAC3C,IAAI5G,EAAS6G,EAAU3N,EAAOC,EAAQrC,EAAM8D,EAI5C,IAFAiM,EAAWD,EAAWvH,EAAM,cAAgBA,EAAM,cAE7CnG,EAAQ,EAAGC,EAAS0N,EAAS,OAAQ3N,EAAQC,EAAQD,GAAS,EAGjE,GAFApC,EAAO+P,EAAS3N,CAAK,GAEhBpC,EAAK,YAAeA,EAAK,aACzB,CAACA,EAAK,YAAgB,OAAOiF,GAAW,UAAcA,aAAkBjF,EAAK,cAC7E,CAACA,EAAK,WAAcA,EAAK,UAAUiF,CAAM,GAAI,CAIhD,GAFAsD,EAAM,IAAMuH,EAAW9P,EAAK,IAAM,IAE9BA,EAAK,UAAW,CAGlB,GAFA8D,EAAQyE,EAAM,SAASvI,EAAK,GAAG,GAAKA,EAAK,aAErC,UAAU,KAAKA,EAAK,SAAS,IAAM,oBACrCkJ,EAAUlJ,EAAK,UAAUiF,EAAQnB,CAAK,UAC7BmD,kBAAgB,KAAKjH,EAAK,UAAW8D,CAAK,EACnDoF,EAAUlJ,EAAK,UAAU8D,CAAK,EAAEmB,EAAQnB,CAAK,MAE7C,OAAM,IAAI,cAAc,KAAO9D,EAAK,IAAM,+BAAiC8D,EAAQ,SAAS,EAG9FyE,EAAM,KAAOW,CACrB,CAEM,MAAO,EACb,CAGE,MAAO,EACT,CAKA,SAAS,UAAUX,EAAOoF,EAAO1I,EAAQ+K,EAAOhN,EAAS0L,EAAO,CAC9DnG,EAAM,IAAM,KACZA,EAAM,KAAOtD,EAER,WAAWsD,EAAOtD,EAAQ,EAAK,GAClC,WAAWsD,EAAOtD,EAAQ,EAAI,EAGhC,IAAIjF,EAAO,UAAU,KAAKuI,EAAM,IAAI,EAEhCyH,IACFA,EAASzH,EAAM,UAAY,GAAKA,EAAM,UAAYoF,GAGpD,IAAIsC,EAAgBjQ,IAAS,mBAAqBA,IAAS,iBACvDkQ,EACAC,EAWJ,GATIF,IACFC,EAAiB3H,EAAM,WAAW,QAAQtD,CAAM,EAChDkL,EAAYD,IAAmB,KAG5B3H,EAAM,MAAQ,MAAQA,EAAM,MAAQ,KAAQ4H,GAAc5H,EAAM,SAAW,GAAKoF,EAAQ,KAC3F3K,EAAU,IAGRmN,GAAa5H,EAAM,eAAe2H,CAAc,EAClD3H,EAAM,KAAO,QAAU2H,MAClB,CAIL,GAHID,GAAiBE,GAAa,CAAC5H,EAAM,eAAe2H,CAAc,IACpE3H,EAAM,eAAe2H,CAAc,EAAI,IAErClQ,IAAS,kBACPgQ,GAAU,OAAO,KAAKzH,EAAM,IAAI,EAAE,SAAW,GAC/C,kBAAkBA,EAAOoF,EAAOpF,EAAM,KAAMvF,CAAO,EAC/CmN,IACF5H,EAAM,KAAO,QAAU2H,EAAiB3H,EAAM,QAGhD,iBAAiBA,EAAOoF,EAAOpF,EAAM,IAAI,EACrC4H,IACF5H,EAAM,KAAO,QAAU2H,EAAiB,IAAM3H,EAAM,eAG/CvI,IAAS,iBAAkB,CACpC,IAAIoQ,EAAc7H,EAAM,eAAkBoF,EAAQ,EAAMA,EAAQ,EAAIA,EAChEqC,GAAUzH,EAAM,KAAK,SAAW,GAClC,mBAAmBA,EAAO6H,EAAY7H,EAAM,KAAMvF,CAAO,EACrDmN,IACF5H,EAAM,KAAO,QAAU2H,EAAiB3H,EAAM,QAGhD,kBAAkBA,EAAO6H,EAAY7H,EAAM,IAAI,EAC3C4H,IACF5H,EAAM,KAAO,QAAU2H,EAAiB,IAAM3H,EAAM,MAG9D,SAAevI,IAAS,kBACduI,EAAM,MAAQ,KAChB,YAAYA,EAAOA,EAAM,KAAMoF,EAAOe,CAAK,MAExC,CACL,GAAInG,EAAM,YAAa,MAAO,GAC9B,MAAM,IAAI,cAAc,0CAA4CvI,CAAI,CAC9E,CAEQuI,EAAM,MAAQ,MAAQA,EAAM,MAAQ,MACtCA,EAAM,KAAO,KAAOA,EAAM,IAAM,KAAOA,EAAM,KAEnD,CAEE,MAAO,EACT,CAEA,SAAS,uBAAuBtD,EAAQsD,EAAO,CAC7C,IAAI8H,EAAU,CAAE,EACZC,EAAoB,CAAE,EACtBlO,EACAC,EAIJ,IAFA,YAAY4C,EAAQoL,EAASC,CAAiB,EAEzClO,EAAQ,EAAGC,EAASiO,EAAkB,OAAQlO,EAAQC,EAAQD,GAAS,EAC1EmG,EAAM,WAAW,KAAK8H,EAAQC,EAAkBlO,CAAK,CAAC,CAAC,EAEzDmG,EAAM,eAAiB,IAAI,MAAMlG,CAAM,CACzC,CAEA,SAAS,YAAY4C,EAAQoL,EAASC,EAAmB,CACvD,IAAIb,EACArN,EACAC,EAEJ,GAAI4C,IAAW,MAAQ,OAAOA,GAAW,SAEvC,GADA7C,EAAQiO,EAAQ,QAAQpL,CAAM,EAC1B7C,IAAU,GACRkO,EAAkB,QAAQlO,CAAK,IAAM,IACvCkO,EAAkB,KAAKlO,CAAK,UAG9BiO,EAAQ,KAAKpL,CAAM,EAEf,MAAM,QAAQA,CAAM,EACtB,IAAK7C,EAAQ,EAAGC,EAAS4C,EAAO,OAAQ7C,EAAQC,EAAQD,GAAS,EAC/D,YAAY6C,EAAO7C,CAAK,EAAGiO,EAASC,CAAiB,MAKvD,KAFAb,EAAgB,OAAO,KAAKxK,CAAM,EAE7B7C,EAAQ,EAAGC,EAASoN,EAAc,OAAQrN,EAAQC,EAAQD,GAAS,EACtE,YAAY6C,EAAOwK,EAAcrN,CAAK,CAAC,EAAGiO,EAASC,CAAiB,CAK9E,CAEA,SAAS,KAAKrP,EAAOC,EAAS,CAC5BA,EAAUA,GAAW,CAAE,EAEvB,IAAIqH,EAAQ,IAAI,MAAMrH,CAAO,EAI7B,OAFKqH,EAAM,QAAQ,uBAAuBtH,EAAOsH,CAAK,EAElD,UAAUA,EAAO,EAAGtH,EAAO,GAAM,EAAI,EAAUsH,EAAM,KAAO;AAAA,EAEzD,EACT,CAEA,SAAS,SAAStH,EAAOC,EAAS,CAChC,OAAO,KAAKD,EAAO,OAAO,OAAO,CAAE,OAAQ,qBAAuBC,CAAO,CAAC,CAC5E,CAEmBqP,SAAA,KAAO,KAC1BA,SAAA,SAA0B,SC90B1B,IAAI,OAASlQ,SACT,OAASW,SAGb,SAAS,WAAWd,EAAM,CACxB,OAAO,UAAY,CACjB,MAAM,IAAI,MAAM,YAAcA,EAAO,oCAAoC,CAC1E,CACH,CAGmBsQ,SAAA,KAAkBrM,KAChBqM,SAAA,OAAgBzL,OACPyL,SAAA,gBAAO5K,SACX4K,SAAA,YAAW3K,KACX2K,SAAA,YAAWhJ,KACHgJ,SAAA,oBAAG/I,aACH+I,SAAA,oBAAGC,aACrCD,SAAA,KAAqC,OAAO,KAC5CA,SAAA,QAAqC,OAAO,QAC5CA,SAAA,SAAqC,OAAO,SAC5CA,SAAA,YAAqC,OAAO,YAC5CA,SAAA,KAAqC,OAAO,KAC5CA,SAAA,SAAqC,OAAO,SAChBA,SAAA,cAASE,UAGRF,SAAA,eAAG5K,SACN4K,SAAA,YAAM/I,aACH+I,SAAA,eAAGC,aAGhCD,SAAA,KAAgC,WAAW,MAAM,EACjDA,SAAA,MAAgC,WAAW,OAAO,EAClDA,SAAA,QAAgC,WAAW,SAAS,EACpDA,SAAA,eAAgC,WAAW,gBAAgB,ECnC3D,IAAI,KAAOnQ,SAGX,OAAiB,+BCJjB,MAAM,KAAOA,OAMP,QAAoB,OAAO,QAMjC,QAAQ,KAAO,CACb,MAAO,KAAK,SAAS,KAAK,IAAI,EAC9B,UAAW,KAAK,SAAS,KAAK,IAAI,CACnC,EAMD,QAAQ,KAAO,CACb,MAAO,KAAK,MAAM,KAAK,IAAI,EAC3B,UAAW,SAASI,EAAKS,EAAS,CAChC,MAAMG,EAAO,OAAO,OAAO,CAAC,SAAU,KAAM,MAAO,CAAC,EAAGH,CAAO,EAC9D,OAAO,KAAK,UAAUT,EAAKY,EAAK,SAAUA,EAAK,KAAK,EAEvD,EAMD,QAAQ,WAAa,CACnB,MAAO,SAAS,MAAM,IAAK,QAAS,KAAM,CAExC,GAAI,CACF,OAAI,OAAS,KACX,IAAM;AAAA,SAA2B,IAAI,KAAM,EAAG;AAAA,QAEzC,KAAK,GAAG,GAAK,CAAE,CACvB,OAAQlB,EAAK,CACZ,GAAI,OAAS,IAAS,2BAA2B,KAAKA,EAAI,OAAO,EAC/D,OAAO,MAAM,IAAK,QAAS,EAAK,EAElC,MAAM,IAAI,YAAYA,CAAG,EAE5B,EACD,UAAW,UAAW,CACpB,MAAM,IAAI,MAAM,0CAA0C;;;;;OC1C9D,eAAiB,SAASyN,EAAK,CAC7B,OAAI,OAAOA,GAAQ,UAAYA,EAAI,OAAO,CAAC,IAAM,SACxCA,EAAI,MAAM,CAAC,EAEbA,CACT,eCZA,MAAM+C,EAAWtQ,eACXS,EAASE,OAEf4P,EAAA,OAAiB,SAASnQ,EAAKI,EAAKd,EAAK,CACvC,QAAQ,eAAeU,EAAKI,EAAK,CAC/B,WAAY,GACZ,aAAc,GACd,SAAU,GACV,MAAOd,CACX,CAAG,CACF,EAMD6Q,EAAmB,SAAA,SAAS7Q,EAAK,CAC/B,OAAOe,EAAOf,CAAG,IAAM,QACxB,EAMD6Q,EAAmB,SAAA,SAAS7Q,EAAK,CAC/B,OAAOe,EAAOf,CAAG,IAAM,QACxB,EAMD6Q,EAAmB,SAAA,SAAS3P,EAAO,CACjC,OAAO,OAAOA,GAAU,SAAW,OAAO,KAAKA,CAAK,EAAIA,CACzD,EAMD2P,EAAmB,SAAA,SAAS3P,EAAO,CACjC,GAAI2P,EAAQ,SAAS3P,CAAK,EAAG,OAAO0P,EAAS,OAAO1P,CAAK,CAAC,EAC1D,GAAI,OAAOA,GAAU,SACnB,MAAM,IAAI,UAAU,yCAAyC,EAE/D,OAAO0P,EAAS1P,CAAK,CACtB,EAMD2P,EAAmB,SAAA,SAAS7Q,EAAK,CAC/B,OAAOA,EAAO,MAAM,QAAQA,CAAG,EAAIA,EAAM,CAACA,CAAG,EAAK,CAAE,CACrD,EAMD6Q,EAAA,WAAqB,SAAShD,EAAKiD,EAAQtQ,EAAK,CAC9C,OAAI,OAAOA,GAAQ,WAAUA,EAAMsQ,EAAO,QACnCjD,EAAI,MAAM,EAAGrN,CAAG,IAAMsQ,cC9D/B,MAAMC,UAAUzQ,eACV0Q,QAAQ/P,YAEdI,WAAiB,SAASF,EAAS,CACjC,MAAMG,EAAO,OAAO,OAAO,CAAA,EAAIH,CAAO,EAGtC,OAAAG,EAAK,WAAa0P,QAAM,SAAS1P,EAAK,QAAUA,EAAK,YAAc,KAAK,EACpEA,EAAK,WAAW,SAAW,GAC7BA,EAAK,WAAW,KAAKA,EAAK,WAAW,CAAC,CAAC,EAGzCA,EAAK,UAAYA,EAAK,UAAYA,EAAK,MAAQ,QAAQ,YAAa,EACpEA,EAAK,QAAU,OAAO,OAAO,CAAA,EAAIyP,UAASzP,EAAK,QAASA,EAAK,OAAO,EAC7DA,CACT,ECfA,OAAiB,SAASnB,EAAMgB,EAAS,CACvC,IAAI8P,EAAS9P,EAAQ,QAAQhB,CAAI,GAAKgB,EAAQ,QAAQ,OAAOhB,CAAI,CAAC,EAClE,GAAI,OAAO8Q,EAAW,IACpB,MAAM,IAAI,MAAM,uBAAyB9Q,EAAO,qBAAqB,EAEvE,OAAI,OAAO8Q,GAAW,aACpBA,EAAS,CAAE,MAAOA,CAAQ,GAErBA,CACT,EAEA,SAAS,OAAO9Q,EAAM,CACpB,OAAQA,EAAK,YAAa,EAAA,CACxB,IAAK,KACL,IAAK,aACH,MAAO,aACT,IAAK,SACL,IAAK,eACL,IAAK,OACH,MAAO,SACT,IAAK,OACL,IAAK,MACH,MAAO,OACT,QACE,OAAOA,CAEb,CACA,CC3BA,MAAMY,SAAST,OACT4Q,YAAYjQ,OACZI,WAAW+C,WAEjB,IAAA+M,YAAiB,SAAS/P,EAAM+C,EAAMhD,EAAS,CAC7C,GAAIgD,GAAQ,MAAQhD,GAAW,KAC7B,OAAQJ,SAAOK,CAAI,EAAC,CAClB,IAAK,SACH+C,EAAO/C,EAAK,KACZD,EAAU,CAAE,EACZ,MACF,IAAK,SACH,OAAOC,EACT,QACE,MAAM,IAAI,UAAU,wCAAwC,CAEpE,CAGE,MAAMyM,EAAMzM,EAAK,QACXE,EAAOD,WAASF,CAAO,EAC7B,GAAIgD,GAAQ,KAAM,CAChB,GAAI,CAAC7C,EAAK,KAAM,OAAOF,EACvB+C,EAAO7C,EAAK,IAChB,CAEE,MAAM8P,EAAWhQ,EAAK,UAAYE,EAAK,SACjC2P,EAASC,YAAUE,EAAU9P,CAAI,EACvC,GAAI,OAAO2P,EAAO,WAAc,WAC9B,MAAM,IAAI,UAAU,aAAeG,EAAW,8BAA8B,EAG9EjN,EAAO,OAAO,OAAO,CAAE,EAAE/C,EAAK,KAAM+C,CAAI,EACxC,MAAMkN,EAAO/P,EAAK,WAAW,CAAC,EACxBgQ,EAAQhQ,EAAK,WAAW,CAAC,EACzBiQ,EAASN,EAAO,UAAU9M,EAAMhD,CAAO,EAAE,KAAM,EACrD,IAAIqQ,EAAM,GAEV,OAAID,IAAW,OACbC,EAAMC,UAAQJ,CAAI,EAAII,UAAQF,CAAM,EAAIE,UAAQH,CAAK,GAGnD,OAAOlQ,EAAK,SAAY,UAAYA,EAAK,UAAY,IACnDyM,EAAI,QAAQzM,EAAK,QAAQ,KAAI,CAAE,IAAM,KACvCoQ,GAAOC,UAAQrQ,EAAK,OAAO,EAAIqQ,UAAQH,CAAK,GAIzCE,EAAMC,UAAQ5D,CAAG,CAC1B,EAEA,SAAS4D,UAAQ5D,EAAK,CACpB,OAAOA,EAAI,MAAM,EAAE,IAAM;AAAA,EAAOA,EAAM;AAAA,EAAOA,CAC/C,CCrDA,MAAMxM,WAAWf,WAEjB,IAAAoR,UAAiB,SAAStQ,EAAMD,EAAS,CACvC,MAAMG,EAAOD,WAASF,CAAO,EAM7B,GAJIC,EAAK,MAAQ,OACfA,EAAK,KAAO,CAAE,GAGZ,OAAOE,EAAK,SAAY,WAC1B,OAAOA,EAAK,QAAQF,EAAME,CAAI,EAGhC,MAAMqQ,EAAMvQ,EAAK,KAAK,mBAAqBE,EAAK,kBAChD,GAAIqQ,GAAO,OAASrQ,EAAK,UAAY,IAASA,EAAK,SAAW,MAC5D,OAAOF,EAGT,MAAMwQ,EAAY,OAAOtQ,EAAK,SAAY,SACtCA,EAAK,QACJqQ,GAAOrQ,EAAK,WAAW,CAAC,EAGvBwF,EAAM1F,EAAK,QAAQ,QAAQwQ,CAAS,EAC1C,OAAI9K,IAAQ,KACV1F,EAAK,QAAUA,EAAK,QAAQ,MAAM,EAAG0F,CAAG,GAGnC1F,CACT,EC7BA,MAAM,OAASd,OACT6Q,YAAYlQ,YACZ+P,QAAQ5M,YAOdyN,SAAiB,SAASzQ,EAAM,CAC9B,OAAI,OAAOA,CAAI,IAAM,WACnBA,EAAO,CAAE,QAASA,CAAM,GAGtB,OAAOA,EAAK,IAAI,IAAM,WACxBA,EAAK,KAAO,CAAE,GAKZA,EAAK,UAAYA,EAAK,SAAW,OACnCA,EAAK,QAAUA,EAAK,UAItB4P,QAAM,OAAO5P,EAAM,OAAQ4P,QAAM,SAAS5P,EAAK,OAAO,CAAC,EACvD4P,QAAM,OAAO5P,EAAM,WAAYA,EAAK,UAAY,EAAE,EAClD4P,QAAM,OAAO5P,EAAM,SAAUA,EAAK,QAAU,EAAE,EAC9C4P,QAAM,OAAO5P,EAAM,YAAa,SAAS+C,EAAMhD,EAAS,CACtD,OAAIA,GAAWA,EAAQ,WACrBC,EAAK,SAAWD,EAAQ,UAEnBgQ,YAAU/P,EAAM+C,EAAMhD,CAAO,CACxC,CAAG,EAGDC,EAAK,QAAU4P,QAAM,SAAS5P,EAAK,OAAO,EAC1CA,EAAK,QAAU,GACfA,EAAK,QAAU,GACRA,CACT,ECxCA,MAAM,UAAYd,OACZe,WAAWJ,WAEjB,IAAA6Q,QAAiB,SAASV,EAAUvD,EAAK1M,EAAS,CAChD,MAAMG,EAAOD,WAASF,CAAO,EACvB8P,EAAS,UAAUG,EAAU9P,CAAI,EACvC,GAAI,OAAO2P,EAAO,OAAU,WAC1B,MAAM,IAAI,UAAU,aAAeG,EAAW,0BAA0B,EAE1E,OAAOH,EAAO,MAAMpD,EAAKvM,CAAI,CAC/B,ECVA,MAAM,GAAK,WACL,SAAWL,cACX,SAAWmD,WACX,UAAYY,YACZ,QAAUa,UACV,QAAUC,eACV,OAAS2B,SACT,MAAQC,QACRsJ,QAAQN,QAkBd,SAAS,OAAOxP,EAAOC,EAAS,CAC9B,GAAID,IAAU,GACZ,MAAO,CAAE,KAAM,CAAA,EAAI,QAASA,EAAO,QAAS,GAAI,KAAMA,CAAO,EAG/D,IAAIE,EAAO,OAAOF,CAAK,EACvB,MAAM6Q,EAAS,OAAO,MAAM3Q,EAAK,OAAO,EAExC,GAAI,CAACD,EAAS,CACZ,GAAI4Q,EACF,OAAA3Q,EAAO,OAAO,OAAO,CAAA,EAAI2Q,CAAM,EAC/B3Q,EAAK,KAAO2Q,EAAO,KACZ3Q,EAMT,OAAO,MAAMA,EAAK,OAAO,EAAIA,CACjC,CAEE,OAAO,YAAYA,EAAMD,CAAO,CAClC,CAMA,SAAS,YAAYC,EAAMD,EAAS,CAClC,MAAMG,EAAO,SAASH,CAAO,EACvBkQ,EAAO/P,EAAK,WAAW,CAAC,EACxBgQ,EAAQ;AAAA,EAAOhQ,EAAK,WAAW,CAAC,EACtC,IAAIuM,EAAMzM,EAAK,QAEXE,EAAK,WACPF,EAAK,SAAWE,EAAK,UAIvB,MAAM0Q,EAAUX,EAAK,OACrB,GAAI,CAACL,QAAM,WAAWnD,EAAKwD,EAAMW,CAAO,EACtC,eAAQ5Q,EAAME,CAAI,EACXF,EAMT,GAAIyM,EAAI,OAAOmE,CAAO,IAAMX,EAAK,MAAM,EAAE,EACvC,OAAOjQ,EAITyM,EAAMA,EAAI,MAAMmE,CAAO,EACvB,MAAMxR,EAAMqN,EAAI,OAGVuD,EAAW,OAAO,SAASvD,EAAKvM,CAAI,EACtC8P,EAAS,OACXhQ,EAAK,SAAWgQ,EAAS,KACzBvD,EAAMA,EAAI,MAAMuD,EAAS,IAAI,MAAM,GAIrC,IAAIa,EAAapE,EAAI,QAAQyD,CAAK,EAClC,OAAIW,IAAe,KACjBA,EAAazR,GAIfY,EAAK,OAASyM,EAAI,MAAM,EAAGoE,CAAU,EAEvB7Q,EAAK,OAAO,QAAQ,gBAAiB,EAAE,EAAE,KAAM,IAC/C,IACZA,EAAK,QAAU,GACfA,EAAK,MAAQA,EAAK,QAClBA,EAAK,KAAO,CAAE,GAIdA,EAAK,KAAO,MAAMA,EAAK,SAAUA,EAAK,OAAQE,CAAI,EAIhD2Q,IAAezR,EACjBY,EAAK,QAAU,IAEfA,EAAK,QAAUyM,EAAI,MAAMoE,EAAaX,EAAM,MAAM,EAC9ClQ,EAAK,QAAQ,CAAC,IAAM,OACtBA,EAAK,QAAUA,EAAK,QAAQ,MAAM,CAAC,GAEjCA,EAAK,QAAQ,CAAC,IAAM;AAAA,IACtBA,EAAK,QAAUA,EAAK,QAAQ,MAAM,CAAC,IAIvC,QAAQA,EAAME,CAAI,GAEdA,EAAK,WAAa,IAAQ,OAAOA,EAAK,SAAY,aACpD,SAASF,EAAME,EAAK,OAAO,EAEtBF,CACT,CAMA,OAAO,QAAU,QAuBjB,OAAO,UAAY,SAASA,EAAM+C,EAAMhD,EAAS,CAC/C,OAAI,OAAOC,GAAS,WAAUA,EAAO,OAAOA,EAAMD,CAAO,GAClD,UAAUC,EAAM+C,EAAMhD,CAAO,CACtC,EAeA,OAAO,KAAO,SAAS+Q,EAAU/Q,EAAS,CACxC,MAAM0M,EAAM,GAAG,aAAaqE,EAAU,MAAM,EACtC9Q,EAAO,OAAOyM,EAAK1M,CAAO,EAChC,OAAAC,EAAK,KAAO8Q,EACL9Q,CACT,EAUA,OAAO,KAAO,SAASyM,EAAK1M,EAAS,CACnC,OAAO6P,QAAM,WAAWnD,EAAK,SAAS1M,CAAO,EAAE,WAAW,CAAC,CAAC,CAC9D,EAUA,OAAO,SAAW,SAAS0M,EAAK1M,EAAS,CAEvC,MAAMkQ,EADO,SAASlQ,CAAO,EACX,WAAW,CAAC,EAE1B,OAAO,KAAK0M,CAAG,IACjBA,EAAMA,EAAI,MAAMwD,EAAK,MAAM,GAG7B,MAAMD,EAAWvD,EAAI,MAAM,EAAGA,EAAI,OAAO,OAAO,CAAC,EACjD,MAAO,CACL,IAAKuD,EACL,KAAMA,EAAWA,EAAS,OAAS,EACpC,CACH,EAMA,OAAO,MAAQ,CAAE,EACjB,OAAO,WAAa,UAAW,CAC7B,OAAO,MAAQ,CAAE,CACnB,EACA,IAAA,WAAiB,0DC9NV,SAAS,UAAUe,EAAqB,CAC7C,KAAM,CAAE,KAAAhO,EAAM,QAAAxC,GAAY4P,SAAOY,CAAE,EAE7B3M,EAAO,CACX,KAAMrB,EAAK,KACX,MAAOA,EAAK,MACZ,MAAOA,EAAK,MACZ,QAASA,EAAK,QACd,QAASA,EAAK,OAChB,EAEI,OAAAA,EAAK,OAAS,UACT,CAAE,GAAGqB,EAAM,KAAM,UAAW,MAAOrB,EAAK,OAAS,EAAG,EAEzDA,EAAK,OAAS,aACT,CAAE,GAAGqB,EAAM,KAAM,aAAc,QAAA7D,CAAQ,EAEzC,CAAE,GAAG6D,EAAM,KAAM,aAAc,QAAA7D,CAAQ,CAChD,CAGO,SAAS,cAAcyQ,EAAuB,CACnD,KAAM,CAAE,KAAAnS,EAAM,MAAAoS,EAAO,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYJ,EAE3CK,EAAiC,CAAE,KAAAxS,EAAM,MAAAoS,EAAO,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAQ,EAE1EvS,IAAS,YAAiBwS,EAAA,MAAQL,EAAK,OAE3C,MAAMpK,EACJ/H,IAAS,UACL;AAAA,EACAmS,EAAK,QAEJ,OAAAb,SAAO,UAAUvJ,EAAMyK,CAAK,CACrC,CChCiB,IAAA,WAAAC,GAAV,CACL,IAAIC,EAAyC,KAChCD,EAAA,KAAQE,GAAkCD,EAAOC,EAGxC,eAAAC,EAAUC,EAAcC,EAAc,CACtD,GAAA,CAACJ,EAAM,MAAO,CAAC,EACf,GAAA,CACI,MAAAK,EAAU,MAAO,MAAML,EAAK,mBAAmBG,CAAI,GACtD,mBAAmBC,CAAI,EACpBE,EAAsE,CAAC,EAC7E,eAAiB,CAAC9S,EAAMyS,CAAC,IAAKI,EAAQ,UAChCJ,EAAE,OAAS,QAAYK,EAAA,KAAK,CAAE,KAAM,OAAQ,KAAA9S,EAAM,OAAQyS,CAAA,CAA2B,EAEpF,OAAAK,CAAA,MACD,CAAE,MAAO,CAAC,CAAA,CAAG,CAVvBP,EAAsB,UAAAG,EAcTH,EAAA,SAAW,MAAOE,IAC5B,MAAMA,EAAE,WAAW,KAAK,EAEdF,EAAA,UAAY,MAAOE,EAAyBM,IAAe,CAChE,MAAAC,EAAI,MAAMP,EAAE,eAAe,EACjC,MAAMO,EAAE,MAAM,cAAcD,CAAC,CAAC,EAC9B,MAAMC,EAAE,MAAM,CAChB,EAEaT,EAAA,WAAa,MAAOE,GAA4B,CAIrD,MAFiC,MAAMA,EAAE,UAAU,GAE/C,YAAYA,EAAE,IAAI,CAC9B,EAEsB,eAAAQ,EAAWN,EAAcC,EAAc3R,EAAc,CACrE,GAAA,CAACuR,EAAa,MAAA,GACd,GAAA,CACK,aAAA,MAAO,MAAMA,EAAK,mBAAmBG,CAAI,GAC7C,mBAAmBC,CAAI,GACvB,cAAc3R,CAAI,EACd,EAAA,MACD,CAAS,MAAA,EAAA,CAAO,CAP1BsR,EAAsB,WAAAU,CAAA,GAnCP,YAAA,UAAA,CAAA,EAAA,ECPjB,MAAM,cAAgB,CAAClO,EAAQmO,IAAiBA,EAAa,KAAMlO,GAAMD,aAAkBC,CAAC,EAE5F,IAAI,kBACA,qBAEJ,SAAS,sBAAuB,CAC5B,OAAQ,oBACH,kBAAoB,CACjB,YACA,eACA,SACA,UACA,cACZ,EACA,CAEA,SAAS,yBAA0B,CAC/B,OAAQ,uBACH,qBAAuB,CACpB,UAAU,UAAU,QACpB,UAAU,UAAU,SACpB,UAAU,UAAU,kBAChC,EACA,CACA,MAAM,mBAAqB,IAAI,QACzB,eAAiB,IAAI,QACrB,sBAAwB,IAAI,QAClC,SAAS,iBAAiBmO,EAAS,CAC/B,MAAMC,EAAU,IAAI,QAAQ,CAACC,EAASC,IAAW,CAC7C,MAAMC,EAAW,IAAM,CACnBJ,EAAQ,oBAAoB,UAAWK,CAAO,EAC9CL,EAAQ,oBAAoB,QAASM,CAAK,CAC7C,EACKD,EAAU,IAAM,CAClBH,EAAQ,KAAKF,EAAQ,MAAM,CAAC,EAC5BI,EAAU,CACb,EACKE,EAAQ,IAAM,CAChBH,EAAOH,EAAQ,KAAK,EACpBI,EAAU,CACb,EACDJ,EAAQ,iBAAiB,UAAWK,CAAO,EAC3CL,EAAQ,iBAAiB,QAASM,CAAK,CAC/C,CAAK,EAGD,6BAAsB,IAAIL,EAASD,CAAO,EACnCC,CACX,CACA,SAAS,+BAA+BM,EAAI,CAExC,GAAI,mBAAmB,IAAIA,CAAE,EACzB,OACJ,MAAMC,EAAO,IAAI,QAAQ,CAACN,EAASC,IAAW,CAC1C,MAAMC,EAAW,IAAM,CACnBG,EAAG,oBAAoB,WAAYE,CAAQ,EAC3CF,EAAG,oBAAoB,QAASD,CAAK,EACrCC,EAAG,oBAAoB,QAASD,CAAK,CACxC,EACKG,EAAW,IAAM,CACnBP,EAAS,EACTE,EAAU,CACb,EACKE,EAAQ,IAAM,CAChBH,EAAOI,EAAG,OAAS,IAAI,aAAa,aAAc,YAAY,CAAC,EAC/DH,EAAU,CACb,EACDG,EAAG,iBAAiB,WAAYE,CAAQ,EACxCF,EAAG,iBAAiB,QAASD,CAAK,EAClCC,EAAG,iBAAiB,QAASD,CAAK,CAC1C,CAAK,EAED,mBAAmB,IAAIC,EAAIC,CAAI,CACnC,CACA,IAAI,cAAgB,CAChB,IAAI3R,EAAQ6R,EAAMC,EAAU,CACxB,GAAI9R,aAAkB,eAAgB,CAElC,GAAI6R,IAAS,OACT,OAAO,mBAAmB,IAAI7R,CAAM,EAExC,GAAI6R,IAAS,QACT,OAAOC,EAAS,iBAAiB,CAAC,EAC5B,OACAA,EAAS,YAAYA,EAAS,iBAAiB,CAAC,CAAC,CAEvE,CAEQ,OAAO,KAAK9R,EAAO6R,CAAI,CAAC,CAC3B,EACD,IAAI7R,EAAQ6R,EAAM1O,EAAO,CACrB,OAAAnD,EAAO6R,CAAI,EAAI1O,EACR,EACV,EACD,IAAInD,EAAQ6R,EAAM,CACd,OAAI7R,aAAkB,iBACjB6R,IAAS,QAAUA,IAAS,SACtB,GAEJA,KAAQ7R,CAClB,CACL,EACA,SAAS,aAAa+R,EAAU,CAC5B,cAAgBA,EAAS,aAAa,CAC1C,CACA,SAAS,aAAaC,EAAM,CAQxB,OAAI,wBAAyB,EAAC,SAASA,CAAI,EAChC,YAAazL,EAAM,CAGtB,OAAAyL,EAAK,MAAM,OAAO,IAAI,EAAGzL,CAAI,EACtB,KAAK,KAAK,OAAO,CAC3B,EAEE,YAAaA,EAAM,CAGtB,OAAO,KAAKyL,EAAK,MAAM,OAAO,IAAI,EAAGzL,CAAI,CAAC,CAC7C,CACL,CACA,SAAS,uBAAuBpD,EAAO,CACnC,OAAI,OAAOA,GAAU,WACV,aAAaA,CAAK,GAGzBA,aAAiB,gBACjB,+BAA+BA,CAAK,EACpC,cAAcA,EAAO,sBAAsB,EACpC,IAAI,MAAMA,EAAO,aAAa,EAElCA,EACX,CACA,SAAS,KAAKA,EAAO,CAGjB,GAAIA,aAAiB,WACjB,OAAO,iBAAiBA,CAAK,EAGjC,GAAI,eAAe,IAAIA,CAAK,EACxB,OAAO,eAAe,IAAIA,CAAK,EACnC,MAAM8O,EAAW,uBAAuB9O,CAAK,EAG7C,OAAI8O,IAAa9O,IACb,eAAe,IAAIA,EAAO8O,CAAQ,EAClC,sBAAsB,IAAIA,EAAU9O,CAAK,GAEtC8O,CACX,CACA,MAAM,OAAU9O,GAAU,sBAAsB,IAAIA,CAAK,EASzD,SAAS,OAAOnF,EAAMkU,EAAS,CAAE,QAAAC,EAAS,QAAAC,EAAS,SAAAC,EAAU,WAAAC,CAAY,EAAG,GAAI,CAC5E,MAAMnB,EAAU,UAAU,KAAKnT,EAAMkU,CAAO,EACtCK,EAAc,KAAKpB,CAAO,EAChC,OAAIiB,GACAjB,EAAQ,iBAAiB,gBAAkBqB,GAAU,CACjDJ,EAAQ,KAAKjB,EAAQ,MAAM,EAAGqB,EAAM,WAAYA,EAAM,WAAY,KAAKrB,EAAQ,WAAW,EAAGqB,CAAK,CAC9G,CAAS,EAEDL,GACAhB,EAAQ,iBAAiB,UAAYqB,GAAUL,EAE/CK,EAAM,WAAYA,EAAM,WAAYA,CAAK,CAAC,EAE9CD,EACK,KAAME,GAAO,CACVH,GACAG,EAAG,iBAAiB,QAAS,IAAMH,EAAU,CAAE,EAC/CD,GACAI,EAAG,iBAAiB,gBAAkBD,GAAUH,EAASG,EAAM,WAAYA,EAAM,WAAYA,CAAK,CAAC,CAE1G,CAAA,EACI,MAAM,IAAM,CAAA,CAAG,EACbD,CACX,CAgBA,MAAM,YAAc,CAAC,MAAO,SAAU,SAAU,aAAc,OAAO,EAC/D,aAAe,CAAC,MAAO,MAAO,SAAU,OAAO,EAC/C,cAAgB,IAAI,IAC1B,SAAS,UAAUvS,EAAQ6R,EAAM,CAC7B,GAAI,EAAE7R,aAAkB,aACpB,EAAE6R,KAAQ7R,IACV,OAAO6R,GAAS,UAChB,OAEJ,GAAI,cAAc,IAAIA,CAAI,EACtB,OAAO,cAAc,IAAIA,CAAI,EACjC,MAAMa,EAAiBb,EAAK,QAAQ,aAAc,EAAE,EAC9Cc,EAAWd,IAASa,EACpBE,EAAU,aAAa,SAASF,CAAc,EACpD,GAEA,EAAEA,KAAmBC,EAAW,SAAW,gBAAgB,YACvD,EAAEC,GAAW,YAAY,SAASF,CAAc,GAChD,OAEJ,MAAMG,EAAS,eAAgBC,KAAcvM,EAAM,CAE/C,MAAMmL,EAAK,KAAK,YAAYoB,EAAWF,EAAU,YAAc,UAAU,EACzE,IAAI5S,EAAS0R,EAAG,MAChB,OAAIiB,IACA3S,EAASA,EAAO,MAAMuG,EAAK,MAAK,CAAE,IAM9B,MAAM,QAAQ,IAAI,CACtBvG,EAAO0S,CAAc,EAAE,GAAGnM,CAAI,EAC9BqM,GAAWlB,EAAG,IACjB,CAAA,GAAG,CAAC,CACR,EACD,qBAAc,IAAIG,EAAMgB,CAAM,EACvBA,CACX,CACA,aAAcE,IAAc,CACxB,GAAGA,EACH,IAAK,CAAC/S,EAAQ6R,EAAMC,IAAa,UAAU9R,EAAQ6R,CAAI,GAAKkB,EAAS,IAAI/S,EAAQ6R,EAAMC,CAAQ,EAC/F,IAAK,CAAC9R,EAAQ6R,IAAS,CAAC,CAAC,UAAU7R,EAAQ6R,CAAI,GAAKkB,EAAS,IAAI/S,EAAQ6R,CAAI,CACjF,EAAE,EAEF,MAAM,mBAAqB,CAAC,WAAY,qBAAsB,SAAS,EACjE,UAAY,CAAE,EACd,eAAiB,IAAI,QACrB,iCAAmC,IAAI,QACvC,oBAAsB,CACxB,IAAI7R,EAAQ6R,EAAM,CACd,GAAI,CAAC,mBAAmB,SAASA,CAAI,EACjC,OAAO7R,EAAO6R,CAAI,EACtB,IAAImB,EAAa,UAAUnB,CAAI,EAC/B,OAAKmB,IACDA,EAAa,UAAUnB,CAAI,EAAI,YAAatL,EAAM,CAC9C,eAAe,IAAI,KAAM,iCAAiC,IAAI,IAAI,EAAEsL,CAAI,EAAE,GAAGtL,CAAI,CAAC,CACrF,GAEEyM,CACV,CACL,EACA,eAAgB,WAAWzM,EAAM,CAE7B,IAAI0M,EAAS,KAIb,GAHMA,aAAkB,YACpBA,EAAS,MAAMA,EAAO,WAAW,GAAG1M,CAAI,GAExC,CAAC0M,EACD,OACJA,EAASA,EACT,MAAMC,EAAgB,IAAI,MAAMD,EAAQ,mBAAmB,EAI3D,IAHA,iCAAiC,IAAIC,EAAeD,CAAM,EAE1D,sBAAsB,IAAIC,EAAe,OAAOD,CAAM,CAAC,EAChDA,GACH,MAAMC,EAEND,EAAS,MAAO,eAAe,IAAIC,CAAa,GAAKD,EAAO,YAC5D,eAAe,OAAOC,CAAa,CAE3C,CACA,SAAS,eAAelT,EAAQ6R,EAAM,CAClC,OAASA,IAAS,OAAO,eACrB,cAAc7R,EAAQ,CAAC,SAAU,eAAgB,SAAS,CAAC,GAC1D6R,IAAS,WAAa,cAAc7R,EAAQ,CAAC,SAAU,cAAc,CAAC,CAC/E,CACA,aAAc+S,IAAc,CACxB,GAAGA,EACH,IAAI/S,EAAQ6R,EAAMC,EAAU,CACxB,OAAI,eAAe9R,EAAQ6R,CAAI,EACpB,QACJkB,EAAS,IAAI/S,EAAQ6R,EAAMC,CAAQ,CAC7C,EACD,IAAI9R,EAAQ6R,EAAM,CACd,OAAO,eAAe7R,EAAQ6R,CAAI,GAAKkB,EAAS,IAAI/S,EAAQ6R,CAAI,CACnE,CACL,EAAE,EC5RK,MAAM,UAA4C,OACvD,iBACA,EACA,CACE,QAAQY,EAAI,CACVA,EAAG,kBAAkB,OAAO,EAC5BA,EAAG,kBAAkB,UAAU,CAAA,CACjC,CAEJ,EAGa,SAAW,CAAC9T,EAAaqR,IACpC,UAAU,KAAWyC,GAAAA,EAAG,IAAI,QAASzC,EAAIrR,CAAG,CAAC,EAElC,SAAYA,GACvB,UAAU,QAAW8T,EAAG,IAAI,QAAS9T,CAAG,CAAC,EAE9BwU,aAAcxU,GACzB,UAAU,QAAW8T,EAAG,OAAO,QAAS9T,CAAG,CAAC,EAEjC,WAAcA,GACzB,UAAU,KAAW8T,GAAAA,EAAG,MAAM,QAAS9T,CAAG,EAAE,KAAUqE,GAAAA,EAAI,CAAC,CAAC,EAGjD,YAAc,CAACrE,EAAawE,IACvC,UAAU,KAAWsP,GAAAA,EAAG,IAAI,WAAYtP,EAAOxE,CAAG,CAAC,EAExC,YAA4BA,GACvC,UAAU,QAAW8T,EAAG,IAAI,WAAY9T,CAAG,CAAe,EC5B5D,IAAI,QAA0B,MAKvB,SAAS,OAAO+H,EAAmC,CACxD,UAAU,KAAKA,CAAM,EACX,QAAA,KACT,OAAe,YAAcA,CAChC,CAGsB,eAAA,UAAUiK,EAAcC,EAAc,CAC1D,GAAI,UAAY,KAAM,OAAO,UAAU,UAAUD,EAAMC,CAAI,EAG3D,MAAMwC,EAAW,MADD,MAAM,WACI,WAAW,OAAO,EACtCzM,EAAU,GAAGgK,CAAI,IAAIC,CAAI,IAE/B,OAAOwC,EACJ,OAAQC,GAAcA,EAAE,WAAW1M,CAAM,CAAC,EAC1C,IAAK0M,IAAe,CAAE,KAAM,OAAiB,KAAMA,GAAI,CAC5D,CAGa,MAAA,SAAW,MAAO5C,GAC7B,UAAY,KACR,UAAU,SAASA,CAAyB,EAC5C6C,SAAS7C,EAAuB,IAAI,EAE7B,WAAa,MAAOA,GAC/B,UAAY,KACR,UAAU,WAAWA,CAAyB,EAC9C8C,aAAW9C,EAAuB,IAAI,EAE/B,UAAY,MACvBA,EACAR,IAEA,UAAY,KACR,UAAU,UAAUQ,EAA2BR,CAAI,EACnDuD,SAAU/C,EAAuB,KAAM,cAAcR,CAAI,CAAC,EAG1C,eAAA,WACpBU,EACAC,EACAX,EACA,CACA,MAAMwD,EAAW,MAAM,SAAS9C,EAAMC,EAAMX,CAAI,EAEhD,GAAI,UAAY,KAAM,CAId,MAAAvJ,EAAU,MADA,MADA,MADC,OAAe,YACL,mBAAmBiK,EAAM,CAAE,OAAQ,GAAM,GACtC,mBAAmBC,EAAM,CAAE,OAAQ,GAAM,GACzC,cAAc6C,EAAU,CAAE,OAAQ,GAAM,EAChE,aAAA,UAAU,UAAU/M,EAAQuJ,CAAI,EAC/BvJ,CAAA,CAGT,MAAM/H,EAAM,GAAGgS,CAAI,IAAIC,CAAI,IAAI6C,CAAQ,GACvC,aAAMD,SAAS7U,EAAK,cAAcsR,CAAI,CAAC,EAChC,CAAE,KAAMtR,CAAI,CACrB,CAGA,eAAe,SAASgS,EAAcC,EAAcX,EAAe,CAC3D,MAAA5M,EAAS,GAAG4M,EAAK,IAAI,IAAIA,EAAK,MAAM,QAAQ,OAAQ,EAAE,CAAC,GACvD,IAAAhR,EAAS,GAAGoE,CAAI,MAChBnD,EAAS,EAEf,MAAMwT,EAAS,MAAOC,GACpB,UAAY,KACR,UAAU,WAAWhD,EAAMC,EAAM+C,CAAC,EAClCC,WAAU,GAAGjD,CAAI,IAAIC,CAAI,IAAI+C,CAAC,EAAE,EAE/B,KAAA,MAAMD,EAAOzU,CAAI,KAAU,GAAGoE,CAAI,IAAInD,GAAO,MAC7C,OAAAjB,CACT,CCxFO,SAAS,aAAc,CAE5B,GAAG,kBAAkB,EAAE,iBAAiB,QAAS,IAC/C,SAAS,gBAAgB,UAAU,OAAO,MAAM,CAClD,EAGA,GAAG,oBAAoB,EAAE,iBAAiB,QAAS,IACjD,GAAG,SAAS,EAAE,UAAU,OAAO,QAAQ,CACzC,CACF,CAIO,SAAS,eAAgB,CACxB,MAAA4U,EAAK,GAAG,eAAe,EACvBC,EAAK,GAAG,eAAe,EACvBC,EAAO,GAAG,SAAS,EACnBC,EAAO,GAAG,SAAS,EACnBC,EAAO,GAAG,aAAa,EAC7B,IAAIC,EAAmC,KAEjC,MAAAC,EAAUC,GAAkB,CAIhC,GAHIF,IAAS,YACXF,EAAG,MAAM,MAAQ,KAAK,IAAI,KAAK,IAAII,EAAE,QAAS,GAAG,EAAGL,EAAK,YAAc,GAAG,EAAI,MAE5EG,IAAS,QAAS,CACd,MAAAG,EAAON,EAAK,sBAAsB,EACxCE,EAAG,MAAM,MAAQ,KAAK,IAAI,KAAK,IAAII,EAAK,MAAQD,EAAE,QAAS,GAAG,EAAGC,EAAK,MAAQ,GAAG,EAAI,IAAA,CAEzF,EACMC,EAAO,IAAM,CACVJ,EAAA,KACE,SAAA,KAAK,MAAM,OAAS,GACpB,SAAA,oBAAoB,YAAaC,CAAM,EACvC,SAAA,oBAAoB,UAAWG,CAAI,CAC9C,EACMC,EAAUC,GAA8B,CACrCN,EAAAM,EACE,SAAA,KAAK,MAAM,OAAS,aACpB,SAAA,iBAAiB,YAAaL,CAAM,EACpC,SAAA,iBAAiB,UAAWG,CAAI,CAC3C,EAEAT,EAAG,iBAAiB,YAAa,IAAMU,EAAO,SAAS,CAAC,EACxDT,EAAG,iBAAiB,YAAa,IAAMS,EAAO,OAAO,CAAC,CACxD,CAIO,SAAS,cAAe,CAC7B,GAAG,cAAc,EAAE,iBAAiB,QAAS,IAAM,CACjD,GAAG,cAAc,EAAE,UAAU,OAAO,kBAAkB,EACvC,eAAA,CAAA,CAChB,CACH,CAEA,eAAe,gBAAiB,CAC3B,GAAA,cAAc,EAAE,YAAc,WAC3B,MAAA1O,EAAO,GAAG,aAAa,EAC7BA,EAAK,UAAY,GAGZA,EAAA,YACHrI,SAAO,qBAAsB,kDAAmD,SAAY,CACtF,GAAA,CAEI,MAAAiX,EAAM,MAAM,OAAO,oBAAoB,EAC7C,MAAM,OAAOA,CAAG,EAChB,MAAM,0DAA0D,CAAA,MAC1D,CAAE,MAAM,0BAA0B,CAAA,CAC3C,CAAA,CACH,EAGA,MAAMC,EAAU,MAAMC,YAAsB,QAAQ,GAAM,GACpDC,EAAQ,SAAS,cAAc,OAAO,EAC5CA,EAAM,UAAY,aAClBA,EAAM,UAAY,2CACZ,MAAAC,EAAM,SAAS,cAAc,OAAO,EAC1CA,EAAI,UAAY,sDAChBA,EAAI,MAAQH,EACRG,EAAA,iBAAiB,SAAU,IAAMC,YAAc,SAAUD,EAAI,MAAM,KAAK,CAAC,CAAC,EAC9ED,EAAM,YAAYC,CAAG,EACrBhP,EAAK,YAAY+O,CAAK,CACxB,CCzFsB,eAAA,kBAAkBjE,EAAcC,EAAc,OAClE,MAAMjS,EAAO,MAAMgW,YAAsB,QAAQ,GAAM,GACvD,GAAI,CAAChW,EAAW,MAAA,IAAI,MAAM,oCAAoC,EAGxD,MAAAoW,EAAQ,0CADA,mBAAmB,GAAGpE,CAAI,IAAIC,CAAI,EAAE,CACW,GAEvDnN,EAAM,MAAM,MAAMsR,EAAK,CAAE,QAAS,CAAE,cAAe,SAASpW,CAAG,EAAG,CAAA,CAAG,EACvE,GAAA,CAAC8E,EAAI,GAAI,MAAM,IAAI,MAAM,iBAAiBA,EAAI,MAAM,EAAE,EAI1D,SADcuR,GADD,MAAMvR,EAAI,KAAK,GACT,WAAL,YAAAuR,EAAgB,KAAM,IAAI,QAAQ,MAAO,EAAE,EAC9C,MAAM;AAAA,CAAI,EAAE,IAAK,GAAc,EAAE,KAAK,CAAC,EAAE,OAAO,OAAO,CACpE,CCNA,MAAM,KAAM,CAAZ,aAAA,CACE,KAAQ,MAAe,CAAE,KAAM,GAAI,QAAS,GAAI,IAAK,SAAU,EACvD,KAAA,cAAgB,GAAwB,CAEhD,IAAI,UAAkB,CACb,MAAA,CAAE,GAAG,KAAK,KAAM,CAAA,CAGzB,IAA2BrW,EAAQwE,EAAiB,CAC9C,KAAK,MAAMxE,CAAG,IAAMwE,IACnB,KAAA,MAAMxE,CAAG,EAAIwE,EAClB,KAAK,UAAU,QAAS8R,GAAMA,EAAE,KAAK,QAAQ,CAAC,EAAA,CAGhD,UAAUC,EAAwB,CAC3B,YAAA,UAAU,IAAIA,CAAE,EACd,IAAM,KAAK,UAAU,OAAOA,CAAE,CAAA,CAEzC,CAEa,MAAA,MAAQ,IAAI,MC3BH,eAAA,qBAAqBvE,EAAcC,EAAc,CAC/D,MAAAuE,EAAS,SAAS,eAAe,cAAc,EACrDA,EAAO,UAAY,iCAEf,GAAA,CACF,MAAM9V,EAAQ,MAAM,kBAAkBsR,EAAMC,CAAI,EAChDuE,EAAO,UAAY,GAEnB,UAAWvV,KAAQP,EAAO,CAClB,MAAA+V,EAAIxV,EAAK,MAAM,gBAAgB,EACrC,GAAIwV,EAAG,CACL,KAAM,CAAG,CAAA7R,EAAG8R,CAAC,EAAID,EACXE,EAAI,SAAS,cAAc,GAAG,EACpCA,EAAE,UAAY,OACdA,EAAE,UAAY,8BAA8B/R,CAAC,UAAU8R,CAAC,GACxDF,EAAO,YAAYG,CAAC,CAAA,KACf,CACC,MAAA7E,EAAI,SAAS,cAAc,IAAI,EACrCA,EAAE,UAAY,qBACdA,EAAE,YAAc7Q,EAChBuV,EAAO,YAAY1E,CAAC,CAAA,CACtB,CAII,MAAA,IAAI,OAAQE,CAAI,EAChB,MAAA,IAAI,UAAWC,CAAI,QAElB3S,EAAK,CACZ,QAAQ,MAAMA,CAAG,EACjBkX,EAAO,YAAc,4BAAA,CAEzB,CC/BO,SAAS,cAAcI,EAAiB,CACvC,MAAAC,EAAY,GAAG,iBAAiB,EACtCA,EAAU,UAAY,GAChB,MAAAC,EAAK,SAAS,cAAc,IAAI,EACtCA,EAAG,UAAY,UAEfF,EAAM,QAAgB5E,GAAA,CACd,MAAA+E,EAAM,SAAS,cAAc,IAAI,EACjC9X,EAAM,SAAS,cAAc,QAAQ,EAC3CA,EAAI,YAAc+S,EAClB/S,EAAI,UAAY,sEAChBA,EAAI,iBAAiB,QAAS,IAAM,eAAe+S,EAAM+E,CAAE,CAAC,EAC5DA,EAAG,OAAO9X,CAAG,EACb6X,EAAG,OAAOC,CAAE,CAAA,CACb,EAEDF,EAAU,OAAOC,CAAE,CACrB,CAEgB,SAAA,eAAe9E,EAAc+E,EAAiB,OACxD,IAAAC,EAAMD,EAAG,cAAc,IAAI,EAC/B,GAAIC,EAAK,CAAMA,EAAA,UAAU,OAAO,QAAQ,EAAG,MAAA,CAErCA,EAAA,SAAS,cAAc,IAAI,EACjCA,EAAI,UAAY,iBAChB,MAAM7S,IAAOkS,EAAA,OAAe,WAAf,YAAAA,EAA0BrE,KAAS,EAEhD,QAASI,EAAI,EAAGA,GAAKjO,EAAKiO,IAAK,CACvB,MAAA6E,EAAO,SAAS,cAAc,IAAI,EAClCC,EAAO,SAAS,cAAc,QAAQ,EACvCA,EAAA,YAAc,OAAO9E,CAAC,EAC3B8E,EAAK,UAAY,4DACZA,EAAA,iBAAiB,QAAS,IAAM,CAC7B,MAAA,IAAI,OAAQlF,CAAI,EACtB,MAAM,IAAI,UAAW,OAAOI,CAAC,CAAC,EACT,qBAAAJ,EAAM,OAAOI,CAAC,CAAC,CAAA,CACrC,EACD6E,EAAI,OAAOC,CAAI,EACfF,EAAI,OAAOC,CAAG,CAAA,CAEhBF,EAAG,OAAOC,CAAG,CACf,CCtCsB,eAAA,iBAAiBhF,EAAcC,EAAc,CAC3D,MAAAkF,EAAQ,SAAS,eAAe,aAAa,EACnDA,EAAM,UAAY,iCAGlB,MAAMC,EAA4C,CAAC,EAEnD,UAAW9W,KAAQ,MAAM,UAAU0R,EAAMC,CAAI,EAAG,CACxC,MAAAoF,EAAQ,MAAM,SAAS/W,CAAI,EAC3BgR,EAAO,UAAU+F,CAAG,GAEtB/F,GAAA,YAAAA,EAAM,QAAS,WACjB8F,EAAM,KAAK,CAAE,KAAA9F,EAA2B,KAAAhR,CAAA,CAAM,CAChD,CAKE,GADJ6W,EAAM,UAAY,GACd,CAACC,EAAM,OAAQ,CACjBD,EAAM,YAAc,wBACpB,MAAA,CAIFC,EAAM,QAAQ,CAAC,CAAE,KAAA9F,EAAM,KAAAhR,KAAW,CAE1B,MAAAgX,EAAU,SAAS,cAAc,KAAK,EAC5CA,EAAQ,UAAY,OAGd,MAAAC,EAAS,SAAS,cAAc,IAAI,EAC1CA,EAAO,UACL,uDACFA,EAAO,UAAY;AAAA;AAAA,UAEbjG,EAAK,KAAK;AAAA,wCACoBA,EAAK,KAAK;AAAA;AAAA;AAAA,MAI9CiG,EACG,cAAc,QAAQ,EACtB,iBAAiB,QAAS,SAAY,CAChC,QAAQ,mBAAmBjG,EAAK,KAAK,IAAI,IAC9C,MAAM,WAAWhR,CAAI,EACrB,iBAAiB0R,EAAMC,CAAI,EAAA,CAC5B,EAEHqF,EAAQ,YAAYC,CAAM,EAG1BjG,EAAK,MAAM,QAAQ,WAAWgG,CAAO,CAAC,EAEtCH,EAAM,YAAYG,CAAO,CAAA,CAC1B,CACH,CAGA,SAAS,WAAWT,EAAwB,CAC1C,OAAQW,GAA4B,OAE5B,MAAAb,EAAI,SAAS,cAAc,GAAG,EAUhC,GATJA,EAAE,UAAY,mBACZA,EAAA,UACA,GAAGa,EAAK,IAAI,IACXA,EAAK,MACF,4CAA4CA,EAAK,KAAK,WACtD,IACNX,EAAU,YAAYF,CAAC,GAGnBN,EAAAmB,EAAK,YAAL,MAAAnB,EAAgB,OAAQ,CACpB,MAAAS,EAAK,SAAS,cAAc,IAAI,EACtCA,EAAG,UAAY,sBACVU,EAAA,UAAU,QAASC,GAAQ,CACxB,MAAAV,EAAK,SAAS,cAAc,IAAI,EACtCA,EAAG,UAAY,UACfA,EAAG,YAAcU,EACjBX,EAAG,YAAYC,CAAE,CAAA,CAClB,EACDF,EAAU,YAAYC,CAAE,CAAA,CAE5B,CACF,CC1FA,MAAM,YAAc,CAAA,EAEpB,SAAS,eAAgBtT,EAAS,CAChC,IAAIkU,EAAQ,YAAYlU,CAAO,EAC/B,GAAIkU,EAAS,OAAOA,EAEpBA,EAAQ,YAAYlU,CAAO,EAAI,CAAA,EAE/B,QAAS7D,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC5B,MAAM4E,EAAK,OAAO,aAAa5E,CAAC,EAChC+X,EAAM,KAAKnT,CAAE,CACjB,CAEE,QAAS5E,EAAI,EAAGA,EAAI6D,EAAQ,OAAQ7D,IAAK,CACvC,MAAM4E,EAAKf,EAAQ,WAAW7D,CAAC,EAC/B+X,EAAMnT,CAAE,EAAI,KAAO,IAAMA,EAAG,SAAS,EAAE,EAAE,YAAa,GAAE,MAAM,EAAE,CACpE,CAEE,OAAOmT,CACT,CAIA,SAASC,SAAQjW,EAAQ8B,EAAS,CAC5B,OAAOA,GAAY,WACrBA,EAAUmU,SAAO,cAGnB,MAAMD,EAAQ,eAAelU,CAAO,EAEpC,OAAO9B,EAAO,QAAQ,oBAAqB,SAAUkW,EAAK,CACxD,IAAIhW,EAAS,GAEb,QAASjC,EAAI,EAAG2W,EAAIsB,EAAI,OAAQjY,EAAI2W,EAAG3W,GAAK,EAAG,CAC7C,MAAMkY,EAAK,SAASD,EAAI,MAAMjY,EAAI,EAAGA,EAAI,CAAC,EAAG,EAAE,EAE/C,GAAIkY,EAAK,IAAM,CACbjW,GAAU8V,EAAMG,CAAE,EAClB,QACR,CAEM,IAAKA,EAAK,OAAU,KAASlY,EAAI,EAAI2W,EAAI,CAEvC,MAAMwB,EAAK,SAASF,EAAI,MAAMjY,EAAI,EAAGA,EAAI,CAAC,EAAG,EAAE,EAE/C,IAAKmY,EAAK,OAAU,IAAM,CACxB,MAAMC,EAAQF,GAAM,EAAK,KAAUC,EAAK,GAEpCC,EAAM,IACRnW,GAAU,KAEVA,GAAU,OAAO,aAAamW,CAAG,EAGnCpY,GAAK,EACL,QACV,CACA,CAEM,IAAKkY,EAAK,OAAU,KAASlY,EAAI,EAAI2W,EAAI,CAEvC,MAAMwB,EAAK,SAASF,EAAI,MAAMjY,EAAI,EAAGA,EAAI,CAAC,EAAG,EAAE,EACzCqY,EAAK,SAASJ,EAAI,MAAMjY,EAAI,EAAGA,EAAI,CAAC,EAAG,EAAE,EAE/C,IAAKmY,EAAK,OAAU,MAASE,EAAK,OAAU,IAAM,CAChD,MAAMD,EAAQF,GAAM,GAAM,MAAYC,GAAM,EAAK,KAAUE,EAAK,GAE5DD,EAAM,MAAUA,GAAO,OAAUA,GAAO,MAC1CnW,GAAU,MAEVA,GAAU,OAAO,aAAamW,CAAG,EAGnCpY,GAAK,EACL,QACV,CACA,CAEM,IAAKkY,EAAK,OAAU,KAASlY,EAAI,EAAI2W,EAAI,CAEvC,MAAMwB,EAAK,SAASF,EAAI,MAAMjY,EAAI,EAAGA,EAAI,CAAC,EAAG,EAAE,EACzCqY,EAAK,SAASJ,EAAI,MAAMjY,EAAI,EAAGA,EAAI,CAAC,EAAG,EAAE,EACzCsY,EAAK,SAASL,EAAI,MAAMjY,EAAI,GAAIA,EAAI,EAAE,EAAG,EAAE,EAEjD,IAAKmY,EAAK,OAAU,MAASE,EAAK,OAAU,MAASC,EAAK,OAAU,IAAM,CACxE,IAAIF,EAAQF,GAAM,GAAM,QAAcC,GAAM,GAAM,OAAaE,GAAM,EAAK,KAAUC,EAAK,GAErFF,EAAM,OAAWA,EAAM,QACzBnW,GAAU,QAEVmW,GAAO,MACPnW,GAAU,OAAO,aAAa,OAAUmW,GAAO,IAAK,OAAUA,EAAM,KAAM,GAG5EpY,GAAK,EACL,QACV,CACA,CAEMiC,GAAU,GAChB,CAEI,OAAOA,CACR,CAAA,CACH,CAEA+V,SAAO,aAAe,cACtBA,SAAO,eAAiB,GC7GxB,MAAM,YAAc,CAAA,EAKpB,SAAS,eAAgBnU,EAAS,CAChC,IAAIkU,EAAQ,YAAYlU,CAAO,EAC/B,GAAIkU,EAAS,OAAOA,EAEpBA,EAAQ,YAAYlU,CAAO,EAAI,CAAA,EAE/B,QAAS7D,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC5B,MAAM4E,EAAK,OAAO,aAAa5E,CAAC,EAE5B,cAAc,KAAK4E,CAAE,EAEvBmT,EAAM,KAAKnT,CAAE,EAEbmT,EAAM,KAAK,KAAO,IAAM/X,EAAE,SAAS,EAAE,EAAE,eAAe,MAAM,EAAE,CAAC,CAErE,CAEE,QAASA,EAAI,EAAGA,EAAI6D,EAAQ,OAAQ7D,IAClC+X,EAAMlU,EAAQ,WAAW7D,CAAC,CAAC,EAAI6D,EAAQ7D,CAAC,EAG1C,OAAO+X,CACT,CASA,SAASQ,SAAQxW,EAAQ8B,EAAS2U,EAAa,CACzC,OAAO3U,GAAY,WAErB2U,EAAc3U,EACdA,EAAU0U,SAAO,cAGf,OAAOC,EAAgB,MACzBA,EAAc,IAGhB,MAAMT,EAAQ,eAAelU,CAAO,EACpC,IAAI5B,EAAS,GAEb,QAASjC,EAAI,EAAG2W,EAAI5U,EAAO,OAAQ/B,EAAI2W,EAAG3W,IAAK,CAC7C,MAAMoG,EAAOrE,EAAO,WAAW/B,CAAC,EAEhC,GAAIwY,GAAepS,IAAS,IAAgBpG,EAAI,EAAI2W,GAC9C,iBAAiB,KAAK5U,EAAO,MAAM/B,EAAI,EAAGA,EAAI,CAAC,CAAC,EAAG,CACrDiC,GAAUF,EAAO,MAAM/B,EAAGA,EAAI,CAAC,EAC/BA,GAAK,EACL,QACR,CAGI,GAAIoG,EAAO,IAAK,CACdnE,GAAU8V,EAAM3R,CAAI,EACpB,QACN,CAEI,GAAIA,GAAQ,OAAUA,GAAQ,MAAQ,CACpC,GAAIA,GAAQ,OAAUA,GAAQ,OAAUpG,EAAI,EAAI2W,EAAG,CACjD,MAAM8B,EAAW1W,EAAO,WAAW/B,EAAI,CAAC,EACxC,GAAIyY,GAAY,OAAUA,GAAY,MAAQ,CAC5CxW,GAAU,mBAAmBF,EAAO/B,CAAC,EAAI+B,EAAO/B,EAAI,CAAC,CAAC,EACtDA,IACA,QACV,CACA,CACMiC,GAAU,YACV,QACN,CAEIA,GAAU,mBAAmBF,EAAO/B,CAAC,CAAC,CAC1C,CAEE,OAAOiC,CACT,CAEAsW,SAAO,aAAe,uBACtBA,SAAO,eAAiB,YCtFT,SAAS,OAAQ9B,EAAK,CACnC,IAAIxU,EAAS,GAEb,OAAAA,GAAUwU,EAAI,UAAY,GAC1BxU,GAAUwU,EAAI,QAAU,KAAO,GAC/BxU,GAAUwU,EAAI,KAAOA,EAAI,KAAO,IAAM,GAElCA,EAAI,UAAYA,EAAI,SAAS,QAAQ,GAAG,IAAM,GAEhDxU,GAAU,IAAMwU,EAAI,SAAW,IAE/BxU,GAAUwU,EAAI,UAAY,GAG5BxU,GAAUwU,EAAI,KAAO,IAAMA,EAAI,KAAO,GACtCxU,GAAUwU,EAAI,UAAY,GAC1BxU,GAAUwU,EAAI,QAAU,GACxBxU,GAAUwU,EAAI,MAAQ,GAEfxU,CACT,CCsBA,SAAS,KAAO,CACd,KAAK,SAAW,KAChB,KAAK,QAAU,KACf,KAAK,KAAO,KACZ,KAAK,KAAO,KACZ,KAAK,SAAW,KAChB,KAAK,KAAO,KACZ,KAAK,OAAS,KACd,KAAK,SAAW,IAClB,CAMA,MAAM,gBAAkB,oBAClB,YAAc,WAId,kBAAoB,qCAIpB,OAAS,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM;AAAA,EAAM,GAAI,EAGnD,OAAS,CAAC,IAAK,IAAK,IAAK,KAAM,IAAK,GAAG,EAAE,OAAO,MAAM,EAGtD,WAAa,CAAC,GAAI,EAAE,OAAO,MAAM,EAKjC,aAAe,CAAC,IAAK,IAAK,IAAK,IAAK,GAAG,EAAE,OAAO,UAAU,EAC1D,gBAAkB,CAAC,IAAK,IAAK,GAAG,EAChC,eAAiB,IACjB,oBAAsB,yBACtB,kBAAoB,+BAGpB,iBAAmB,CACvB,WAAY,GACZ,cAAe,EACjB,EAEM,gBAAkB,CACtB,KAAM,GACN,MAAO,GACP,IAAK,GACL,OAAQ,GACR,KAAM,GACN,QAAS,GACT,SAAU,GACV,OAAQ,GACR,UAAW,GACX,QAAS,EACX,EAEA,SAAS,SAAUwU,EAAKiC,EAAmB,CACzC,GAAIjC,GAAOA,aAAe,IAAK,OAAOA,EAEtC,MAAMkC,EAAI,IAAI,IACd,OAAAA,EAAE,MAAMlC,EAAKiC,CAAiB,EACvBC,CACT,CAEA,IAAI,UAAU,MAAQ,SAAUlC,EAAKiC,EAAmB,CACtD,IAAIE,EAAYC,EAAKC,EACjBC,EAAOtC,EAMX,GAFAsC,EAAOA,EAAK,KAAI,EAEZ,CAACL,GAAqBjC,EAAI,MAAM,GAAG,EAAE,SAAW,EAAG,CAErD,MAAMuC,EAAa,kBAAkB,KAAKD,CAAI,EAC9C,GAAIC,EACF,YAAK,SAAWA,EAAW,CAAC,EACxBA,EAAW,CAAC,IACd,KAAK,OAASA,EAAW,CAAC,GAErB,IAEb,CAEE,IAAIC,EAAQ,gBAAgB,KAAKF,CAAI,EAqBrC,GApBIE,IACFA,EAAQA,EAAM,CAAC,EACfL,EAAaK,EAAM,YAAW,EAC9B,KAAK,SAAWA,EAChBF,EAAOA,EAAK,OAAOE,EAAM,MAAM,IAQ7BP,GAAqBO,GAASF,EAAK,MAAM,sBAAsB,KACjED,EAAUC,EAAK,OAAO,EAAG,CAAC,IAAM,KAC5BD,GAAW,EAAEG,GAAS,iBAAiBA,CAAK,KAC9CF,EAAOA,EAAK,OAAO,CAAC,EACpB,KAAK,QAAU,KAIf,CAAC,iBAAiBE,CAAK,IACtBH,GAAYG,GAAS,CAAC,gBAAgBA,CAAK,GAAK,CAiBnD,IAAIC,EAAU,GACd,QAASlZ,EAAI,EAAGA,EAAI,gBAAgB,OAAQA,IAC1C6Y,EAAME,EAAK,QAAQ,gBAAgB/Y,CAAC,CAAC,EACjC6Y,IAAQ,KAAOK,IAAY,IAAML,EAAMK,KACzCA,EAAUL,GAMd,IAAIM,EAAMC,EACNF,IAAY,GAEdE,EAASL,EAAK,YAAY,GAAG,EAI7BK,EAASL,EAAK,YAAY,IAAKG,CAAO,EAKpCE,IAAW,KACbD,EAAOJ,EAAK,MAAM,EAAGK,CAAM,EAC3BL,EAAOA,EAAK,MAAMK,EAAS,CAAC,EAC5B,KAAK,KAAOD,GAIdD,EAAU,GACV,QAASlZ,EAAI,EAAGA,EAAI,aAAa,OAAQA,IACvC6Y,EAAME,EAAK,QAAQ,aAAa/Y,CAAC,CAAC,EAC9B6Y,IAAQ,KAAOK,IAAY,IAAML,EAAMK,KACzCA,EAAUL,GAIVK,IAAY,KACdA,EAAUH,EAAK,QAGbA,EAAKG,EAAU,CAAC,IAAM,KAAOA,IACjC,MAAMG,EAAON,EAAK,MAAM,EAAGG,CAAO,EAClCH,EAAOA,EAAK,MAAMG,CAAO,EAGzB,KAAK,UAAUG,CAAI,EAInB,KAAK,SAAW,KAAK,UAAY,GAIjC,MAAMC,EAAe,KAAK,SAAS,CAAC,IAAM,KACtC,KAAK,SAAS,KAAK,SAAS,OAAS,CAAC,IAAM,IAGhD,GAAI,CAACA,EAAc,CACjB,MAAMC,EAAY,KAAK,SAAS,MAAM,IAAI,EAC1C,QAASvZ,EAAI,EAAG2W,EAAI4C,EAAU,OAAQvZ,EAAI2W,EAAG3W,IAAK,CAChD,MAAMwZ,EAAOD,EAAUvZ,CAAC,EACxB,GAAKwZ,GACD,CAACA,EAAK,MAAM,mBAAmB,EAAG,CACpC,IAAIC,EAAU,GACd,QAASC,EAAI,EAAG3E,EAAIyE,EAAK,OAAQE,EAAI3E,EAAG2E,IAClCF,EAAK,WAAWE,CAAC,EAAI,IAIvBD,GAAW,IAEXA,GAAWD,EAAKE,CAAC,EAIrB,GAAI,CAACD,EAAQ,MAAM,mBAAmB,EAAG,CACvC,MAAME,EAAaJ,EAAU,MAAM,EAAGvZ,CAAC,EACjC4Z,EAAUL,EAAU,MAAMvZ,EAAI,CAAC,EAC/B6Z,EAAML,EAAK,MAAM,iBAAiB,EACpCK,IACFF,EAAW,KAAKE,EAAI,CAAC,CAAC,EACtBD,EAAQ,QAAQC,EAAI,CAAC,CAAC,GAEpBD,EAAQ,SACVb,EAAOa,EAAQ,KAAK,GAAG,EAAIb,GAE7B,KAAK,SAAWY,EAAW,KAAK,GAAG,EACnC,KACZ,CACA,CACA,CACA,CAEQ,KAAK,SAAS,OAAS,iBACzB,KAAK,SAAW,IAKdL,IACF,KAAK,SAAW,KAAK,SAAS,OAAO,EAAG,KAAK,SAAS,OAAS,CAAC,EAEtE,CAGE,MAAMQ,EAAOf,EAAK,QAAQ,GAAG,EACzBe,IAAS,KAEX,KAAK,KAAOf,EAAK,OAAOe,CAAI,EAC5Bf,EAAOA,EAAK,MAAM,EAAGe,CAAI,GAE3B,MAAMC,EAAKhB,EAAK,QAAQ,GAAG,EAC3B,OAAIgB,IAAO,KACT,KAAK,OAAShB,EAAK,OAAOgB,CAAE,EAC5BhB,EAAOA,EAAK,MAAM,EAAGgB,CAAE,GAErBhB,IAAQ,KAAK,SAAWA,GACxB,gBAAgBH,CAAU,GAC1B,KAAK,UAAY,CAAC,KAAK,WACzB,KAAK,SAAW,IAGX,IACT,EAEA,IAAI,UAAU,UAAY,SAAUS,EAAM,CACxC,IAAIW,EAAO,YAAY,KAAKX,CAAI,EAC5BW,IACFA,EAAOA,EAAK,CAAC,EACTA,IAAS,MACX,KAAK,KAAOA,EAAK,OAAO,CAAC,GAE3BX,EAAOA,EAAK,OAAO,EAAGA,EAAK,OAASW,EAAK,MAAM,GAE7CX,IAAQ,KAAK,SAAWA,EAC9B,+JCjTe,IAAA,mICAA,GAAA,qBCAA,QAAA,0PCAA,EAAA,4+DCAA,MAAA,y+ECAA,EAAA,4LCCf,eAAe,IAAI,YAEnB,2keACK,MAAM,EAAE,EACR,IAAK3U,GAAMA,EAAE,WAAW,CAAC,CAAC,CAAC,ECJhC,cAAe,IAAI,YAEnB,wCACK,MAAM,EAAE,EACR,IAAKA,GAAMA,EAAE,WAAW,CAAC,CAAC,CAAC,ECJhC,IAAI,GACJ,MAAM,UAAY,IAAI,IAAI,CACtB,CAAC,EAAG,KAAK,EAET,CAAC,IAAK,IAAI,EACV,CAAC,IAAK,IAAI,EACV,CAAC,IAAK,GAAG,EACT,CAAC,IAAK,IAAI,EACV,CAAC,IAAK,IAAI,EACV,CAAC,IAAK,IAAI,EACV,CAAC,IAAK,IAAI,EACV,CAAC,IAAK,GAAG,EACT,CAAC,IAAK,IAAI,EACV,CAAC,IAAK,GAAG,EACT,CAAC,IAAK,IAAI,EACV,CAAC,IAAK,GAAG,EACT,CAAC,IAAK,GAAG,EACT,CAAC,IAAK,IAAI,EACV,CAAC,IAAK,IAAI,EACV,CAAC,IAAK,IAAI,EACV,CAAC,IAAK,IAAI,EACV,CAAC,IAAK,IAAI,EACV,CAAC,IAAK,IAAI,EACV,CAAC,IAAK,IAAI,EACV,CAAC,IAAK,GAAG,EACT,CAAC,IAAK,IAAI,EACV,CAAC,IAAK,GAAG,EACT,CAAC,IAAK,IAAI,EACV,CAAC,IAAK,GAAG,EACT,CAAC,IAAK,GAAG,EACT,CAAC,IAAK,GAAG,CACb,CAAC,EAIYuV,iBAEZ,GAAK,OAAO,iBAAmB,MAAQ,KAAO,OAAS,GAAK,SAAUC,EAAW,CAC9E,IAAIC,EAAS,GACb,OAAID,EAAY,QACZA,GAAa,MACbC,GAAU,OAAO,aAAeD,IAAc,GAAM,KAAS,KAAM,EACnEA,EAAY,MAAUA,EAAY,MAEtCC,GAAU,OAAO,aAAaD,CAAS,EAChCC,CACX,EAMO,SAAS,iBAAiBD,EAAW,CACxC,IAAIxD,EACJ,OAAKwD,GAAa,OAAUA,GAAa,OAAWA,EAAY,QACrD,OAEHxD,EAAK,UAAU,IAAIwD,CAAS,KAAO,MAAQxD,IAAO,OAASA,EAAKwD,CAC5E,CCrDA,IAAI,WACH,SAAUE,EAAW,CAClBA,EAAUA,EAAU,IAAS,EAAE,EAAI,MACnCA,EAAUA,EAAU,KAAU,EAAE,EAAI,OACpCA,EAAUA,EAAU,OAAY,EAAE,EAAI,SACtCA,EAAUA,EAAU,KAAU,EAAE,EAAI,OACpCA,EAAUA,EAAU,KAAU,EAAE,EAAI,OACpCA,EAAUA,EAAU,QAAa,EAAE,EAAI,UACvCA,EAAUA,EAAU,QAAa,GAAG,EAAI,UACxCA,EAAUA,EAAU,QAAa,GAAG,EAAI,UACxCA,EAAUA,EAAU,QAAa,GAAG,EAAI,UACxCA,EAAUA,EAAU,QAAa,EAAE,EAAI,UACvCA,EAAUA,EAAU,QAAa,EAAE,EAAI,UACvCA,EAAUA,EAAU,QAAa,EAAE,EAAI,SAC3C,GAAG,YAAc,UAAY,CAAA,EAAG,EAEhC,MAAM,aAAe,GACd,IAAI,cACV,SAAUC,EAAc,CACrBA,EAAaA,EAAa,aAAkB,KAAK,EAAI,eACrDA,EAAaA,EAAa,cAAmB,KAAK,EAAI,gBACtDA,EAAaA,EAAa,WAAgB,GAAG,EAAI,YACrD,GAAG,eAAiB,aAAe,CAAA,EAAG,EACtC,SAAS,SAASjU,EAAM,CACpB,OAAOA,GAAQ,UAAU,MAAQA,GAAQ,UAAU,IACvD,CACA,SAAS,uBAAuBA,EAAM,CAClC,OAASA,GAAQ,UAAU,SAAWA,GAAQ,UAAU,SACnDA,GAAQ,UAAU,SAAWA,GAAQ,UAAU,OACxD,CACA,SAAS,oBAAoBA,EAAM,CAC/B,OAASA,GAAQ,UAAU,SAAWA,GAAQ,UAAU,SACnDA,GAAQ,UAAU,SAAWA,GAAQ,UAAU,SAChD,SAASA,CAAI,CACrB,CAOA,SAAS,8BAA8BA,EAAM,CACzC,OAAOA,IAAS,UAAU,QAAU,oBAAoBA,CAAI,CAChE,CACA,IAAI,oBACH,SAAUkU,EAAoB,CAC3BA,EAAmBA,EAAmB,YAAiB,CAAC,EAAI,cAC5DA,EAAmBA,EAAmB,aAAkB,CAAC,EAAI,eAC7DA,EAAmBA,EAAmB,eAAoB,CAAC,EAAI,iBAC/DA,EAAmBA,EAAmB,WAAgB,CAAC,EAAI,aAC3DA,EAAmBA,EAAmB,YAAiB,CAAC,EAAI,aAChE,GAAG,qBAAuB,mBAAqB,CAAA,EAAG,EAC3C,IAAI,cACV,SAAUC,EAAc,CAErBA,EAAaA,EAAa,OAAY,CAAC,EAAI,SAE3CA,EAAaA,EAAa,OAAY,CAAC,EAAI,SAE3CA,EAAaA,EAAa,UAAe,CAAC,EAAI,WAClD,GAAG,eAAiB,aAAe,CAAA,EAAG,EAI/B,MAAM,aAAc,CACvB,YAEAC,EAUAC,EAEAC,EAAQ,CACJ,KAAK,WAAaF,EAClB,KAAK,cAAgBC,EACrB,KAAK,OAASC,EAEd,KAAK,MAAQ,mBAAmB,YAEhC,KAAK,SAAW,EAOhB,KAAK,OAAS,EAEd,KAAK,UAAY,EAEjB,KAAK,OAAS,EAEd,KAAK,WAAa,aAAa,MACvC,CAEI,YAAYC,EAAY,CACpB,KAAK,WAAaA,EAClB,KAAK,MAAQ,mBAAmB,YAChC,KAAK,OAAS,EACd,KAAK,UAAY,EACjB,KAAK,OAAS,EACd,KAAK,SAAW,CACxB,CAYI,MAAMvN,EAAKwN,EAAQ,CACf,OAAQ,KAAK,MAAK,CACd,KAAK,mBAAmB,YACpB,OAAIxN,EAAI,WAAWwN,CAAM,IAAM,UAAU,KACrC,KAAK,MAAQ,mBAAmB,aAChC,KAAK,UAAY,EACV,KAAK,kBAAkBxN,EAAKwN,EAAS,CAAC,IAEjD,KAAK,MAAQ,mBAAmB,YACzB,KAAK,iBAAiBxN,EAAKwN,CAAM,GAE5C,KAAK,mBAAmB,aACpB,OAAO,KAAK,kBAAkBxN,EAAKwN,CAAM,EAE7C,KAAK,mBAAmB,eACpB,OAAO,KAAK,oBAAoBxN,EAAKwN,CAAM,EAE/C,KAAK,mBAAmB,WACpB,OAAO,KAAK,gBAAgBxN,EAAKwN,CAAM,EAE3C,KAAK,mBAAmB,YACpB,OAAO,KAAK,iBAAiBxN,EAAKwN,CAAM,CAExD,CACA,CAUI,kBAAkBxN,EAAKwN,EAAQ,CAC3B,OAAIA,GAAUxN,EAAI,OACP,IAENA,EAAI,WAAWwN,CAAM,EAAI,gBAAkB,UAAU,SACtD,KAAK,MAAQ,mBAAmB,WAChC,KAAK,UAAY,EACV,KAAK,gBAAgBxN,EAAKwN,EAAS,CAAC,IAE/C,KAAK,MAAQ,mBAAmB,eACzB,KAAK,oBAAoBxN,EAAKwN,CAAM,EACnD,CACI,mBAAmBxN,EAAKpK,EAAOE,EAAK6B,EAAM,CACtC,GAAI/B,IAAUE,EAAK,CACf,MAAM2X,EAAa3X,EAAMF,EACzB,KAAK,OACD,KAAK,OAAS,KAAK,IAAI+B,EAAM8V,CAAU,EACnC,SAASzN,EAAI,OAAOpK,EAAO6X,CAAU,EAAG9V,CAAI,EACpD,KAAK,UAAY8V,CAC7B,CACA,CAUI,gBAAgBzN,EAAKwN,EAAQ,CACzB,MAAME,EAAWF,EACjB,KAAOA,EAASxN,EAAI,QAAQ,CACxB,MAAMO,EAAOP,EAAI,WAAWwN,CAAM,EAClC,GAAI,SAASjN,CAAI,GAAK,uBAAuBA,CAAI,EAC7CiN,GAAU,MAGV,aAAK,mBAAmBxN,EAAK0N,EAAUF,EAAQ,EAAE,EAC1C,KAAK,kBAAkBjN,EAAM,CAAC,CAErD,CACQ,YAAK,mBAAmBP,EAAK0N,EAAUF,EAAQ,EAAE,EAC1C,EACf,CAUI,oBAAoBxN,EAAKwN,EAAQ,CAC7B,MAAME,EAAWF,EACjB,KAAOA,EAASxN,EAAI,QAAQ,CACxB,MAAMO,EAAOP,EAAI,WAAWwN,CAAM,EAClC,GAAI,SAASjN,CAAI,EACbiN,GAAU,MAGV,aAAK,mBAAmBxN,EAAK0N,EAAUF,EAAQ,EAAE,EAC1C,KAAK,kBAAkBjN,EAAM,CAAC,CAErD,CACQ,YAAK,mBAAmBP,EAAK0N,EAAUF,EAAQ,EAAE,EAC1C,EACf,CAcI,kBAAkBG,EAAQC,EAAgB,CACtC,IAAItE,EAEJ,GAAI,KAAK,UAAYsE,EACjB,OAACtE,EAAK,KAAK,UAAY,MAAQA,IAAO,QAAkBA,EAAG,2CAA2C,KAAK,QAAQ,EAC5G,EAGX,GAAIqE,IAAW,UAAU,KACrB,KAAK,UAAY,UAEZ,KAAK,aAAe,aAAa,OACtC,MAAO,GAEX,YAAK,cAAc,iBAAiB,KAAK,MAAM,EAAG,KAAK,QAAQ,EAC3D,KAAK,SACDA,IAAW,UAAU,MACrB,KAAK,OAAO,wCAAyC,EAEzD,KAAK,OAAO,kCAAkC,KAAK,MAAM,GAEtD,KAAK,QACpB,CAUI,iBAAiB3N,EAAKwN,EAAQ,CAC1B,KAAM,CAAE,WAAAJ,CAAU,EAAK,KACvB,IAAIS,EAAUT,EAAW,KAAK,SAAS,EAEnCU,GAAeD,EAAU,aAAa,eAAiB,GAC3D,KAAOL,EAASxN,EAAI,OAAQwN,IAAU,KAAK,SAAU,CACjD,MAAMjN,EAAOP,EAAI,WAAWwN,CAAM,EAElC,GADA,KAAK,UAAY,gBAAgBJ,EAAYS,EAAS,KAAK,UAAY,KAAK,IAAI,EAAGC,CAAW,EAAGvN,CAAI,EACjG,KAAK,UAAY,EACjB,OAAO,KAAK,SAAW,GAElB,KAAK,aAAe,aAAa,YAE7BuN,IAAgB,GAEb,8BAA8BvN,CAAI,GACxC,EACA,KAAK,6BAA8B,EAK7C,GAHAsN,EAAUT,EAAW,KAAK,SAAS,EACnCU,GAAeD,EAAU,aAAa,eAAiB,GAEnDC,IAAgB,EAAG,CAEnB,GAAIvN,IAAS,UAAU,KACnB,OAAO,KAAK,oBAAoB,KAAK,UAAWuN,EAAa,KAAK,SAAW,KAAK,MAAM,EAGxF,KAAK,aAAe,aAAa,SACjC,KAAK,OAAS,KAAK,UACnB,KAAK,UAAY,KAAK,OACtB,KAAK,OAAS,EAElC,CACA,CACQ,MAAO,EACf,CAMI,8BAA+B,CAC3B,IAAIxE,EACJ,KAAM,CAAE,OAAAzU,EAAQ,WAAAuY,CAAU,EAAK,KACzBU,GAAeV,EAAWvY,CAAM,EAAI,aAAa,eAAiB,GACxE,YAAK,oBAAoBA,EAAQiZ,EAAa,KAAK,QAAQ,GAC1DxE,EAAK,KAAK,UAAY,MAAQA,IAAO,QAAkBA,EAAG,wCAAyC,EAC7F,KAAK,QACpB,CAUI,oBAAoBzU,EAAQiZ,EAAaC,EAAU,CAC/C,KAAM,CAAE,WAAAX,CAAU,EAAK,KACvB,YAAK,cAAcU,IAAgB,EAC7BV,EAAWvY,CAAM,EAAI,CAAC,aAAa,aACnCuY,EAAWvY,EAAS,CAAC,EAAGkZ,CAAQ,EAClCD,IAAgB,GAEhB,KAAK,cAAcV,EAAWvY,EAAS,CAAC,EAAGkZ,CAAQ,EAEhDA,CACf,CAQI,KAAM,CACF,IAAIzE,EACJ,OAAQ,KAAK,MAAK,CACd,KAAK,mBAAmB,YAEpB,OAAO,KAAK,SAAW,IAClB,KAAK,aAAe,aAAa,WAC9B,KAAK,SAAW,KAAK,WACvB,KAAK,6BAA4B,EACjC,EAGV,KAAK,mBAAmB,eACpB,OAAO,KAAK,kBAAkB,EAAG,CAAC,EAEtC,KAAK,mBAAmB,WACpB,OAAO,KAAK,kBAAkB,EAAG,CAAC,EAEtC,KAAK,mBAAmB,aACpB,OAACA,EAAK,KAAK,UAAY,MAAQA,IAAO,QAAkBA,EAAG,2CAA2C,KAAK,QAAQ,EAC5G,EAEX,KAAK,mBAAmB,YAEpB,MAAO,EAEvB,CACA,CACA,CAOA,SAAS,WAAW8D,EAAY,CAC5B,IAAIY,EAAM,GACV,MAAMC,EAAU,IAAI,cAAcb,EAAapN,GAASgO,GAAOnB,gBAAc7M,CAAG,CAAE,EAClF,OAAO,SAAwBA,EAAKuN,EAAY,CAC5C,IAAIW,EAAY,EACZV,EAAS,EACb,MAAQA,EAASxN,EAAI,QAAQ,IAAKwN,CAAM,IAAM,GAAG,CAC7CQ,GAAOhO,EAAI,MAAMkO,EAAWV,CAAM,EAClCS,EAAQ,YAAYV,CAAU,EAC9B,MAAM5a,EAAMsb,EAAQ,MAAMjO,EAE1BwN,EAAS,CAAC,EACV,GAAI7a,EAAM,EAAG,CACTub,EAAYV,EAASS,EAAQ,IAAK,EAClC,KAChB,CACYC,EAAYV,EAAS7a,EAErB6a,EAAS7a,IAAQ,EAAIub,EAAY,EAAIA,CACjD,CACQ,MAAMrZ,EAASmZ,EAAMhO,EAAI,MAAMkO,CAAS,EAExC,OAAAF,EAAM,GACCnZ,CACV,CACL,CAWO,SAAS,gBAAgBuY,EAAYS,EAASM,EAAS5N,EAAM,CAChE,MAAM6N,GAAeP,EAAU,aAAa,gBAAkB,EACxDQ,EAAaR,EAAU,aAAa,WAE1C,GAAIO,IAAgB,EAChB,OAAOC,IAAe,GAAK9N,IAAS8N,EAAaF,EAAU,GAG/D,GAAIE,EAAY,CACZ,MAAM5W,EAAQ8I,EAAO8N,EACrB,OAAO5W,EAAQ,GAAKA,GAAS2W,EACvB,GACAhB,EAAWe,EAAU1W,CAAK,EAAI,CAC5C,CAGI,IAAI6W,EAAKH,EACLI,EAAKD,EAAKF,EAAc,EAC5B,KAAOE,GAAMC,GAAI,CACb,MAAMC,EAAOF,EAAKC,IAAQ,EACpBE,EAASrB,EAAWoB,CAAG,EAC7B,GAAIC,EAASlO,EACT+N,EAAKE,EAAM,UAENC,EAASlO,EACdgO,EAAKC,EAAM,MAGX,QAAOpB,EAAWoB,EAAMJ,CAAW,CAE/C,CACI,MAAO,EACX,CACA,MAAM,YAAc,WAAW,cAAc,EAC1B,WAAW,aAAa,EAQpC,SAAS,WAAWpO,EAAK0O,EAAO,aAAa,OAAQ,CACxD,OAAO,YAAY1O,EAAK0O,CAAI,CAChC,CC5cA,SAASlU,SAAQ3H,EAAK,CAAE,OAAO,OAAO,UAAU,SAAS,KAAKA,CAAG,CAAC,CAElE,SAAS8b,WAAU9b,EAAK,CAAE,OAAO2H,SAAO3H,CAAG,IAAM,iBAAiB,CAElE,MAAM,gBAAkB,OAAO,UAAU,eAEzC,SAAS,IAAKwE,EAAQpE,EAAK,CACzB,OAAO,gBAAgB,KAAKoE,EAAQpE,CAAG,CACzC,CAIA,SAASH,SAAQD,EAAoC,CAGnD,OAFgB,MAAM,UAAU,MAAM,KAAK,UAAW,CAAC,EAE/C,QAAQ,SAAU0B,EAAQ,CAChC,GAAKA,EAEL,IAAI,OAAOA,GAAW,SACpB,MAAM,IAAI,UAAUA,EAAS,gBAAgB,EAG/C,OAAO,KAAKA,CAAM,EAAE,QAAQ,SAAUtB,EAAK,CACzCJ,EAAII,CAAG,EAAIsB,EAAOtB,CAAG,CACtB,CAAA,EACF,CAAA,EAEMJ,CACT,CAIA,SAAS,eAAgB+b,EAAKC,EAAKC,EAAa,CAC9C,MAAO,GAAG,OAAOF,EAAI,MAAM,EAAGC,CAAG,EAAGC,EAAaF,EAAI,MAAMC,EAAM,CAAC,CAAC,CACrE,CAEA,SAAS,kBAAmBvX,EAAG,CAa7B,MAVI,EAAAA,GAAK,OAAUA,GAAK,OAEpBA,GAAK,OAAUA,GAAK,QACnBA,EAAI,SAAY,QAAWA,EAAI,SAAY,OAE5CA,GAAK,GAAQA,GAAK,GAClBA,IAAM,IACNA,GAAK,IAAQA,GAAK,IAClBA,GAAK,KAAQA,GAAK,KAElBA,EAAI,QAEV,CAEA,SAAS,cAAeA,EAAG,CAEzB,GAAIA,EAAI,MAAQ,CACdA,GAAK,MACL,MAAMyX,EAAa,OAAUzX,GAAK,IAC5B0X,EAAa,OAAU1X,EAAI,MAEjC,OAAO,OAAO,aAAayX,EAAYC,CAAU,CACrD,CACE,OAAO,OAAO,aAAa1X,CAAC,CAC9B,CAEA,MAAM,eAAkB,6CAClB,UAAkB,6BAClB,gBAAkB,IAAI,OAAO,eAAe,OAAS,IAAM,UAAU,OAAQ,IAAI,EAEjF,uBAAyB,sCAE/B,SAAS,qBAAsBY,EAAO5F,EAAM,CAC1C,GAAIA,EAAK,WAAW,CAAC,IAAM,IAAe,uBAAuB,KAAKA,CAAI,EAAG,CAC3E,MAAM0G,EAAO1G,EAAK,CAAC,EAAE,YAAW,IAAO,IACnC,SAASA,EAAK,MAAM,CAAC,EAAG,EAAE,EAC1B,SAASA,EAAK,MAAM,CAAC,EAAG,EAAE,EAE9B,OAAI,kBAAkB0G,CAAI,EACjB,cAAcA,CAAI,EAGpBd,CACX,CAEE,MAAM+W,EAAU,WAAW/W,CAAK,EAChC,OAAI+W,IAAY/W,EACP+W,EAGF/W,CACT,CAQA,SAAS,WAAY8H,EAAK,CACxB,OAAIA,EAAI,QAAQ,IAAI,EAAI,EAAYA,EAC7BA,EAAI,QAAQ,eAAgB,IAAI,CACzC,CAEA,SAAS,YAAaA,EAAK,CACzB,OAAIA,EAAI,QAAQ,IAAI,EAAI,GAAKA,EAAI,QAAQ,GAAG,EAAI,EAAYA,EAErDA,EAAI,QAAQ,gBAAiB,SAAU9H,EAAOgX,EAASC,EAAQ,CACpE,OAAID,GACG,qBAAqBhX,EAAOiX,CAAM,CAC1C,CAAA,CACH,CAEA,MAAM,oBAAsB,SACtB,uBAAyB,UACzB,kBAAoB,CACxB,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,QACP,EAEA,SAAS,kBAAmB3X,EAAI,CAC9B,OAAO,kBAAkBA,CAAE,CAC7B,CAEA,SAAS,WAAYwI,EAAK,CACxB,OAAI,oBAAoB,KAAKA,CAAG,EACvBA,EAAI,QAAQ,uBAAwB,iBAAiB,EAEvDA,CACT,CAEA,MAAM,iBAAmB,uBAEzB,SAASoP,WAAUpP,EAAK,CACtB,OAAOA,EAAI,QAAQ,iBAAkB,MAAM,CAC7C,CAEA,SAAS,QAAShH,EAAM,CACtB,OAAQA,EAAI,CACV,IAAK,GACL,IAAK,IACH,MAAO,EACb,CACE,MAAO,EACT,CAGA,SAAS,aAAcA,EAAM,CAC3B,GAAIA,GAAQ,MAAUA,GAAQ,KAAU,MAAO,GAC/C,OAAQA,EAAI,CACV,IAAK,GACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,OACH,MAAO,EACb,CACE,MAAO,EACT,CAKA,SAAS,YAAaxB,EAAI,CACxB,OAAO6X,EAAU,KAAK7X,CAAE,GAAK8X,MAAU,KAAK9X,CAAE,CAChD,CASA,SAAS,eAAgBA,EAAI,CAC3B,OAAQA,EAAE,CACR,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACH,MAAO,GACT,QACE,MAAO,EACb,CACA,CAIA,SAAS,mBAAoBwI,EAAK,CAGhC,OAAAA,EAAMA,EAAI,KAAM,EAAC,QAAQ,OAAQ,GAAG,EAQhC,IAAI,YAAa,IAAK,MACxBA,EAAMA,EAAI,QAAQ,KAAM,GAAG,GAmCtBA,EAAI,YAAW,EAAG,YAAW,CACtC,CAMA,MAAM,IAAM,CAAE,MAAO,OAAO,uTCtRb,SAAS,eAAgBrF,EAAO/E,EAAO2Z,EAAe,CACnE,IAAIxP,EAAOyP,EAAOC,EAAQC,EAE1B,MAAMtY,EAAMuD,EAAM,OACZgV,EAAShV,EAAM,IAKrB,IAHAA,EAAM,IAAM/E,EAAQ,EACpBmK,EAAQ,EAEDpF,EAAM,IAAMvD,GAAK,CAEtB,GADAqY,EAAS9U,EAAM,IAAI,WAAWA,EAAM,GAAG,EACnC8U,IAAW,KACb1P,IACIA,IAAU,GAAG,CACfyP,EAAQ,GACR,KACR,CAKI,GAFAE,EAAU/U,EAAM,IAChBA,EAAM,GAAG,OAAO,UAAUA,CAAK,EAC3B8U,IAAW,IACb,GAAIC,IAAY/U,EAAM,IAAM,EAE1BoF,YACSwP,EACT,OAAA5U,EAAM,IAAMgV,EACL,GAGf,CAEE,IAAIC,EAAW,GAEf,OAAIJ,IACFI,EAAWjV,EAAM,KAInBA,EAAM,IAAMgV,EAELC,CACT,CC3Ce,SAAS,qBAAsB5P,EAAKpK,EAAOwB,EAAK,CAC7D,IAAI4B,EACA6V,EAAMjZ,EAEV,MAAMf,EAAS,CACb,GAAI,GACJ,IAAK,EACL,IAAK,EACT,EAEE,GAAImL,EAAI,WAAW6O,CAAG,IAAM,GAAc,CAExC,IADAA,IACOA,EAAMzX,GAAK,CAGhB,GAFA4B,EAAOgH,EAAI,WAAW6O,CAAG,EACrB7V,IAAS,IACTA,IAAS,GAAgB,OAAOnE,EACpC,GAAImE,IAAS,GACX,OAAAnE,EAAO,IAAMga,EAAM,EACnBha,EAAO,IAAM,YAAYmL,EAAI,MAAMpK,EAAQ,EAAGiZ,CAAG,CAAC,EAClDha,EAAO,GAAK,GACLA,EAET,GAAImE,IAAS,IAAgB6V,EAAM,EAAIzX,EAAK,CAC1CyX,GAAO,EACP,QACR,CAEMA,GACN,CAGI,OAAOha,CACX,CAIE,IAAIkL,EAAQ,EACZ,KAAO8O,EAAMzX,IACX4B,EAAOgH,EAAI,WAAW6O,CAAG,EAErB,EAAA7V,IAAS,IAGTA,EAAO,IAAQA,IAAS,OANZ,CAQhB,GAAIA,IAAS,IAAgB6V,EAAM,EAAIzX,EAAK,CAC1C,GAAI4I,EAAI,WAAW6O,EAAM,CAAC,IAAM,GAAQ,MACxCA,GAAO,EACP,QACN,CAEI,GAAI7V,IAAS,KACX+G,IACIA,EAAQ,IAAM,OAAOlL,EAG3B,GAAImE,IAAS,GAAc,CACzB,GAAI+G,IAAU,EAAK,MACnBA,GACN,CAEI8O,GACJ,CAGE,OADIjZ,IAAUiZ,GACV9O,IAAU,IAEdlL,EAAO,IAAM,YAAYmL,EAAI,MAAMpK,EAAOiZ,CAAG,CAAC,EAC9Cha,EAAO,IAAMga,EACbha,EAAO,GAAK,IACLA,CACT,CCpEe,SAAS,eAAgBmL,EAAKpK,EAAOwB,EAAKyY,EAAY,CACnE,IAAI7W,EACA6V,EAAMjZ,EAEV,MAAM+E,EAAQ,CAEZ,GAAI,GAEJ,aAAc,GAEd,IAAK,EAEL,IAAK,GAEL,OAAQ,CACZ,EAEE,GAAIkV,EAGFlV,EAAM,IAAMkV,EAAW,IACvBlV,EAAM,OAASkV,EAAW,WACrB,CACL,GAAIhB,GAAOzX,EAAO,OAAOuD,EAEzB,IAAI8U,EAASzP,EAAI,WAAW6O,CAAG,EAC/B,GAAIY,IAAW,IAAgBA,IAAW,IAAgBA,IAAW,GAAgB,OAAO9U,EAE5F/E,IACAiZ,IAGIY,IAAW,KAAQA,EAAS,IAEhC9U,EAAM,OAAS8U,CACnB,CAEE,KAAOZ,EAAMzX,GAAK,CAEhB,GADA4B,EAAOgH,EAAI,WAAW6O,CAAG,EACrB7V,IAAS2B,EAAM,OACjB,OAAAA,EAAM,IAAMkU,EAAM,EAClBlU,EAAM,KAAO,YAAYqF,EAAI,MAAMpK,EAAOiZ,CAAG,CAAC,EAC9ClU,EAAM,GAAK,GACJA,EACF,GAAI3B,IAAS,IAAgB2B,EAAM,SAAW,GACnD,OAAOA,EACE3B,IAAS,IAAgB6V,EAAM,EAAIzX,GAC5CyX,IAGFA,GACJ,CAGE,OAAAlU,EAAM,aAAe,GACrBA,EAAM,KAAO,YAAYqF,EAAI,MAAMpK,EAAOiZ,CAAG,CAAC,EACvClU,CACT,6JCvDM,cAAgB,CAAA,EAEtB,cAAc,YAAc,SAAUmV,EAAQ7W,EAAK3F,EAASyc,EAAKC,EAAK,CACpE,MAAMC,EAAQH,EAAO7W,CAAG,EAExB,MAAQ,QAAU+W,EAAI,YAAYC,CAAK,EAAI,IACnC,WAAWA,EAAM,OAAO,EACxB,SACV,EAEA,cAAc,WAAa,SAAUH,EAAQ7W,EAAK3F,EAASyc,EAAKC,EAAK,CACnE,MAAMC,EAAQH,EAAO7W,CAAG,EAExB,MAAQ,OAAS+W,EAAI,YAAYC,CAAK,EAAI,UAClC,WAAWH,EAAO7W,CAAG,EAAE,OAAO,EAC9B;AAAA,CACV,EAEA,cAAc,MAAQ,SAAU6W,EAAQ7W,EAAK3F,EAASyc,EAAKC,EAAK,CAC9D,MAAMC,EAAQH,EAAO7W,CAAG,EAClBiX,EAAOD,EAAM,KAAO,YAAYA,EAAM,IAAI,EAAE,OAAS,GAC3D,IAAIE,EAAW,GACXC,EAAY,GAEhB,GAAIF,EAAM,CACR,MAAMG,EAAMH,EAAK,MAAM,QAAQ,EAC/BC,EAAWE,EAAI,CAAC,EAChBD,EAAYC,EAAI,MAAM,CAAC,EAAE,KAAK,EAAE,CACpC,CAEE,IAAIC,EAOJ,GANIhd,EAAQ,UACVgd,EAAchd,EAAQ,UAAU2c,EAAM,QAASE,EAAUC,CAAS,GAAK,WAAWH,EAAM,OAAO,EAE/FK,EAAc,WAAWL,EAAM,OAAO,EAGpCK,EAAY,QAAQ,MAAM,IAAM,EAClC,OAAOA,EAAc;AAAA,EAMvB,GAAIJ,EAAM,CACR,MAAMtd,EAAIqd,EAAM,UAAU,OAAO,EAC3BM,EAAWN,EAAM,MAAQA,EAAM,MAAM,QAAU,CAAA,EAEjDrd,EAAI,EACN2d,EAAS,KAAK,CAAC,QAASjd,EAAQ,WAAa6c,CAAQ,CAAC,GAEtDI,EAAS3d,CAAC,EAAI2d,EAAS3d,CAAC,EAAE,MAAK,EAC/B2d,EAAS3d,CAAC,EAAE,CAAC,GAAK,IAAMU,EAAQ,WAAa6c,GAI/C,MAAMK,EAAW,CACf,MAAOD,CACb,EAEI,MAAO,aAAaP,EAAI,YAAYQ,CAAQ,CAAC,IAAIF,CAAW;AAAA,CAChE,CAEE,MAAO,aAAaN,EAAI,YAAYC,CAAK,CAAC,IAAIK,CAAW;AAAA,CAC3D,EAEA,cAAc,MAAQ,SAAUR,EAAQ7W,EAAK3F,EAASyc,EAAKC,EAAK,CAC9D,MAAMC,EAAQH,EAAO7W,CAAG,EAOxB,OAAAgX,EAAM,MAAMA,EAAM,UAAU,KAAK,CAAC,EAAE,CAAC,EACnCD,EAAI,mBAAmBC,EAAM,SAAU3c,EAASyc,CAAG,EAE9CC,EAAI,YAAYF,EAAQ7W,EAAK3F,CAAO,CAC7C,EAEA,cAAc,UAAY,SAAUwc,EAAQ7W,EAAK3F,EAAoB,CACnE,OAAOA,EAAQ,SAAW;AAAA,EAAa;AAAA,CACzC,EACA,cAAc,UAAY,SAAUwc,EAAQ7W,EAAK3F,EAAoB,CACnE,OAAOA,EAAQ,OAAUA,EAAQ,SAAW;AAAA,EAAa;AAAA,EAAY;AAAA,CACvE,EAEA,cAAc,KAAO,SAAUwc,EAAQ7W,EAAyB,CAC9D,OAAO,WAAW6W,EAAO7W,CAAG,EAAE,OAAO,CACvC,EAEA,cAAc,WAAa,SAAU6W,EAAQ7W,EAAyB,CACpE,OAAO6W,EAAO7W,CAAG,EAAE,OACrB,EACA,cAAc,YAAc,SAAU6W,EAAQ7W,EAAyB,CACrE,OAAO6W,EAAO7W,CAAG,EAAE,OACrB,EAOA,SAAS,UAAY,CA6BnB,KAAK,MAAQnG,SAAO,CAAA,EAAI,aAAa,CACvC,CAOA,SAAS,UAAU,YAAc,SAAS2d,EAAaR,EAAO,CAC5D,IAAIrd,EAAG2W,EAAG1U,EAEV,GAAI,CAACob,EAAM,MAAS,MAAO,GAI3B,IAFApb,EAAS,GAEJjC,EAAI,EAAG2W,EAAI0G,EAAM,MAAM,OAAQrd,EAAI2W,EAAG3W,IACzCiC,GAAU,IAAM,WAAWob,EAAM,MAAMrd,CAAC,EAAE,CAAC,CAAC,EAAI,KAAO,WAAWqd,EAAM,MAAMrd,CAAC,EAAE,CAAC,CAAC,EAAI,IAGzF,OAAOiC,CACT,EAWA,SAAS,UAAU,YAAc,SAAS6b,EAAaZ,EAAQ7W,EAAK3F,EAAS,CAC3E,MAAM2c,EAAQH,EAAO7W,CAAG,EACxB,IAAIpE,EAAS,GAGb,GAAIob,EAAM,OACR,MAAO,GAULA,EAAM,OAASA,EAAM,UAAY,IAAMhX,GAAO6W,EAAO7W,EAAM,CAAC,EAAE,SAChEpE,GAAU;AAAA,GAIZA,IAAWob,EAAM,UAAY,GAAK,KAAO,KAAOA,EAAM,IAGtDpb,GAAU,KAAK,YAAYob,CAAK,EAG5BA,EAAM,UAAY,GAAK3c,EAAQ,WACjCuB,GAAU,MAIZ,IAAI8b,EAAS,GACb,GAAIV,EAAM,QACRU,EAAS,GAELV,EAAM,UAAY,GAChBhX,EAAM,EAAI6W,EAAO,QAAQ,CAC3B,MAAMc,EAAYd,EAAO7W,EAAM,CAAC,GAE5B2X,EAAU,OAAS,UAAYA,EAAU,QAIlCA,EAAU,UAAY,IAAMA,EAAU,MAAQX,EAAM,OAG7DU,EAAS,GAEnB,CAIE,OAAA9b,GAAU8b,EAAS;AAAA,EAAQ,IAEpB9b,CACT,EAUA,SAAS,UAAU,aAAe,SAAUib,EAAQxc,EAASyc,EAAK,CAChE,IAAIlb,EAAS,GACb,MAAMgc,EAAQ,KAAK,MAEnB,QAASje,EAAI,EAAGD,EAAMmd,EAAO,OAAQld,EAAID,EAAKC,IAAK,CACjD,MAAMR,EAAO0d,EAAOld,CAAC,EAAE,KAEnB,OAAOie,EAAMze,CAAI,EAAM,IACzByC,GAAUgc,EAAMze,CAAI,EAAE0d,EAAQld,EAAGU,EAASyc,EAAK,IAAI,EAEnDlb,GAAU,KAAK,YAAYib,EAAQld,EAAGU,CAAO,CAEnD,CAEE,OAAOuB,CACT,EAYA,SAAS,UAAU,mBAAqB,SAAUib,EAAQxc,EAASyc,EAAK,CACtE,IAAIlb,EAAS,GAEb,QAASjC,EAAI,EAAGD,EAAMmd,EAAO,OAAQld,EAAID,EAAKC,IAC5C,OAAQkd,EAAOld,CAAC,EAAE,KAAI,CACpB,IAAK,OACHiC,GAAUib,EAAOld,CAAC,EAAE,QACpB,MACF,IAAK,QACHiC,GAAU,KAAK,mBAAmBib,EAAOld,CAAC,EAAE,SAAUU,EAASyc,CAAG,EAClE,MACF,IAAK,cACL,IAAK,aACHlb,GAAUib,EAAOld,CAAC,EAAE,QACpB,MACF,IAAK,YACL,IAAK,YACHiC,GAAU;AAAA,EACV,KAGR,CAGE,OAAOA,CACT,EAWA,SAAS,UAAU,OAAS,SAAUib,EAAQxc,EAASyc,EAAK,CAC1D,IAAIlb,EAAS,GACb,MAAMgc,EAAQ,KAAK,MAEnB,QAASje,EAAI,EAAGD,EAAMmd,EAAO,OAAQld,EAAID,EAAKC,IAAK,CACjD,MAAMR,EAAO0d,EAAOld,CAAC,EAAE,KAEnBR,IAAS,SACXyC,GAAU,KAAK,aAAaib,EAAOld,CAAC,EAAE,SAAUU,EAASyc,CAAG,EACnD,OAAOc,EAAMze,CAAI,EAAM,IAChCyC,GAAUgc,EAAMze,CAAI,EAAE0d,EAAQld,EAAGU,EAASyc,EAAK,IAAI,EAEnDlb,GAAU,KAAK,YAAYib,EAAQld,EAAGU,EAASyc,CAAG,CAExD,CAEE,OAAOlb,CACT,EC1SA,SAAS,OAAS,CAUhB,KAAK,UAAY,CAAA,EAOjB,KAAK,UAAY,IACnB,CAMA,MAAM,UAAU,SAAW,SAAUvC,EAAM,CACzC,QAASM,EAAI,EAAGA,EAAI,KAAK,UAAU,OAAQA,IACzC,GAAI,KAAK,UAAUA,CAAC,EAAE,OAASN,EAC7B,OAAOM,EAGX,MAAO,EACT,EAIA,MAAM,UAAU,YAAc,UAAY,CACxC,MAAMke,EAAO,KACPC,EAAS,CAAC,EAAE,EAGlBD,EAAK,UAAU,QAAQ,SAAUE,EAAM,CAChCA,EAAK,SAEVA,EAAK,IAAI,QAAQ,SAAUC,EAAS,CAC9BF,EAAO,QAAQE,CAAO,EAAI,GAC5BF,EAAO,KAAKE,CAAO,CAEtB,CAAA,CACF,CAAA,EAEDH,EAAK,UAAY,CAAA,EAEjBC,EAAO,QAAQ,SAAUG,EAAO,CAC9BJ,EAAK,UAAUI,CAAK,EAAI,CAAA,EACxBJ,EAAK,UAAU,QAAQ,SAAUE,EAAM,CAChCA,EAAK,UAENE,GAASF,EAAK,IAAI,QAAQE,CAAK,EAAI,GAEvCJ,EAAK,UAAUI,CAAK,EAAE,KAAKF,EAAK,EAAE,EACnC,CAAA,CACF,CAAA,CACH,EA2BA,MAAM,UAAU,GAAK,SAAU1e,EAAM6e,EAAI7d,EAAS,CAChD,MAAMkB,EAAQ,KAAK,SAASlC,CAAI,EAC1B8e,EAAM9d,GAAW,CAAA,EAEvB,GAAIkB,IAAU,GAAM,MAAM,IAAI,MAAM,0BAA4BlC,CAAI,EAEpE,KAAK,UAAUkC,CAAK,EAAE,GAAK2c,EAC3B,KAAK,UAAU3c,CAAK,EAAE,IAAM4c,EAAI,KAAO,CAAA,EACvC,KAAK,UAAY,IACnB,EA0BA,MAAM,UAAU,OAAS,SAAUC,EAAYC,EAAUH,EAAI7d,EAAS,CACpE,MAAMkB,EAAQ,KAAK,SAAS6c,CAAU,EAChCD,EAAM9d,GAAW,CAAA,EAEvB,GAAIkB,IAAU,GAAM,MAAM,IAAI,MAAM,0BAA4B6c,CAAU,EAE1E,KAAK,UAAU,OAAO7c,EAAO,EAAG,CAC9B,KAAM8c,EACN,QAAS,GACT,GAAAH,EACA,IAAKC,EAAI,KAAO,CAAA,CACjB,CAAA,EAED,KAAK,UAAY,IACnB,EA0BA,MAAM,UAAU,MAAQ,SAAUG,EAAWD,EAAUH,EAAI7d,EAAS,CAClE,MAAMkB,EAAQ,KAAK,SAAS+c,CAAS,EAC/BH,EAAM9d,GAAW,CAAA,EAEvB,GAAIkB,IAAU,GAAM,MAAM,IAAI,MAAM,0BAA4B+c,CAAS,EAEzE,KAAK,UAAU,OAAO/c,EAAQ,EAAG,EAAG,CAClC,KAAM8c,EACN,QAAS,GACT,GAAAH,EACA,IAAKC,EAAI,KAAO,CAAA,CACjB,CAAA,EAED,KAAK,UAAY,IACnB,EAyBA,MAAM,UAAU,KAAO,SAAUE,EAAUH,EAAI7d,EAAS,CACtD,MAAM8d,EAAM9d,GAAW,CAAA,EAEvB,KAAK,UAAU,KAAK,CAClB,KAAMge,EACN,QAAS,GACT,GAAAH,EACA,IAAKC,EAAI,KAAO,CAAA,CACjB,CAAA,EAED,KAAK,UAAY,IACnB,EAcA,MAAM,UAAU,OAAS,SAAUI,EAAMC,EAAe,CACjD,MAAM,QAAQD,CAAI,IAAKA,EAAO,CAACA,CAAI,GAExC,MAAM3c,EAAS,CAAA,EAGf,OAAA2c,EAAK,QAAQ,SAAUlf,EAAM,CAC3B,MAAM2G,EAAM,KAAK,SAAS3G,CAAI,EAE9B,GAAI2G,EAAM,EAAG,CACX,GAAIwY,EAAiB,OACrB,MAAM,IAAI,MAAM,oCAAsCnf,CAAI,CAChE,CACI,KAAK,UAAU2G,CAAG,EAAE,QAAU,GAC9BpE,EAAO,KAAKvC,CAAI,CACpB,EAAK,IAAI,EAEP,KAAK,UAAY,KACVuC,CACT,EAYA,MAAM,UAAU,WAAa,SAAU2c,EAAMC,EAAe,CACrD,MAAM,QAAQD,CAAI,IAAKA,EAAO,CAACA,CAAI,GAExC,KAAK,UAAU,QAAQ,SAAUR,EAAM,CAAEA,EAAK,QAAU,EAAO,CAAA,EAE/D,KAAK,OAAOQ,EAAMC,CAAa,CACjC,EAcA,MAAM,UAAU,QAAU,SAAUD,EAAMC,EAAe,CAClD,MAAM,QAAQD,CAAI,IAAKA,EAAO,CAACA,CAAI,GAExC,MAAM3c,EAAS,CAAA,EAGf,OAAA2c,EAAK,QAAQ,SAAUlf,EAAM,CAC3B,MAAM2G,EAAM,KAAK,SAAS3G,CAAI,EAE9B,GAAI2G,EAAM,EAAG,CACX,GAAIwY,EAAiB,OACrB,MAAM,IAAI,MAAM,oCAAsCnf,CAAI,CAChE,CACI,KAAK,UAAU2G,CAAG,EAAE,QAAU,GAC9BpE,EAAO,KAAKvC,CAAI,CACpB,EAAK,IAAI,EAEP,KAAK,UAAY,KACVuC,CACT,EAWA,MAAM,UAAU,SAAW,SAAU6c,EAAW,CAC9C,OAAI,KAAK,YAAc,MACrB,KAAK,YAAW,EAIX,KAAK,UAAUA,CAAS,GAAK,CAAA,CACtC,ECtUA,SAAS,MAAOtf,EAAMiE,EAAKsb,EAAS,CAMlC,KAAK,KAAWvf,EAOhB,KAAK,IAAWiE,EAOhB,KAAK,MAAW,KAOhB,KAAK,IAAW,KAWhB,KAAK,QAAWsb,EAOhB,KAAK,MAAW,EAOhB,KAAK,SAAW,KAQhB,KAAK,QAAW,GAOhB,KAAK,OAAW,GAWhB,KAAK,KAAW,GAOhB,KAAK,KAAW,KAQhB,KAAK,MAAW,GAQhB,KAAK,OAAW,EAClB,CAOA,MAAM,UAAU,UAAY,SAASC,EAAWtf,EAAM,CACpD,GAAI,CAAC,KAAK,MAAS,MAAO,GAE1B,MAAMuf,EAAQ,KAAK,MAEnB,QAASjf,EAAI,EAAGD,EAAMkf,EAAM,OAAQjf,EAAID,EAAKC,IAC3C,GAAIif,EAAMjf,CAAC,EAAE,CAAC,IAAMN,EAAQ,OAAOM,EAErC,MAAO,EACT,EAOA,MAAM,UAAU,SAAW,SAASkf,EAAUC,EAAU,CAClD,KAAK,MACP,KAAK,MAAM,KAAKA,CAAQ,EAExB,KAAK,MAAQ,CAACA,CAAQ,CAE1B,EAOA,MAAM,UAAU,QAAU,SAASC,EAAS1f,EAAMmF,EAAO,CACvD,MAAMwB,EAAM,KAAK,UAAU3G,CAAI,EACzByf,EAAW,CAACzf,EAAMmF,CAAK,EAEzBwB,EAAM,EACR,KAAK,SAAS8Y,CAAQ,EAEtB,KAAK,MAAM9Y,CAAG,EAAI8Y,CAEtB,EAOA,MAAM,UAAU,QAAU,SAASE,EAAS3f,EAAM,CAChD,MAAM2G,EAAM,KAAK,UAAU3G,CAAI,EAC/B,IAAImF,EAAQ,KACZ,OAAIwB,GAAO,IACTxB,EAAQ,KAAK,MAAMwB,CAAG,EAAE,CAAC,GAEpBxB,CACT,EAQA,MAAM,UAAU,SAAW,SAASya,EAAU5f,EAAMmF,EAAO,CACzD,MAAMwB,EAAM,KAAK,UAAU3G,CAAI,EAE3B2G,EAAM,EACR,KAAK,SAAS,CAAC3G,EAAMmF,CAAK,CAAC,EAE3B,KAAK,MAAMwB,CAAG,EAAE,CAAC,EAAI,KAAK,MAAMA,CAAG,EAAE,CAAC,EAAI,IAAMxB,CAEpD,ECvLA,SAAS,UAAWmX,EAAKtK,EAAIyL,EAAK,CAChC,KAAK,IAAMnB,EACX,KAAK,IAAMmB,EACX,KAAK,OAAS,CAAA,EACd,KAAK,WAAa,GAClB,KAAK,GAAKzL,CACZ,CAGA,UAAU,UAAU,MAAQ,MCX5B,MAAM,YAAe,YACf,QAAe,MAEN,SAAS,UAAW3J,EAAO,CACxC,IAAIqF,EAGJA,EAAMrF,EAAM,IAAI,QAAQ,YAAa;AAAA,CAAI,EAGzCqF,EAAMA,EAAI,QAAQ,QAAS,GAAQ,EAEnCrF,EAAM,IAAMqF,CACd,CChBe,SAAS,MAAOrF,EAAO,CACpC,IAAIsV,EAEAtV,EAAM,YACRsV,EAAiB,IAAItV,EAAM,MAAM,SAAU,GAAI,CAAC,EAChDsV,EAAM,QAAWtV,EAAM,IACvBsV,EAAM,IAAW,CAAC,EAAG,CAAC,EACtBA,EAAM,SAAW,CAAA,EACjBtV,EAAM,OAAO,KAAKsV,CAAK,GAEvBtV,EAAM,GAAG,MAAM,MAAMA,EAAM,IAAKA,EAAM,GAAIA,EAAM,IAAKA,EAAM,MAAM,CAErE,CCZe,SAAS,OAAQA,EAAO,CACrC,MAAMmV,EAASnV,EAAM,OAGrB,QAAS/H,EAAI,EAAG2W,EAAIuG,EAAO,OAAQld,EAAI2W,EAAG3W,IAAK,CAC7C,MAAMuf,EAAMrC,EAAOld,CAAC,EAChBuf,EAAI,OAAS,UACfxX,EAAM,GAAG,OAAO,MAAMwX,EAAI,QAASxX,EAAM,GAAIA,EAAM,IAAKwX,EAAI,QAAQ,CAE1E,CACA,CCHA,SAASC,aAAYpS,EAAK,CACxB,MAAO,YAAY,KAAKA,CAAG,CAC7B,CACA,SAASqS,cAAarS,EAAK,CACzB,MAAO,aAAa,KAAKA,CAAG,CAC9B,CAEe,SAASsS,UAAS3X,EAAO,CACtC,MAAM4X,EAAc5X,EAAM,OAE1B,GAAKA,EAAM,GAAG,QAAQ,QAEtB,QAAS2R,EAAI,EAAG/C,EAAIgJ,EAAY,OAAQjG,EAAI/C,EAAG+C,IAAK,CAClD,GAAIiG,EAAYjG,CAAC,EAAE,OAAS,UACxB,CAAC3R,EAAM,GAAG,QAAQ,QAAQ4X,EAAYjG,CAAC,EAAE,OAAO,EAClD,SAGF,IAAIwD,EAASyC,EAAYjG,CAAC,EAAE,SAExBkG,EAAgB,EAIpB,QAAS5f,EAAIkd,EAAO,OAAS,EAAGld,GAAK,EAAGA,IAAK,CAC3C,MAAM6f,EAAe3C,EAAOld,CAAC,EAG7B,GAAI6f,EAAa,OAAS,aAAc,CAEtC,IADA7f,IACOkd,EAAOld,CAAC,EAAE,QAAU6f,EAAa,OAAS3C,EAAOld,CAAC,EAAE,OAAS,aAClEA,IAEF,QACR,CAWM,GARI6f,EAAa,OAAS,gBACpBL,aAAWK,EAAa,OAAO,GAAKD,EAAgB,GACtDA,IAEEH,cAAYI,EAAa,OAAO,GAClCD,KAGA,EAAAA,EAAgB,IAEhBC,EAAa,OAAS,QAAU9X,EAAM,GAAG,QAAQ,KAAK8X,EAAa,OAAO,EAAG,CAC/E,MAAM1gB,EAAO0gB,EAAa,QAC1B,IAAIC,EAAQ/X,EAAM,GAAG,QAAQ,MAAM5I,CAAI,EAGvC,MAAM4gB,EAAQ,CAAA,EACd,IAAI5S,EAAQ0S,EAAa,MACrBG,EAAU,EAKVF,EAAM,OAAS,GACfA,EAAM,CAAC,EAAE,QAAU,GACnB9f,EAAI,GACJkd,EAAOld,EAAI,CAAC,EAAE,OAAS,iBACzB8f,EAAQA,EAAM,MAAM,CAAC,GAGvB,QAASve,EAAK,EAAGA,EAAKue,EAAM,OAAQve,IAAM,CACxC,MAAMkV,EAAMqJ,EAAMve,CAAE,EAAE,IAChB0e,EAAUlY,EAAM,GAAG,cAAc0O,CAAG,EAC1C,GAAI,CAAC1O,EAAM,GAAG,aAAakY,CAAO,EAAK,SAEvC,IAAIC,EAAUJ,EAAMve,CAAE,EAAE,KAMnBue,EAAMve,CAAE,EAAE,OAEJue,EAAMve,CAAE,EAAE,SAAW,WAAa,CAAC,YAAY,KAAK2e,CAAO,EACpEA,EAAUnY,EAAM,GAAG,kBAAkB,UAAYmY,CAAO,EAAE,QAAQ,WAAY,EAAE,EAEhFA,EAAUnY,EAAM,GAAG,kBAAkBmY,CAAO,EAJ5CA,EAAUnY,EAAM,GAAG,kBAAkB,UAAYmY,CAAO,EAAE,QAAQ,aAAc,EAAE,EAOpF,MAAMjE,EAAM6D,EAAMve,CAAE,EAAE,MAEtB,GAAI0a,EAAM+D,EAAS,CACjB,MAAM3C,EAAU,IAAItV,EAAM,MAAM,OAAQ,GAAI,CAAC,EAC7CsV,EAAM,QAAUle,EAAK,MAAM6gB,EAAS/D,CAAG,EACvCoB,EAAM,MAAUlQ,EAChB4S,EAAM,KAAK1C,CAAK,CAC5B,CAEU,MAAM8C,EAAY,IAAIpY,EAAM,MAAM,YAAa,IAAK,CAAC,EACrDoY,EAAQ,MAAU,CAAC,CAAC,OAAQF,CAAO,CAAC,EACpCE,EAAQ,MAAUhT,IAClBgT,EAAQ,OAAU,UAClBA,EAAQ,KAAU,OAClBJ,EAAM,KAAKI,CAAO,EAElB,MAAMC,EAAY,IAAIrY,EAAM,MAAM,OAAQ,GAAI,CAAC,EAC/CqY,EAAQ,QAAUF,EAClBE,EAAQ,MAAUjT,EAClB4S,EAAM,KAAKK,CAAO,EAElB,MAAMC,EAAY,IAAItY,EAAM,MAAM,aAAc,IAAK,EAAE,EACvDsY,EAAQ,MAAU,EAAElT,EACpBkT,EAAQ,OAAU,UAClBA,EAAQ,KAAU,OAClBN,EAAM,KAAKM,CAAO,EAElBL,EAAUF,EAAMve,CAAE,EAAE,SAC9B,CACQ,GAAIye,EAAU7gB,EAAK,OAAQ,CACzB,MAAMke,EAAU,IAAItV,EAAM,MAAM,OAAQ,GAAI,CAAC,EAC7CsV,EAAM,QAAUle,EAAK,MAAM6gB,CAAO,EAClC3C,EAAM,MAAUlQ,EAChB4S,EAAM,KAAK1C,CAAK,CAC1B,CAGQsC,EAAYjG,CAAC,EAAE,SAAWwD,EAAS,eAAeA,EAAQld,EAAG+f,CAAK,CAC1E,CACA,CACA,CACA,CCtHA,MAAM,QAAU,+BAIV,oBAAsB,gBAEtB,eAAiB,iBACjB,YAAc,CAClB,EAAG,IACH,EAAG,IACH,GAAI,GACN,EAEA,SAAS,UAAWza,EAAO5F,EAAM,CAC/B,OAAO,YAAYA,EAAK,YAAa,CAAA,CACvC,CAEA,SAAS,eAAgB4gB,EAAc,CACrC,IAAIC,EAAkB,EAEtB,QAASvgB,EAAIsgB,EAAa,OAAS,EAAGtgB,GAAK,EAAGA,IAAK,CACjD,MAAMqd,EAAQiD,EAAatgB,CAAC,EAExBqd,EAAM,OAAS,QAAU,CAACkD,IAC5BlD,EAAM,QAAUA,EAAM,QAAQ,QAAQ,eAAgB,SAAS,GAG7DA,EAAM,OAAS,aAAeA,EAAM,OAAS,QAC/CkD,IAGElD,EAAM,OAAS,cAAgBA,EAAM,OAAS,QAChDkD,GAEN,CACA,CAEA,SAAS,aAAcD,EAAc,CACnC,IAAIC,EAAkB,EAEtB,QAASvgB,EAAIsgB,EAAa,OAAS,EAAGtgB,GAAK,EAAGA,IAAK,CACjD,MAAMqd,EAAQiD,EAAatgB,CAAC,EAExBqd,EAAM,OAAS,QAAU,CAACkD,GACxB,QAAQ,KAAKlD,EAAM,OAAO,IAC5BA,EAAM,QAAUA,EAAM,QACnB,QAAQ,OAAQ,GAAG,EAGnB,QAAQ,UAAW,GAAG,EAAE,QAAQ,WAAY,MAAM,EAClD,QAAQ,cAAe,QAAQ,EAAE,QAAQ,SAAU,GAAG,EAEtD,QAAQ,0BAA2B,KAAU,EAE7C,QAAQ,qBAAsB,KAAU,EACxC,QAAQ,6BAA8B,KAAU,GAInDA,EAAM,OAAS,aAAeA,EAAM,OAAS,QAC/CkD,IAGElD,EAAM,OAAS,cAAgBA,EAAM,OAAS,QAChDkD,GAEN,CACA,CAEe,SAAS,QAASxY,EAAO,CACtC,IAAIyY,EAEJ,GAAKzY,EAAM,GAAG,QAAQ,YAEtB,IAAKyY,EAASzY,EAAM,OAAO,OAAS,EAAGyY,GAAU,EAAGA,IAC9CzY,EAAM,OAAOyY,CAAM,EAAE,OAAS,WAE9B,oBAAoB,KAAKzY,EAAM,OAAOyY,CAAM,EAAE,OAAO,GACvD,eAAezY,EAAM,OAAOyY,CAAM,EAAE,QAAQ,EAG1C,QAAQ,KAAKzY,EAAM,OAAOyY,CAAM,EAAE,OAAO,GAC3C,aAAazY,EAAM,OAAOyY,CAAM,EAAE,QAAQ,EAGhD,CC/FA,MAAM,cAAgB,OAChB,SAAW,QACX,WAAa,IAEnB,SAAS,UAAWpT,EAAKxL,EAAOgD,EAAI,CAClC,OAAOwI,EAAI,MAAM,EAAGxL,CAAK,EAAIgD,EAAKwI,EAAI,MAAMxL,EAAQ,CAAC,CACvD,CAEA,SAAS,gBAAiBsb,EAAQnV,EAAO,CACvC,IAAI2R,EAEJ,MAAMvY,EAAQ,CAAA,EAEd,QAASnB,EAAI,EAAGA,EAAIkd,EAAO,OAAQld,IAAK,CACtC,MAAMqd,EAAQH,EAAOld,CAAC,EAEhBygB,EAAYvD,EAAOld,CAAC,EAAE,MAE5B,IAAK0Z,EAAIvY,EAAM,OAAS,EAAGuY,GAAK,GAC1B,EAAAvY,EAAMuY,CAAC,EAAE,OAAS+G,GADW/G,IACjC,CAIF,GAFAvY,EAAM,OAASuY,EAAI,EAEf2D,EAAM,OAAS,OAAU,SAE7B,IAAIle,EAAOke,EAAM,QACbpB,EAAM,EACNzX,EAAMrF,EAAK,OAGfuhB,EACA,KAAOzE,EAAMzX,GAAK,CAChB,SAAS,UAAYyX,EACrB,MAAMlF,EAAI,SAAS,KAAK5X,CAAI,EAC5B,GAAI,CAAC4X,EAAK,MAEV,IAAI4J,EAAU,GACVC,EAAW,GACf3E,EAAMlF,EAAE,MAAQ,EAChB,MAAM8J,EAAY9J,EAAE,CAAC,IAAM,IAK3B,IAAI+J,EAAW,GAEf,GAAI/J,EAAE,MAAQ,GAAK,EACjB+J,EAAW3hB,EAAK,WAAW4X,EAAE,MAAQ,CAAC,MAEtC,KAAK2C,EAAI1Z,EAAI,EAAG0Z,GAAK,GACf,EAAAwD,EAAOxD,CAAC,EAAE,OAAS,aAAewD,EAAOxD,CAAC,EAAE,OAAS,aADnCA,IAEtB,GAAKwD,EAAOxD,CAAC,EAAE,QAEf,CAAAoH,EAAW5D,EAAOxD,CAAC,EAAE,QAAQ,WAAWwD,EAAOxD,CAAC,EAAE,QAAQ,OAAS,CAAC,EACpE,MAOJ,IAAI3K,EAAW,GAEf,GAAIkN,EAAMzX,EACRuK,EAAW5P,EAAK,WAAW8c,CAAG,MAE9B,KAAKvC,EAAI1Z,EAAI,EAAG0Z,EAAIwD,EAAO,QACrB,EAAAA,EAAOxD,CAAC,EAAE,OAAS,aAAewD,EAAOxD,CAAC,EAAE,OAAS,aADxBA,IAEjC,GAAKwD,EAAOxD,CAAC,EAAE,QAEf,CAAA3K,EAAWmO,EAAOxD,CAAC,EAAE,QAAQ,WAAW,CAAC,EACzC,MAIJ,MAAMqH,EAAkB,eAAeD,CAAQ,GAAK,YAAY,OAAO,aAAaA,CAAQ,CAAC,EACvFE,EAAkB,eAAejS,CAAQ,GAAK,YAAY,OAAO,aAAaA,CAAQ,CAAC,EAEvFkS,EAAmB,aAAaH,CAAQ,EACxCI,EAAmB,aAAanS,CAAQ,EAqC9C,GAnCImS,EACFP,EAAU,GACDK,IACHC,GAAoBF,IACxBJ,EAAU,KAIVM,EACFL,EAAW,GACFG,IACHG,GAAoBF,IACxBJ,EAAW,KAIX7R,IAAa,IAAgBgI,EAAE,CAAC,IAAM,KACpC+J,GAAY,IAAgBA,GAAY,KAE1CF,EAAWD,EAAU,IAIrBA,GAAWC,IAQbD,EAAUI,EACVH,EAAWI,GAGT,CAACL,GAAW,CAACC,EAAU,CAErBC,IACFxD,EAAM,QAAU,UAAUA,EAAM,QAAStG,EAAE,MAAO,UAAU,GAE9D,QACR,CAEM,GAAI6J,EAEF,IAAKlH,EAAIvY,EAAM,OAAS,EAAGuY,GAAK,EAAGA,IAAK,CACtC,IAAI7B,EAAO1W,EAAMuY,CAAC,EAClB,GAAIvY,EAAMuY,CAAC,EAAE,MAAQ+G,EAAa,MAClC,GAAI5I,EAAK,SAAWgJ,GAAY1f,EAAMuY,CAAC,EAAE,QAAU+G,EAAW,CAC5D5I,EAAO1W,EAAMuY,CAAC,EAEd,IAAIyH,EACAC,EACAP,GACFM,EAAYpZ,EAAM,GAAG,QAAQ,OAAO,CAAC,EACrCqZ,EAAarZ,EAAM,GAAG,QAAQ,OAAO,CAAC,IAEtCoZ,EAAYpZ,EAAM,GAAG,QAAQ,OAAO,CAAC,EACrCqZ,EAAarZ,EAAM,GAAG,QAAQ,OAAO,CAAC,GAMxCsV,EAAM,QAAU,UAAUA,EAAM,QAAStG,EAAE,MAAOqK,CAAU,EAC5DlE,EAAOrF,EAAK,KAAK,EAAE,QAAU,UAC3BqF,EAAOrF,EAAK,KAAK,EAAE,QAASA,EAAK,IAAKsJ,CAAS,EAEjDlF,GAAOmF,EAAW,OAAS,EACvBvJ,EAAK,QAAU7X,IAAKic,GAAOkF,EAAU,OAAS,GAElDhiB,EAAOke,EAAM,QACb7Y,EAAMrF,EAAK,OAEXgC,EAAM,OAASuY,EACf,SAASgH,CACrB,CACA,CAGUC,EACFxf,EAAM,KAAK,CACT,MAAOnB,EACP,IAAK+W,EAAE,MACP,OAAQ8J,EACR,MAAOJ,CACR,CAAA,EACQG,GAAYC,IACrBxD,EAAM,QAAU,UAAUA,EAAM,QAAStG,EAAE,MAAO,UAAU,EAEpE,CACA,CACA,CAEe,SAAS,YAAahP,EAAO,CAE1C,GAAKA,EAAM,GAAG,QAAQ,YAEtB,QAASyY,EAASzY,EAAM,OAAO,OAAS,EAAGyY,GAAU,EAAGA,IAClDzY,EAAM,OAAOyY,CAAM,EAAE,OAAS,UAC9B,CAAC,cAAc,KAAKzY,EAAM,OAAOyY,CAAM,EAAE,OAAO,GAIpD,gBAAgBzY,EAAM,OAAOyY,CAAM,EAAE,SAAUzY,CAAK,CAExD,CCxLe,SAAS,UAAWA,EAAO,CACxC,IAAI+G,EAAMuS,EACV,MAAM1B,EAAc5X,EAAM,OACpB4O,EAAIgJ,EAAY,OAEtB,QAASjG,EAAI,EAAGA,EAAI/C,EAAG+C,IAAK,CAC1B,GAAIiG,EAAYjG,CAAC,EAAE,OAAS,SAAU,SAEtC,MAAMwD,EAASyC,EAAYjG,CAAC,EAAE,SACxBlV,EAAM0Y,EAAO,OAEnB,IAAKpO,EAAO,EAAGA,EAAOtK,EAAKsK,IACrBoO,EAAOpO,CAAI,EAAE,OAAS,iBACxBoO,EAAOpO,CAAI,EAAE,KAAO,QAIxB,IAAKA,EAAOuS,EAAO,EAAGvS,EAAOtK,EAAKsK,IAC5BoO,EAAOpO,CAAI,EAAE,OAAS,QACtBA,EAAO,EAAItK,GACX0Y,EAAOpO,EAAO,CAAC,EAAE,OAAS,OAE5BoO,EAAOpO,EAAO,CAAC,EAAE,QAAUoO,EAAOpO,CAAI,EAAE,QAAUoO,EAAOpO,EAAO,CAAC,EAAE,SAE/DA,IAASuS,IAAQnE,EAAOmE,CAAI,EAAInE,EAAOpO,CAAI,GAE/CuS,KAIAvS,IAASuS,IACXnE,EAAO,OAASmE,EAEtB,CACA,CCxBA,MAAMC,SAAS,CACb,CAAC,YAAkBC,SAAW,EAC9B,CAAC,QAAkBC,KAAO,EAC1B,CAAC,SAAkBC,MAAQ,EAC3B,CAAC,UAAkBC,SAAS,EAC5B,CAAC,eAAkBC,OAAc,EACjC,CAAC,cAAkBC,WAAa,EAGhC,CAAC,YAAkBC,SAAW,CAChC,EAKA,SAAS,MAAQ,CAMf,KAAK,MAAQ,IAAI,MAEjB,QAAS7hB,EAAI,EAAGA,EAAIshB,SAAO,OAAQthB,IACjC,KAAK,MAAM,KAAKshB,SAAOthB,CAAC,EAAE,CAAC,EAAGshB,SAAOthB,CAAC,EAAE,CAAC,CAAC,CAE9C,CAOA,KAAK,UAAU,QAAU,SAAU+H,EAAO,CACxC,MAAMkW,EAAQ,KAAK,MAAM,SAAS,EAAE,EAEpC,QAASje,EAAI,EAAG2W,EAAIsH,EAAM,OAAQje,EAAI2W,EAAG3W,IACvCie,EAAMje,CAAC,EAAE+H,CAAK,CAElB,EAEA,KAAK,UAAU,MAAQ,UCtDvB,SAAS,WAAYiU,EAAKtK,EAAIyL,EAAKD,EAAQ,CACzC,KAAK,IAAMlB,EAGX,KAAK,GAAStK,EAEd,KAAK,IAAMyL,EAMX,KAAK,OAASD,EAEd,KAAK,OAAS,CAAE,EAChB,KAAK,OAAS,CAAE,EAChB,KAAK,OAAS,CAAE,EAChB,KAAK,OAAS,CAAE,EAYhB,KAAK,QAAU,CAAA,EAMf,KAAK,UAAa,EAClB,KAAK,KAAa,EAClB,KAAK,QAAa,EAClB,KAAK,MAAa,GAClB,KAAK,SAAa,GAClB,KAAK,WAAa,GAIlB,KAAK,WAAa,OAElB,KAAK,MAAQ,EAIb,MAAM4E,EAAI,KAAK,IAEf,QAAS9e,EAAQ,EAAGiZ,EAAM,EAAGpZ,EAAS,EAAG+X,EAAS,EAAG7a,EAAM+hB,EAAE,OAAQC,EAAe,GAAO9F,EAAMlc,EAAKkc,IAAO,CAC3G,MAAMrX,EAAKkd,EAAE,WAAW7F,CAAG,EAE3B,GAAI,CAAC8F,EACH,GAAI,QAAQnd,CAAE,EAAG,CACf/B,IAEI+B,IAAO,EACTgW,GAAU,EAAIA,EAAS,EAEvBA,IAEF,QACR,MACQmH,EAAe,IAIfnd,IAAO,IAAQqX,IAAQlc,EAAM,KAC3B6E,IAAO,IAAQqX,IACnB,KAAK,OAAO,KAAKjZ,CAAK,EACtB,KAAK,OAAO,KAAKiZ,CAAG,EACpB,KAAK,OAAO,KAAKpZ,CAAM,EACvB,KAAK,OAAO,KAAK+X,CAAM,EACvB,KAAK,QAAQ,KAAK,CAAC,EAEnBmH,EAAe,GACflf,EAAS,EACT+X,EAAS,EACT5X,EAAQiZ,EAAM,EAEpB,CAGE,KAAK,OAAO,KAAK6F,EAAE,MAAM,EACzB,KAAK,OAAO,KAAKA,EAAE,MAAM,EACzB,KAAK,OAAO,KAAK,CAAC,EAClB,KAAK,OAAO,KAAK,CAAC,EAClB,KAAK,QAAQ,KAAK,CAAC,EAEnB,KAAK,QAAU,KAAK,OAAO,OAAS,CACtC,CAIA,WAAW,UAAU,KAAO,SAAUtiB,EAAMiE,EAAKsb,EAAS,CACxD,MAAM1B,EAAQ,IAAI,MAAM7d,EAAMiE,EAAKsb,CAAO,EAC1C,OAAA1B,EAAM,MAAQ,GAEV0B,EAAU,GAAG,KAAK,QACtB1B,EAAM,MAAQ,KAAK,MACf0B,EAAU,GAAG,KAAK,QAEtB,KAAK,OAAO,KAAK1B,CAAK,EACfA,CACT,EAEA,WAAW,UAAU,QAAU,SAAS2E,EAAS1gB,EAAM,CACrD,OAAO,KAAK,OAAOA,CAAI,EAAI,KAAK,OAAOA,CAAI,GAAK,KAAK,OAAOA,CAAI,CAClE,EAEA,WAAW,UAAU,eAAiB,SAAS2gB,EAAgBC,EAAM,CACnE,QAAS1d,EAAM,KAAK,QAAS0d,EAAO1d,GAC9B,OAAK,OAAO0d,CAAI,EAAI,KAAK,OAAOA,CAAI,EAAI,KAAK,OAAOA,CAAI,GADrBA,IACvC,CAIF,OAAOA,CACT,EAGA,WAAW,UAAU,WAAa,SAASC,EAAYlG,EAAK,CAC1D,QAASzX,EAAM,KAAK,IAAI,OAAQyX,EAAMzX,EAAKyX,IAAO,CAChD,MAAMrX,EAAK,KAAK,IAAI,WAAWqX,CAAG,EAClC,GAAI,CAAC,QAAQrX,CAAE,EAAK,KACxB,CACE,OAAOqX,CACT,EAGA,WAAW,UAAU,eAAiB,SAASmG,EAAgBnG,EAAKoG,EAAK,CACvE,GAAIpG,GAAOoG,EAAO,OAAOpG,EAEzB,KAAOA,EAAMoG,GACX,GAAI,CAAC,QAAQ,KAAK,IAAI,WAAW,EAAEpG,CAAG,CAAC,EAAK,OAAOA,EAAM,EAE3D,OAAOA,CACT,EAGA,WAAW,UAAU,UAAY,SAASqG,EAAWrG,EAAK7V,EAAM,CAC9D,QAAS5B,EAAM,KAAK,IAAI,OAAQyX,EAAMzX,GAChC,KAAK,IAAI,WAAWyX,CAAG,IAAM7V,EADQ6V,IACzC,CAEF,OAAOA,CACT,EAGA,WAAW,UAAU,cAAgB,SAASsG,EAAetG,EAAK7V,EAAMic,EAAK,CAC3E,GAAIpG,GAAOoG,EAAO,OAAOpG,EAEzB,KAAOA,EAAMoG,GACX,GAAIjc,IAAS,KAAK,IAAI,WAAW,EAAE6V,CAAG,EAAK,OAAOA,EAAM,EAE1D,OAAOA,CACT,EAGA,WAAW,UAAU,SAAW,SAASuG,EAAUC,EAAOvf,EAAKL,EAAQ6f,EAAY,CACjF,GAAID,GAASvf,EACX,MAAO,GAGT,MAAMyf,EAAQ,IAAI,MAAMzf,EAAMuf,CAAK,EAEnC,QAASziB,EAAI,EAAGsB,EAAOmhB,EAAOnhB,EAAO4B,EAAK5B,IAAQtB,IAAK,CACrD,IAAI4iB,EAAa,EACjB,MAAMC,EAAY,KAAK,OAAOvhB,CAAI,EAClC,IAAIwhB,EAAQD,EACRxB,EASJ,IAPI/f,EAAO,EAAI4B,GAAOwf,EAEpBrB,EAAO,KAAK,OAAO/f,CAAI,EAAI,EAE3B+f,EAAO,KAAK,OAAO/f,CAAI,EAGlBwhB,EAAQzB,GAAQuB,EAAa/f,GAAQ,CAC1C,MAAM+B,EAAK,KAAK,IAAI,WAAWke,CAAK,EAEpC,GAAI,QAAQle,CAAE,EACRA,IAAO,EACTge,GAAc,GAAKA,EAAa,KAAK,QAAQthB,CAAI,GAAK,EAEtDshB,YAEOE,EAAQD,EAAY,KAAK,OAAOvhB,CAAI,EAE7CshB,QAEA,OAGFE,GACN,CAEQF,EAAa/f,EAGf8f,EAAM3iB,CAAC,EAAI,IAAI,MAAM4iB,EAAa/f,EAAS,CAAC,EAAE,KAAK,GAAG,EAAI,KAAK,IAAI,MAAMigB,EAAOzB,CAAI,EAEpFsB,EAAM3iB,CAAC,EAAI,KAAK,IAAI,MAAM8iB,EAAOzB,CAAI,CAE3C,CAEE,OAAOsB,EAAM,KAAK,EAAE,CACtB,EAGA,WAAW,UAAU,MAAQ,MC/M7B,MAAM,wBAA0B,MAEhC,SAAS,QAAS5a,EAAOzG,EAAM,CAC7B,MAAM2a,EAAMlU,EAAM,OAAOzG,CAAI,EAAIyG,EAAM,OAAOzG,CAAI,EAC5CkD,EAAMuD,EAAM,OAAOzG,CAAI,EAE7B,OAAOyG,EAAM,IAAI,MAAMkU,EAAKzX,CAAG,CACjC,CAEA,SAAS,aAAc4I,EAAK,CAC1B,MAAMnL,EAAS,CAAA,EACTuC,EAAM4I,EAAI,OAEhB,IAAI6O,EAAM,EACNrX,EAAKwI,EAAI,WAAW6O,CAAG,EACvB8G,EAAY,GACZ/C,EAAU,EACV/E,EAAU,GAEd,KAAOgB,EAAMzX,GACPI,IAAO,MACJme,GAOH9H,GAAW7N,EAAI,UAAU4S,EAAS/D,EAAM,CAAC,EACzC+D,EAAU/D,IANVha,EAAO,KAAKgZ,EAAU7N,EAAI,UAAU4S,EAAS/D,CAAG,CAAC,EACjDhB,EAAU,GACV+E,EAAU/D,EAAM,IAQpB8G,EAAane,IAAO,GACpBqX,IAEArX,EAAKwI,EAAI,WAAW6O,CAAG,EAGzB,OAAAha,EAAO,KAAKgZ,EAAU7N,EAAI,UAAU4S,CAAO,CAAC,EAErC/d,CACT,CAEe,SAAS,MAAO8F,EAAOkB,EAAW+Z,EAASC,EAAQ,CAEhE,GAAIha,EAAY,EAAI+Z,EAAW,MAAO,GAEtC,IAAIE,EAAWja,EAAY,EAK3B,GAHIlB,EAAM,OAAOmb,CAAQ,EAAInb,EAAM,WAG/BA,EAAM,OAAOmb,CAAQ,EAAInb,EAAM,WAAa,EAAK,MAAO,GAM5D,IAAIkU,EAAMlU,EAAM,OAAOmb,CAAQ,EAAInb,EAAM,OAAOmb,CAAQ,EACxD,GAAIjH,GAAOlU,EAAM,OAAOmb,CAAQ,EAAK,MAAO,GAE5C,MAAMC,EAAUpb,EAAM,IAAI,WAAWkU,GAAK,EAG1C,GAFIkH,IAAY,KAAeA,IAAY,IAAeA,IAAY,IAElElH,GAAOlU,EAAM,OAAOmb,CAAQ,EAAK,MAAO,GAE5C,MAAME,EAAWrb,EAAM,IAAI,WAAWkU,GAAK,EAO3C,GANImH,IAAa,KAAeA,IAAa,IAAeA,IAAa,IAAe,CAAC,QAAQA,CAAQ,GAMrGD,IAAY,IAAe,QAAQC,CAAQ,EAAK,MAAO,GAE3D,KAAOnH,EAAMlU,EAAM,OAAOmb,CAAQ,GAAG,CACnC,MAAMte,EAAKmD,EAAM,IAAI,WAAWkU,CAAG,EAEnC,GAAIrX,IAAO,KAAeA,IAAO,IAAeA,IAAO,IAAe,CAAC,QAAQA,CAAE,EAAK,MAAO,GAE7FqX,GACJ,CAEE,IAAIoH,EAAW,QAAQtb,EAAOkB,EAAY,CAAC,EACvCqa,EAAUD,EAAS,MAAM,GAAG,EAChC,MAAME,EAAS,CAAA,EACf,QAASvjB,EAAI,EAAGA,EAAIsjB,EAAQ,OAAQtjB,IAAK,CACvC,MAAM+W,EAAIuM,EAAQtjB,CAAC,EAAE,KAAI,EACzB,GAAI,CAAC+W,EAAG,CAGN,GAAI/W,IAAM,GAAKA,IAAMsjB,EAAQ,OAAS,EACpC,SAEA,MAAO,EAEf,CAEI,GAAI,CAAC,WAAW,KAAKvM,CAAC,EAAK,MAAO,GAC9BA,EAAE,WAAWA,EAAE,OAAS,CAAC,IAAM,GACjCwM,EAAO,KAAKxM,EAAE,WAAW,CAAC,IAAM,GAAc,SAAW,OAAO,EACvDA,EAAE,WAAW,CAAC,IAAM,GAC7BwM,EAAO,KAAK,MAAM,EAElBA,EAAO,KAAK,EAAE,CAEpB,CAIE,GAFAF,EAAW,QAAQtb,EAAOkB,CAAS,EAAE,KAAI,EACrCoa,EAAS,QAAQ,GAAG,IAAM,IAC1Btb,EAAM,OAAOkB,CAAS,EAAIlB,EAAM,WAAa,EAAK,MAAO,GAC7Dub,EAAU,aAAaD,CAAQ,EAC3BC,EAAQ,QAAUA,EAAQ,CAAC,IAAM,IAAIA,EAAQ,MAAK,EAClDA,EAAQ,QAAUA,EAAQA,EAAQ,OAAS,CAAC,IAAM,IAAIA,EAAQ,IAAG,EAIrE,MAAME,EAAcF,EAAQ,OAC5B,GAAIE,IAAgB,GAAKA,IAAgBD,EAAO,OAAU,MAAO,GAEjE,GAAIN,EAAU,MAAO,GAErB,MAAMQ,EAAgB1b,EAAM,WAC5BA,EAAM,WAAa,QAInB,MAAM2b,EAAkB3b,EAAM,GAAG,MAAM,MAAM,SAAS,YAAY,EAE5D4b,EAAW5b,EAAM,KAAK,aAAc,QAAS,CAAC,EAC9C6b,EAAa,CAAC3a,EAAW,CAAC,EAChC0a,EAAS,IAAMC,EAEf,MAAMC,EAAY9b,EAAM,KAAK,aAAc,QAAS,CAAC,EACrD8b,EAAU,IAAM,CAAC5a,EAAWA,EAAY,CAAC,EAEzC,MAAM6a,EAAa/b,EAAM,KAAK,UAAW,KAAM,CAAC,EAChD+b,EAAW,IAAM,CAAC7a,EAAWA,EAAY,CAAC,EAE1C,QAASjJ,EAAI,EAAGA,EAAIsjB,EAAQ,OAAQtjB,IAAK,CACvC,MAAM+jB,EAAWhc,EAAM,KAAK,UAAW,KAAM,CAAC,EAC1Cwb,EAAOvjB,CAAC,IACV+jB,EAAS,MAAS,CAAC,CAAC,QAAS,cAAgBR,EAAOvjB,CAAC,CAAC,CAAC,GAGzD,MAAMgkB,EAAWjc,EAAM,KAAK,SAAU,GAAI,CAAC,EAC3Cic,EAAS,QAAWV,EAAQtjB,CAAC,EAAE,KAAI,EACnCgkB,EAAS,SAAW,CAAA,EAEpBjc,EAAM,KAAK,WAAY,KAAM,EAAE,CACnC,CAEEA,EAAM,KAAK,WAAY,KAAM,EAAE,EAC/BA,EAAM,KAAK,cAAe,QAAS,EAAE,EAErC,IAAIkc,EACAC,EAAqB,EAEzB,IAAKhB,EAAWja,EAAY,EAAGia,EAAWF,GACpC,EAAAjb,EAAM,OAAOmb,CAAQ,EAAInb,EAAM,WADcmb,IAAY,CAG7D,IAAIiB,EAAY,GAChB,QAASnkB,EAAI,EAAG2W,EAAI+M,EAAgB,OAAQ1jB,EAAI2W,EAAG3W,IACjD,GAAI0jB,EAAgB1jB,CAAC,EAAE+H,EAAOmb,EAAUF,EAAS,EAAI,EAAG,CACtDmB,EAAY,GACZ,KACR,CAcI,GAXIA,IACJd,EAAW,QAAQtb,EAAOmb,CAAQ,EAAE,KAAI,EACpC,CAACG,IACDtb,EAAM,OAAOmb,CAAQ,EAAInb,EAAM,WAAa,IAChDub,EAAU,aAAaD,CAAQ,EAC3BC,EAAQ,QAAUA,EAAQ,CAAC,IAAM,IAAIA,EAAQ,MAAK,EAClDA,EAAQ,QAAUA,EAAQA,EAAQ,OAAS,CAAC,IAAM,IAAIA,EAAQ,IAAG,EAIrEY,GAAsBV,EAAcF,EAAQ,OACxCY,EAAqB,yBAA2B,MAEpD,GAAIhB,IAAaja,EAAY,EAAG,CAC9B,MAAMmb,EAAYrc,EAAM,KAAK,aAAc,QAAS,CAAC,EACrDqc,EAAU,IAAMH,EAAa,CAAChb,EAAY,EAAG,CAAC,CACpD,CAEI,MAAMob,EAAYtc,EAAM,KAAK,UAAW,KAAM,CAAC,EAC/Csc,EAAU,IAAM,CAACnB,EAAUA,EAAW,CAAC,EAEvC,QAASljB,EAAI,EAAGA,EAAIwjB,EAAaxjB,IAAK,CACpC,MAAMskB,EAAYvc,EAAM,KAAK,UAAW,KAAM,CAAC,EAC3Cwb,EAAOvjB,CAAC,IACVskB,EAAU,MAAS,CAAC,CAAC,QAAS,cAAgBf,EAAOvjB,CAAC,CAAC,CAAC,GAG1D,MAAMgkB,EAAWjc,EAAM,KAAK,SAAU,GAAI,CAAC,EAC3Cic,EAAS,QAAWV,EAAQtjB,CAAC,EAAIsjB,EAAQtjB,CAAC,EAAE,OAAS,GACrDgkB,EAAS,SAAW,CAAA,EAEpBjc,EAAM,KAAK,WAAY,KAAM,EAAE,CACrC,CACIA,EAAM,KAAK,WAAY,KAAM,EAAE,CACnC,CAEE,OAAIkc,IACFlc,EAAM,KAAK,cAAe,QAAS,EAAE,EACrCkc,EAAW,CAAC,EAAIf,GAGlBnb,EAAM,KAAK,cAAe,QAAS,EAAE,EACrC6b,EAAW,CAAC,EAAIV,EAEhBnb,EAAM,WAAa0b,EACnB1b,EAAM,KAAOmb,EACN,EACT,CCjOe,SAAS,KAAMnb,EAAOkB,EAAW+Z,EAAsB,CACpE,GAAIjb,EAAM,OAAOkB,CAAS,EAAIlB,EAAM,UAAY,EAAK,MAAO,GAE5D,IAAImb,EAAWja,EAAY,EACvBoY,EAAO6B,EAEX,KAAOA,EAAWF,GAAS,CACzB,GAAIjb,EAAM,QAAQmb,CAAQ,EAAG,CAC3BA,IACA,QACN,CAEI,GAAInb,EAAM,OAAOmb,CAAQ,EAAInb,EAAM,WAAa,EAAG,CACjDmb,IACA7B,EAAO6B,EACP,QACN,CACI,KACJ,CAEEnb,EAAM,KAAOsZ,EAEb,MAAMhE,EAAUtV,EAAM,KAAK,aAAc,OAAQ,CAAC,EAClD,OAAAsV,EAAM,QAAUtV,EAAM,SAASkB,EAAWoY,EAAM,EAAItZ,EAAM,UAAW,EAAK,EAAI;AAAA,EAC9EsV,EAAM,IAAU,CAACpU,EAAWlB,EAAM,IAAI,EAE/B,EACT,CC3Be,SAAS,MAAOA,EAAOkB,EAAW+Z,EAASC,EAAQ,CAChE,IAAIhH,EAAMlU,EAAM,OAAOkB,CAAS,EAAIlB,EAAM,OAAOkB,CAAS,EACtDzE,EAAMuD,EAAM,OAAOkB,CAAS,EAKhC,GAFIlB,EAAM,OAAOkB,CAAS,EAAIlB,EAAM,WAAa,GAE7CkU,EAAM,EAAIzX,EAAO,MAAO,GAE5B,MAAMqY,EAAS9U,EAAM,IAAI,WAAWkU,CAAG,EAEvC,GAAIY,IAAW,KAAeA,IAAW,GACvC,MAAO,GAIT,IAAI0H,EAAMtI,EACVA,EAAMlU,EAAM,UAAUkU,EAAKY,CAAM,EAEjC,IAAI9c,EAAMkc,EAAMsI,EAEhB,GAAIxkB,EAAM,EAAK,MAAO,GAEtB,MAAMykB,EAASzc,EAAM,IAAI,MAAMwc,EAAKtI,CAAG,EACjC3U,EAASS,EAAM,IAAI,MAAMkU,EAAKzX,CAAG,EAEvC,GAAIqY,IAAW,IACTvV,EAAO,QAAQ,OAAO,aAAauV,CAAM,CAAC,GAAK,EACjD,MAAO,GAKX,GAAIoG,EAAU,MAAO,GAGrB,IAAIC,EAAWja,EACXwb,EAAgB,GAEpB,KACEvB,IACI,EAAAA,GAAYF,IAMhB/G,EAAMsI,EAAMxc,EAAM,OAAOmb,CAAQ,EAAInb,EAAM,OAAOmb,CAAQ,EAC1D1e,EAAMuD,EAAM,OAAOmb,CAAQ,EAEvBjH,EAAMzX,GAAOuD,EAAM,OAAOmb,CAAQ,EAAInb,EAAM,aAOhD,GAAIA,EAAM,IAAI,WAAWkU,CAAG,IAAMY,GAE9B,EAAA9U,EAAM,OAAOmb,CAAQ,EAAInb,EAAM,WAAa,KAKhDkU,EAAMlU,EAAM,UAAUkU,EAAKY,CAAM,EAG7B,EAAAZ,EAAMsI,EAAMxkB,KAGhBkc,EAAMlU,EAAM,WAAWkU,CAAG,EAEtB,EAAAA,EAAMzX,KAEV,CAAAigB,EAAgB,GAEhB,MAIF1kB,EAAMgI,EAAM,OAAOkB,CAAS,EAE5BlB,EAAM,KAAOmb,GAAYuB,EAAgB,EAAI,GAE7C,MAAMpH,EAAUtV,EAAM,KAAK,QAAS,OAAQ,CAAC,EAC7C,OAAAsV,EAAM,KAAU/V,EAChB+V,EAAM,QAAUtV,EAAM,SAASkB,EAAY,EAAGia,EAAUnjB,EAAK,EAAI,EACjEsd,EAAM,OAAUmH,EAChBnH,EAAM,IAAU,CAACpU,EAAWlB,EAAM,IAAI,EAE/B,EACT,CCzFe,SAAS,WAAYA,EAAOkB,EAAW+Z,EAASC,EAAQ,CACrE,IAAIhH,EAAMlU,EAAM,OAAOkB,CAAS,EAAIlB,EAAM,OAAOkB,CAAS,EACtDzE,EAAMuD,EAAM,OAAOkB,CAAS,EAEhC,MAAMyb,EAAa3c,EAAM,QAMzB,GAHIA,EAAM,OAAOkB,CAAS,EAAIlB,EAAM,WAAa,GAG7CA,EAAM,IAAI,WAAWkU,CAAG,IAAM,GAAe,MAAO,GAIxD,GAAIgH,EAAU,MAAO,GAErB,MAAM0B,EAAa,CAAA,EACbC,EAAa,CAAA,EACbC,EAAa,CAAA,EACbC,EAAa,CAAA,EAEbpB,EAAkB3b,EAAM,GAAG,MAAM,MAAM,SAAS,YAAY,EAE5D0b,EAAgB1b,EAAM,WAC5BA,EAAM,WAAa,aACnB,IAAIgd,EAAgB,GAChB7B,EAoBJ,IAAKA,EAAWja,EAAWia,EAAWF,EAASE,IAAY,CASzD,MAAM8B,EAAcjd,EAAM,OAAOmb,CAAQ,EAAInb,EAAM,UAKnD,GAHAkU,EAAMlU,EAAM,OAAOmb,CAAQ,EAAInb,EAAM,OAAOmb,CAAQ,EACpD1e,EAAMuD,EAAM,OAAOmb,CAAQ,EAEvBjH,GAAOzX,EAET,MAGF,GAAIuD,EAAM,IAAI,WAAWkU,GAAK,IAAM,IAAe,CAAC+I,EAAa,CAI/D,IAAIC,EAAUld,EAAM,OAAOmb,CAAQ,EAAI,EACnCgC,EACAC,EAGApd,EAAM,IAAI,WAAWkU,CAAG,IAAM,IAGhCA,IACAgJ,IACAE,EAAY,GACZD,EAAmB,IACVnd,EAAM,IAAI,WAAWkU,CAAG,IAAM,GACvCiJ,EAAmB,IAEdnd,EAAM,QAAQmb,CAAQ,EAAI+B,GAAW,IAAM,GAG9ChJ,IACAgJ,IACAE,EAAY,IAKZA,EAAY,IAGdD,EAAmB,GAGrB,IAAItK,EAASqK,EAIb,IAHAN,EAAU,KAAK5c,EAAM,OAAOmb,CAAQ,CAAC,EACrCnb,EAAM,OAAOmb,CAAQ,EAAIjH,EAElBA,EAAMzX,GAAK,CAChB,MAAMI,EAAKmD,EAAM,IAAI,WAAWkU,CAAG,EAEnC,GAAI,QAAQrX,CAAE,EACRA,IAAO,EACTgW,GAAU,GAAKA,EAAS7S,EAAM,QAAQmb,CAAQ,GAAKiC,EAAY,EAAI,IAAM,EAEzEvK,QAGF,OAGFqB,GACR,CAEM8I,EAAgB9I,GAAOzX,EAEvBogB,EAAW,KAAK7c,EAAM,QAAQmb,CAAQ,CAAC,EACvCnb,EAAM,QAAQmb,CAAQ,EAAInb,EAAM,OAAOmb,CAAQ,EAAI,GAAKgC,EAAmB,EAAI,GAE/EL,EAAU,KAAK9c,EAAM,OAAOmb,CAAQ,CAAC,EACrCnb,EAAM,OAAOmb,CAAQ,EAAItI,EAASqK,EAElCH,EAAU,KAAK/c,EAAM,OAAOmb,CAAQ,CAAC,EACrCnb,EAAM,OAAOmb,CAAQ,EAAIjH,EAAMlU,EAAM,OAAOmb,CAAQ,EACpD,QACN,CAGI,GAAI6B,EAAiB,MAGrB,IAAIZ,EAAY,GAChB,QAASnkB,EAAI,EAAG2W,EAAI+M,EAAgB,OAAQ1jB,EAAI2W,EAAG3W,IACjD,GAAI0jB,EAAgB1jB,CAAC,EAAE+H,EAAOmb,EAAUF,EAAS,EAAI,EAAG,CACtDmB,EAAY,GACZ,KACR,CAGI,GAAIA,EAAW,CAKbpc,EAAM,QAAUmb,EAEZnb,EAAM,YAAc,IAItB4c,EAAU,KAAK5c,EAAM,OAAOmb,CAAQ,CAAC,EACrC0B,EAAW,KAAK7c,EAAM,QAAQmb,CAAQ,CAAC,EACvC4B,EAAU,KAAK/c,EAAM,OAAOmb,CAAQ,CAAC,EACrC2B,EAAU,KAAK9c,EAAM,OAAOmb,CAAQ,CAAC,EACrCnb,EAAM,OAAOmb,CAAQ,GAAKnb,EAAM,WAGlC,KACN,CAEI4c,EAAU,KAAK5c,EAAM,OAAOmb,CAAQ,CAAC,EACrC0B,EAAW,KAAK7c,EAAM,QAAQmb,CAAQ,CAAC,EACvC4B,EAAU,KAAK/c,EAAM,OAAOmb,CAAQ,CAAC,EACrC2B,EAAU,KAAK9c,EAAM,OAAOmb,CAAQ,CAAC,EAIrCnb,EAAM,OAAOmb,CAAQ,EAAI,EAC7B,CAEE,MAAMkC,EAAYrd,EAAM,UACxBA,EAAM,UAAY,EAElB,MAAMoY,EAAWpY,EAAM,KAAK,kBAAmB,aAAc,CAAC,EAC9DoY,EAAQ,OAAS,IACjB,MAAMpf,EAAQ,CAACkI,EAAW,CAAC,EAC3BkX,EAAQ,IAASpf,EAEjBgH,EAAM,GAAG,MAAM,SAASA,EAAOkB,EAAWia,CAAQ,EAElD,MAAM7C,EAAWtY,EAAM,KAAK,mBAAoB,aAAc,EAAE,EAChEsY,EAAQ,OAAS,IAEjBtY,EAAM,QAAU2c,EAChB3c,EAAM,WAAa0b,EACnB1iB,EAAM,CAAC,EAAIgH,EAAM,KAIjB,QAAS/H,EAAI,EAAGA,EAAI8kB,EAAU,OAAQ9kB,IACpC+H,EAAM,OAAO/H,EAAIiJ,CAAS,EAAI0b,EAAU3kB,CAAC,EACzC+H,EAAM,OAAO/H,EAAIiJ,CAAS,EAAI6b,EAAU9kB,CAAC,EACzC+H,EAAM,OAAO/H,EAAIiJ,CAAS,EAAI4b,EAAU7kB,CAAC,EACzC+H,EAAM,QAAQ/H,EAAIiJ,CAAS,EAAI2b,EAAW5kB,CAAC,EAE7C,OAAA+H,EAAM,UAAYqd,EAEX,EACT,CC5Me,SAAS,GAAIrd,EAAOkB,EAAW+Z,EAASC,EAAQ,CAC7D,MAAMze,EAAMuD,EAAM,OAAOkB,CAAS,EAElC,GAAIlB,EAAM,OAAOkB,CAAS,EAAIlB,EAAM,WAAa,EAAK,MAAO,GAE7D,IAAIkU,EAAMlU,EAAM,OAAOkB,CAAS,EAAIlB,EAAM,OAAOkB,CAAS,EAC1D,MAAM4T,EAAS9U,EAAM,IAAI,WAAWkU,GAAK,EAGzC,GAAIY,IAAW,IACXA,IAAW,IACXA,IAAW,GACb,MAAO,GAKT,IAAIwI,EAAM,EACV,KAAOpJ,EAAMzX,GAAK,CAChB,MAAMI,EAAKmD,EAAM,IAAI,WAAWkU,GAAK,EACrC,GAAIrX,IAAOiY,GAAU,CAAC,QAAQjY,CAAE,EAAK,MAAO,GACxCA,IAAOiY,GAAUwI,GACzB,CAEE,GAAIA,EAAM,EAAK,MAAO,GAEtB,GAAIpC,EAAU,MAAO,GAErBlb,EAAM,KAAOkB,EAAY,EAEzB,MAAMoU,EAAStV,EAAM,KAAK,KAAM,KAAM,CAAC,EACvC,OAAAsV,EAAM,IAAS,CAACpU,EAAWlB,EAAM,IAAI,EACrCsV,EAAM,OAAS,MAAMgI,EAAM,CAAC,EAAE,KAAK,OAAO,aAAaxI,CAAM,CAAC,EAEvD,EACT,CCjCA,SAAS,qBAAsB9U,EAAOkB,EAAW,CAC/C,MAAMzE,EAAMuD,EAAM,OAAOkB,CAAS,EAClC,IAAIgT,EAAMlU,EAAM,OAAOkB,CAAS,EAAIlB,EAAM,OAAOkB,CAAS,EAE1D,MAAM4T,EAAS9U,EAAM,IAAI,WAAWkU,GAAK,EAEzC,GAAIY,IAAW,IACXA,IAAW,IACXA,IAAW,GACb,MAAO,GAGT,GAAIZ,EAAMzX,EAAK,CACb,MAAMI,EAAKmD,EAAM,IAAI,WAAWkU,CAAG,EAEnC,GAAI,CAAC,QAAQrX,CAAE,EAEb,MAAO,EAEb,CAEE,OAAOqX,CACT,CAIA,SAAS,sBAAuBlU,EAAOkB,EAAW,CAChD,MAAMjG,EAAQ+E,EAAM,OAAOkB,CAAS,EAAIlB,EAAM,OAAOkB,CAAS,EACxDzE,EAAMuD,EAAM,OAAOkB,CAAS,EAClC,IAAIgT,EAAMjZ,EAGV,GAAIiZ,EAAM,GAAKzX,EAAO,MAAO,GAE7B,IAAII,EAAKmD,EAAM,IAAI,WAAWkU,GAAK,EAEnC,GAAIrX,EAAK,IAAeA,EAAK,GAAe,MAAO,GAEnD,OAAS,CAEP,GAAIqX,GAAOzX,EAAO,MAAO,GAIzB,GAFAI,EAAKmD,EAAM,IAAI,WAAWkU,GAAK,EAE3BrX,GAAM,IAAeA,GAAM,GAAa,CAG1C,GAAIqX,EAAMjZ,GAAS,GAAM,MAAO,GAEhC,QACN,CAGI,GAAI4B,IAAO,IAAeA,IAAO,GAC/B,MAGF,MAAO,EACX,CAEE,OAAIqX,EAAMzX,IACRI,EAAKmD,EAAM,IAAI,WAAWkU,CAAG,EAEzB,CAAC,QAAQrX,CAAE,GAEN,GAGJqX,CACT,CAEA,SAAS,oBAAqBlU,EAAO1B,EAAK,CACxC,MAAM8G,EAAQpF,EAAM,MAAQ,EAE5B,QAAS/H,EAAIqG,EAAM,EAAGsQ,EAAI5O,EAAM,OAAO,OAAS,EAAG/H,EAAI2W,EAAG3W,IACpD+H,EAAM,OAAO/H,CAAC,EAAE,QAAUmN,GAASpF,EAAM,OAAO/H,CAAC,EAAE,OAAS,mBAC9D+H,EAAM,OAAO/H,EAAI,CAAC,EAAE,OAAS,GAC7B+H,EAAM,OAAO/H,CAAC,EAAE,OAAS,GACzBA,GAAK,EAGX,CAEe,SAAS,KAAM+H,EAAOkB,EAAW+Z,EAASC,EAAQ,CAC/D,IAAIze,EAAKyX,EAAKjZ,EAAOqa,EACjB6F,EAAWja,EACXqc,EAAQ,GAWZ,GARIvd,EAAM,OAAOmb,CAAQ,EAAInb,EAAM,WAAa,GAQ5CA,EAAM,YAAc,GACpBA,EAAM,OAAOmb,CAAQ,EAAInb,EAAM,YAAc,GAC7CA,EAAM,OAAOmb,CAAQ,EAAInb,EAAM,UACjC,MAAO,GAGT,IAAIwd,EAAyB,GAIzBtC,GAAUlb,EAAM,aAAe,aAM7BA,EAAM,OAAOmb,CAAQ,GAAKnb,EAAM,YAClCwd,EAAyB,IAK7B,IAAIC,EACAC,EACAC,EACJ,IAAKA,EAAiB,sBAAsB3d,EAAOmb,CAAQ,IAAM,GAO/D,GANAsC,EAAY,GACZxiB,EAAQ+E,EAAM,OAAOmb,CAAQ,EAAInb,EAAM,OAAOmb,CAAQ,EACtDuC,EAAc,OAAO1d,EAAM,IAAI,MAAM/E,EAAO0iB,EAAiB,CAAC,CAAC,EAI3DH,GAA0BE,IAAgB,EAAG,MAAO,YAC9CC,EAAiB,qBAAqB3d,EAAOmb,CAAQ,IAAM,EACrEsC,EAAY,OAEZ,OAAO,GAKT,GAAID,GACExd,EAAM,WAAW2d,CAAc,GAAK3d,EAAM,OAAOmb,CAAQ,EAAG,MAAO,GAIzE,GAAID,EAAU,MAAO,GAGrB,MAAM0C,EAAiB5d,EAAM,IAAI,WAAW2d,EAAiB,CAAC,EAGxDE,EAAa7d,EAAM,OAAO,OAE5Byd,GACFnI,EAActV,EAAM,KAAK,oBAAqB,KAAM,CAAC,EACjD0d,IAAgB,IAClBpI,EAAM,MAAQ,CAAC,CAAC,QAASoI,CAAW,CAAC,IAGvCpI,EAActV,EAAM,KAAK,mBAAoB,KAAM,CAAC,EAGtD,MAAM8d,EAAY,CAAC3C,EAAU,CAAC,EAC9B7F,EAAM,IAASwI,EACfxI,EAAM,OAAS,OAAO,aAAasI,CAAc,EAMjD,IAAIG,EAAe,GACnB,MAAMpC,EAAkB3b,EAAM,GAAG,MAAM,MAAM,SAAS,MAAM,EAEtD0b,EAAgB1b,EAAM,WAG5B,IAFAA,EAAM,WAAa,OAEZmb,EAAWF,GAAS,CACzB/G,EAAMyJ,EACNlhB,EAAMuD,EAAM,OAAOmb,CAAQ,EAE3B,MAAM+B,EAAUld,EAAM,OAAOmb,CAAQ,EAAIwC,GAAkB3d,EAAM,OAAOmb,CAAQ,EAAInb,EAAM,OAAOmb,CAAQ,GACzG,IAAItI,EAASqK,EAEb,KAAOhJ,EAAMzX,GAAK,CAChB,MAAMI,EAAKmD,EAAM,IAAI,WAAWkU,CAAG,EAEnC,GAAIrX,IAAO,EACTgW,GAAU,GAAKA,EAAS7S,EAAM,QAAQmb,CAAQ,GAAK,UAC1Cte,IAAO,GAChBgW,QAEA,OAGFqB,GACN,CAEI,MAAM8J,EAAe9J,EACrB,IAAI+J,EAEAD,GAAgBvhB,EAElBwhB,EAAoB,EAEpBA,EAAoBpL,EAASqK,EAK3Be,EAAoB,IAAKA,EAAoB,GAIjD,MAAMnjB,EAASoiB,EAAUe,EAGzB3I,EAAetV,EAAM,KAAK,iBAAkB,KAAM,CAAC,EACnDsV,EAAM,OAAS,OAAO,aAAasI,CAAc,EACjD,MAAMM,EAAY,CAAC/C,EAAU,CAAC,EAC9B7F,EAAM,IAAS4I,EACXT,IACFnI,EAAM,KAAOtV,EAAM,IAAI,MAAM/E,EAAO0iB,EAAiB,CAAC,GAIxD,MAAMQ,EAAWne,EAAM,MACjB+c,EAAY/c,EAAM,OAAOmb,CAAQ,EACjC2B,EAAY9c,EAAM,OAAOmb,CAAQ,EAMjCiD,EAAgBpe,EAAM,WAiD5B,GAhDAA,EAAM,WAAaA,EAAM,UACzBA,EAAM,UAAYlF,EAElBkF,EAAM,MAAQ,GACdA,EAAM,OAAOmb,CAAQ,EAAI6C,EAAehe,EAAM,OAAOmb,CAAQ,EAC7Dnb,EAAM,OAAOmb,CAAQ,EAAItI,EAErBmL,GAAgBvhB,GAAOuD,EAAM,QAAQmb,EAAW,CAAC,EAQnDnb,EAAM,KAAO,KAAK,IAAIA,EAAM,KAAO,EAAGib,CAAO,EAE7Cjb,EAAM,GAAG,MAAM,SAASA,EAAOmb,EAAUF,EAAS,EAAI,GAIpD,CAACjb,EAAM,OAAS+d,KAClBR,EAAQ,IAIVQ,EAAgB/d,EAAM,KAAOmb,EAAY,GAAKnb,EAAM,QAAQA,EAAM,KAAO,CAAC,EAE1EA,EAAM,UAAYA,EAAM,WACxBA,EAAM,WAAaoe,EACnBpe,EAAM,OAAOmb,CAAQ,EAAI4B,EACzB/c,EAAM,OAAOmb,CAAQ,EAAI2B,EACzB9c,EAAM,MAAQme,EAEd7I,EAAetV,EAAM,KAAK,kBAAmB,KAAM,EAAE,EACrDsV,EAAM,OAAS,OAAO,aAAasI,CAAc,EAEjDzC,EAAWnb,EAAM,KACjBke,EAAU,CAAC,EAAI/C,EAEXA,GAAYF,GAKZjb,EAAM,OAAOmb,CAAQ,EAAInb,EAAM,WAG/BA,EAAM,OAAOmb,CAAQ,EAAInb,EAAM,WAAa,EAAK,MAGrD,IAAIoc,EAAY,GAChB,QAASnkB,EAAI,EAAG2W,EAAI+M,EAAgB,OAAQ1jB,EAAI2W,EAAG3W,IACjD,GAAI0jB,EAAgB1jB,CAAC,EAAE+H,EAAOmb,EAAUF,EAAS,EAAI,EAAG,CACtDmB,EAAY,GACZ,KACR,CAEI,GAAIA,EAAa,MAGjB,GAAIqB,EAAW,CAEb,GADAE,EAAiB,sBAAsB3d,EAAOmb,CAAQ,EAClDwC,EAAiB,EAAK,MAC1B1iB,EAAQ+E,EAAM,OAAOmb,CAAQ,EAAInb,EAAM,OAAOmb,CAAQ,CAC5D,SACMwC,EAAiB,qBAAqB3d,EAAOmb,CAAQ,EACjDwC,EAAiB,EAAK,MAG5B,GAAIC,IAAmB5d,EAAM,IAAI,WAAW2d,EAAiB,CAAC,EAAK,KACvE,CAGE,OAAIF,EACFnI,EAAQtV,EAAM,KAAK,qBAAsB,KAAM,EAAE,EAEjDsV,EAAQtV,EAAM,KAAK,oBAAqB,KAAM,EAAE,EAElDsV,EAAM,OAAS,OAAO,aAAasI,CAAc,EAEjDE,EAAU,CAAC,EAAI3C,EACfnb,EAAM,KAAOmb,EAEbnb,EAAM,WAAa0b,EAGf6B,GACF,oBAAoBvd,EAAO6d,CAAU,EAGhC,EACT,CCxUe,SAAS,UAAW7d,EAAOkB,EAAWmd,EAAUnD,EAAQ,CACrE,IAAIhH,EAAMlU,EAAM,OAAOkB,CAAS,EAAIlB,EAAM,OAAOkB,CAAS,EACtDzE,EAAMuD,EAAM,OAAOkB,CAAS,EAC5Bia,EAAWja,EAAY,EAK3B,GAFIlB,EAAM,OAAOkB,CAAS,EAAIlB,EAAM,WAAa,GAE7CA,EAAM,IAAI,WAAWkU,CAAG,IAAM,GAAe,MAAO,GAExD,SAASoK,EAAanD,EAAU,CAC9B,MAAMF,EAAUjb,EAAM,QAEtB,GAAImb,GAAYF,GAAWjb,EAAM,QAAQmb,CAAQ,EAE/C,OAAO,KAGT,IAAIoD,EAAiB,GASrB,GALIve,EAAM,OAAOmb,CAAQ,EAAInb,EAAM,UAAY,IAAKue,EAAiB,IAGjEve,EAAM,OAAOmb,CAAQ,EAAI,IAAKoD,EAAiB,IAE/C,CAACA,EAAgB,CACnB,MAAM5C,EAAkB3b,EAAM,GAAG,MAAM,MAAM,SAAS,WAAW,EAC3D0b,EAAgB1b,EAAM,WAC5BA,EAAM,WAAa,YAGnB,IAAIoc,EAAY,GAChB,QAASnkB,EAAI,EAAG2W,EAAI+M,EAAgB,OAAQ1jB,EAAI2W,EAAG3W,IACjD,GAAI0jB,EAAgB1jB,CAAC,EAAE+H,EAAOmb,EAAUF,EAAS,EAAI,EAAG,CACtDmB,EAAY,GACZ,KACV,CAIM,GADApc,EAAM,WAAa0b,EACfU,EAEF,OAAO,IAEf,CAEI,MAAMlI,EAAMlU,EAAM,OAAOmb,CAAQ,EAAInb,EAAM,OAAOmb,CAAQ,EACpD1e,EAAMuD,EAAM,OAAOmb,CAAQ,EAGjC,OAAOnb,EAAM,IAAI,MAAMkU,EAAKzX,EAAM,CAAC,CACvC,CAEE,IAAI4I,EAAMrF,EAAM,IAAI,MAAMkU,EAAKzX,EAAM,CAAC,EAEtCA,EAAM4I,EAAI,OACV,IAAI4P,EAAW,GAEf,IAAKf,EAAM,EAAGA,EAAMzX,EAAKyX,IAAO,CAC9B,MAAMrX,EAAKwI,EAAI,WAAW6O,CAAG,EAC7B,GAAIrX,IAAO,GACT,MAAO,GACF,GAAIA,IAAO,GAAc,CAC9BoY,EAAWf,EACX,KACN,SAAerX,IAAO,GAAe,CAC/B,MAAM2hB,EAAcF,EAAYnD,CAAQ,EACpCqD,IAAgB,OAClBnZ,GAAOmZ,EACP/hB,EAAM4I,EAAI,OACV8V,IAER,SAAete,IAAO,KAChBqX,IACIA,EAAMzX,GAAO4I,EAAI,WAAW6O,CAAG,IAAM,IAAM,CAC7C,MAAMsK,EAAcF,EAAYnD,CAAQ,EACpCqD,IAAgB,OAClBnZ,GAAOmZ,EACP/hB,EAAM4I,EAAI,OACV8V,IAEV,CAEA,CAEE,GAAIlG,EAAW,GAAK5P,EAAI,WAAW4P,EAAW,CAAC,IAAM,GAAe,MAAO,GAI3E,IAAKf,EAAMe,EAAW,EAAGf,EAAMzX,EAAKyX,IAAO,CACzC,MAAMrX,EAAKwI,EAAI,WAAW6O,CAAG,EAC7B,GAAIrX,IAAO,GAAM,CACf,MAAM2hB,EAAcF,EAAYnD,CAAQ,EACpCqD,IAAgB,OAClBnZ,GAAOmZ,EACP/hB,EAAM4I,EAAI,OACV8V,IAEH,SAAU,SAAQte,CAAE,EAGnB,KAEN,CAIE,MAAM4hB,EAAUze,EAAM,GAAG,QAAQ,qBAAqBqF,EAAK6O,EAAKzX,CAAG,EACnE,GAAI,CAACgiB,EAAQ,GAAM,MAAO,GAE1B,MAAMC,EAAO1e,EAAM,GAAG,cAAcye,EAAQ,GAAG,EAC/C,GAAI,CAACze,EAAM,GAAG,aAAa0e,CAAI,EAAK,MAAO,GAE3CxK,EAAMuK,EAAQ,IAGd,MAAME,EAAazK,EACb0K,EAAgBzD,EAIhBlgB,EAAQiZ,EACd,KAAOA,EAAMzX,EAAKyX,IAAO,CACvB,MAAMrX,EAAKwI,EAAI,WAAW6O,CAAG,EAC7B,GAAIrX,IAAO,GAAM,CACf,MAAM2hB,EAAcF,EAAYnD,CAAQ,EACpCqD,IAAgB,OAClBnZ,GAAOmZ,EACP/hB,EAAM4I,EAAI,OACV8V,IAEH,SAAU,SAAQte,CAAE,EAGnB,KAEN,CAIE,IAAIgiB,EAAW7e,EAAM,GAAG,QAAQ,eAAeqF,EAAK6O,EAAKzX,CAAG,EAC5D,KAAOoiB,EAAS,cAAc,CAC5B,MAAML,EAAcF,EAAYnD,CAAQ,EACxC,GAAIqD,IAAgB,KAAM,MAC1BnZ,GAAOmZ,EACPtK,EAAMzX,EACNA,EAAM4I,EAAI,OACV8V,IACA0D,EAAW7e,EAAM,GAAG,QAAQ,eAAeqF,EAAK6O,EAAKzX,EAAKoiB,CAAQ,CACtE,CACE,IAAIhV,EAYJ,IAVIqK,EAAMzX,GAAOxB,IAAUiZ,GAAO2K,EAAS,IACzChV,EAAQgV,EAAS,IACjB3K,EAAM2K,EAAS,MAEfhV,EAAQ,GACRqK,EAAMyK,EACNxD,EAAWyD,GAIN1K,EAAMzX,GAAK,CAChB,MAAMI,EAAKwI,EAAI,WAAW6O,CAAG,EAC7B,GAAI,CAAC,QAAQrX,CAAE,EAAK,MACpBqX,GACJ,CAEE,GAAIA,EAAMzX,GAAO4I,EAAI,WAAW6O,CAAG,IAAM,IACnCrK,EAMF,IAHAA,EAAQ,GACRqK,EAAMyK,EACNxD,EAAWyD,EACJ1K,EAAMzX,GAAK,CAChB,MAAMI,EAAKwI,EAAI,WAAW6O,CAAG,EAC7B,GAAI,CAAC,QAAQrX,CAAE,EAAK,MACpBqX,GACR,CAIE,GAAIA,EAAMzX,GAAO4I,EAAI,WAAW6O,CAAG,IAAM,GAEvC,MAAO,GAGT,MAAM3F,EAAQ,mBAAmBlJ,EAAI,MAAM,EAAG4P,CAAQ,CAAC,EACvD,OAAK1G,GAOD2M,IAEA,OAAOlb,EAAM,IAAI,WAAe,MAClCA,EAAM,IAAI,WAAa,CAAA,GAErB,OAAOA,EAAM,IAAI,WAAWuO,CAAK,EAAM,MACzCvO,EAAM,IAAI,WAAWuO,CAAK,EAAI,CAAE,MAAA1E,EAAO,KAAA6U,CAAI,GAG7C1e,EAAM,KAAOmb,GACN,IAfE,EAgBX,CChNA,MAAe,YAAA,CACb,UACA,UACA,QACA,OACA,WACA,aACA,OACA,UACA,SACA,MACA,WACA,KACA,UACA,SACA,MACA,MACA,KACA,KACA,WACA,aACA,SACA,SACA,OACA,QACA,WACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,KACA,OACA,SACA,SACA,KACA,OACA,OACA,OACA,WACA,MACA,WACA,KACA,WACA,SACA,IACA,QACA,SACA,UACA,UACA,QACA,QACA,KACA,QACA,KACA,QACA,QACA,KACA,QACA,IACF,EChEM,UAAgB,6BAEhB,SAAgB,yBAChB,cAAgB,UAChB,cAAgB,UAEhB,WAAc,MAAQ,SAAW,IAAM,cAAgB,IAAM,cAAgB,IAE7E,UAAc,UAAY,UAAY,eAAiB,WAAa,MAEpE,SAAc,2BAA6B,UAAY,aAEvD,UAAc,mCACd,QAAc,wCACd,WAAc,qBACd,YAAc,mBACd,MAAc,iCAEd,YAAc,IAAI,OAAO,OAAS,SAAW,IAAM,UAAY,IAAM,QACnD,IAAM,WAAa,IAAM,YAAc,IAAM,MAAQ,GAAG,EAC1E,uBAAyB,IAAI,OAAO,OAAS,SAAW,IAAM,UAAY,GAAG,ECd7E,eAAiB,CACrB,CAAC,6CAA8C,mCAAoC,EAAI,EACvF,CAAC,QAAgB,MAAS,EAAI,EAC9B,CAAC,OAAgB,MAAS,EAAI,EAC9B,CAAC,WAAgB,IAAS,EAAI,EAC9B,CAAC,eAAgB,QAAS,EAAI,EAC9B,CAAC,IAAI,OAAO,QAAU,YAAY,KAAK,GAAG,EAAI,mBAAoB,GAAG,EAAG,KAAM,EAAI,EAClF,CAAC,IAAI,OAAO,uBAAuB,OAAS,OAAO,EAAI,KAAM,EAAK,CACpE,EAEe,SAAS,WAAYnb,EAAOkB,EAAW+Z,EAASC,EAAQ,CACrE,IAAIhH,EAAMlU,EAAM,OAAOkB,CAAS,EAAIlB,EAAM,OAAOkB,CAAS,EACtDzE,EAAMuD,EAAM,OAAOkB,CAAS,EAOhC,GAJIlB,EAAM,OAAOkB,CAAS,EAAIlB,EAAM,WAAa,GAE7C,CAACA,EAAM,GAAG,QAAQ,MAElBA,EAAM,IAAI,WAAWkU,CAAG,IAAM,GAAe,MAAO,GAExD,IAAIoH,EAAWtb,EAAM,IAAI,MAAMkU,EAAKzX,CAAG,EAEnCxE,EAAI,EACR,KAAOA,EAAI,eAAe,QACpB,gBAAeA,CAAC,EAAE,CAAC,EAAE,KAAKqjB,CAAQ,EADNrjB,IAChC,CAEF,GAAIA,IAAM,eAAe,OAAU,MAAO,GAE1C,GAAIijB,EAEF,OAAO,eAAejjB,CAAC,EAAE,CAAC,EAG5B,IAAIkjB,EAAWja,EAAY,EAI3B,GAAI,CAAC,eAAejJ,CAAC,EAAE,CAAC,EAAE,KAAKqjB,CAAQ,GACrC,KAAOH,EAAWF,GACZ,EAAAjb,EAAM,OAAOmb,CAAQ,EAAInb,EAAM,WADVmb,IAOzB,GAJAjH,EAAMlU,EAAM,OAAOmb,CAAQ,EAAInb,EAAM,OAAOmb,CAAQ,EACpD1e,EAAMuD,EAAM,OAAOmb,CAAQ,EAC3BG,EAAWtb,EAAM,IAAI,MAAMkU,EAAKzX,CAAG,EAE/B,eAAexE,CAAC,EAAE,CAAC,EAAE,KAAKqjB,CAAQ,EAAG,CACnCA,EAAS,SAAW,GAAKH,IAC7B,KACR,EAIEnb,EAAM,KAAOmb,EAEb,MAAM7F,EAAUtV,EAAM,KAAK,aAAc,GAAI,CAAC,EAC9C,OAAAsV,EAAM,IAAU,CAACpU,EAAWia,CAAQ,EACpC7F,EAAM,QAAUtV,EAAM,SAASkB,EAAWia,EAAUnb,EAAM,UAAW,EAAI,EAElE,EACT,CChEe,SAAS,QAASA,EAAOkB,EAAW+Z,EAASC,EAAQ,CAClE,IAAIhH,EAAMlU,EAAM,OAAOkB,CAAS,EAAIlB,EAAM,OAAOkB,CAAS,EACtDzE,EAAMuD,EAAM,OAAOkB,CAAS,EAGhC,GAAIlB,EAAM,OAAOkB,CAAS,EAAIlB,EAAM,WAAa,EAAK,MAAO,GAE7D,IAAInD,EAAMmD,EAAM,IAAI,WAAWkU,CAAG,EAElC,GAAIrX,IAAO,IAAeqX,GAAOzX,EAAO,MAAO,GAG/C,IAAI2I,EAAQ,EAEZ,IADAvI,EAAKmD,EAAM,IAAI,WAAW,EAAEkU,CAAG,EACxBrX,IAAO,IAAeqX,EAAMzX,GAAO2I,GAAS,GACjDA,IACAvI,EAAKmD,EAAM,IAAI,WAAW,EAAEkU,CAAG,EAGjC,GAAI9O,EAAQ,GAAM8O,EAAMzX,GAAO,CAAC,QAAQI,CAAE,EAAM,MAAO,GAEvD,GAAIqe,EAAU,MAAO,GAIrBze,EAAMuD,EAAM,eAAevD,EAAKyX,CAAG,EACnC,MAAM9R,EAAMpC,EAAM,cAAcvD,EAAK,GAAMyX,CAAG,EAC1C9R,EAAM8R,GAAO,QAAQlU,EAAM,IAAI,WAAWoC,EAAM,CAAC,CAAC,IACpD3F,EAAM2F,GAGRpC,EAAM,KAAOkB,EAAY,EAEzB,MAAMkX,EAAWpY,EAAM,KAAK,eAAgB,IAAM,OAAOoF,CAAK,EAAG,CAAC,EAClEgT,EAAQ,OAAS,WAAW,MAAM,EAAGhT,CAAK,EAC1CgT,EAAQ,IAAS,CAAClX,EAAWlB,EAAM,IAAI,EAEvC,MAAM8e,EAAa9e,EAAM,KAAK,SAAU,GAAI,CAAC,EAC7C8e,EAAQ,QAAW9e,EAAM,IAAI,MAAMkU,EAAKzX,CAAG,EAAE,KAAI,EACjDqiB,EAAQ,IAAW,CAAC5d,EAAWlB,EAAM,IAAI,EACzC8e,EAAQ,SAAW,CAAA,EAEnB,MAAMxG,EAAWtY,EAAM,KAAK,gBAAiB,IAAM,OAAOoF,CAAK,EAAG,EAAE,EACpE,OAAAkT,EAAQ,OAAS,WAAW,MAAM,EAAGlT,CAAK,EAEnC,EACT,CChDe,SAAS,SAAUpF,EAAOkB,EAAW+Z,EAAsB,CACxE,MAAMU,EAAkB3b,EAAM,GAAG,MAAM,MAAM,SAAS,WAAW,EAGjE,GAAIA,EAAM,OAAOkB,CAAS,EAAIlB,EAAM,WAAa,EAAK,MAAO,GAE7D,MAAM0b,EAAgB1b,EAAM,WAC5BA,EAAM,WAAa,YAGnB,IAAIoF,EAAQ,EACR0P,EACAqG,EAAWja,EAAY,EAE3B,KAAOia,EAAWF,GAAW,CAACjb,EAAM,QAAQmb,CAAQ,EAAGA,IAAY,CAGjE,GAAInb,EAAM,OAAOmb,CAAQ,EAAInb,EAAM,UAAY,EAAK,SAKpD,GAAIA,EAAM,OAAOmb,CAAQ,GAAKnb,EAAM,UAAW,CAC7C,IAAIkU,EAAMlU,EAAM,OAAOmb,CAAQ,EAAInb,EAAM,OAAOmb,CAAQ,EACxD,MAAM1e,EAAMuD,EAAM,OAAOmb,CAAQ,EAEjC,GAAIjH,EAAMzX,IACRqY,EAAS9U,EAAM,IAAI,WAAWkU,CAAG,GAE7BY,IAAW,IAAeA,IAAW,MACvCZ,EAAMlU,EAAM,UAAUkU,EAAKY,CAAM,EACjCZ,EAAMlU,EAAM,WAAWkU,CAAG,EAEtBA,GAAOzX,IAAK,CACd2I,EAAS0P,IAAW,GAAc,EAAI,EACtC,KACZ,CAGA,CAGI,GAAI9U,EAAM,OAAOmb,CAAQ,EAAI,EAAK,SAGlC,IAAIiB,EAAY,GAChB,QAASnkB,EAAI,EAAG2W,EAAI+M,EAAgB,OAAQ1jB,EAAI2W,EAAG3W,IACjD,GAAI0jB,EAAgB1jB,CAAC,EAAE+H,EAAOmb,EAAUF,EAAS,EAAI,EAAG,CACtDmB,EAAY,GACZ,KACR,CAEI,GAAIA,EAAa,KACrB,CAEE,GAAI,CAAChX,EAEH,MAAO,GAGT,MAAMjM,EAAU6G,EAAM,SAASkB,EAAWia,EAAUnb,EAAM,UAAW,EAAK,EAAE,KAAI,EAEhFA,EAAM,KAAOmb,EAAW,EAExB,MAAM/C,EAAapY,EAAM,KAAK,eAAgB,IAAM,OAAOoF,CAAK,EAAG,CAAC,EACpEgT,EAAQ,OAAW,OAAO,aAAatD,CAAM,EAC7CsD,EAAQ,IAAW,CAAClX,EAAWlB,EAAM,IAAI,EAEzC,MAAM8e,EAAa9e,EAAM,KAAK,SAAU,GAAI,CAAC,EAC7C8e,EAAQ,QAAW3lB,EACnB2lB,EAAQ,IAAW,CAAC5d,EAAWlB,EAAM,KAAO,CAAC,EAC7C8e,EAAQ,SAAW,CAAA,EAEnB,MAAMxG,EAAatY,EAAM,KAAK,gBAAiB,IAAM,OAAOoF,CAAK,EAAG,EAAE,EACtE,OAAAkT,EAAQ,OAAW,OAAO,aAAaxD,CAAM,EAE7C9U,EAAM,WAAa0b,EAEZ,EACT,CC/Ee,SAAS,UAAW1b,EAAOkB,EAAW+Z,EAAS,CAC5D,MAAMU,EAAkB3b,EAAM,GAAG,MAAM,MAAM,SAAS,WAAW,EAC3D0b,EAAgB1b,EAAM,WAC5B,IAAImb,EAAWja,EAAY,EAI3B,IAHAlB,EAAM,WAAa,YAGZmb,EAAWF,GAAW,CAACjb,EAAM,QAAQmb,CAAQ,EAAGA,IAAY,CAMjE,GAHInb,EAAM,OAAOmb,CAAQ,EAAInb,EAAM,UAAY,GAG3CA,EAAM,OAAOmb,CAAQ,EAAI,EAAK,SAGlC,IAAIiB,EAAY,GAChB,QAASnkB,EAAI,EAAG2W,EAAI+M,EAAgB,OAAQ1jB,EAAI2W,EAAG3W,IACjD,GAAI0jB,EAAgB1jB,CAAC,EAAE+H,EAAOmb,EAAUF,EAAS,EAAI,EAAG,CACtDmB,EAAY,GACZ,KACR,CAEI,GAAIA,EAAa,KACrB,CAEE,MAAMjjB,EAAU6G,EAAM,SAASkB,EAAWia,EAAUnb,EAAM,UAAW,EAAK,EAAE,KAAI,EAEhFA,EAAM,KAAOmb,EAEb,MAAM/C,EAAapY,EAAM,KAAK,iBAAkB,IAAK,CAAC,EACtDoY,EAAQ,IAAW,CAAClX,EAAWlB,EAAM,IAAI,EAEzC,MAAM8e,EAAa9e,EAAM,KAAK,SAAU,GAAI,CAAC,EAC7C,OAAA8e,EAAQ,QAAW3lB,EACnB2lB,EAAQ,IAAW,CAAC5d,EAAWlB,EAAM,IAAI,EACzC8e,EAAQ,SAAW,CAAA,EAEnB9e,EAAM,KAAK,kBAAmB,IAAK,EAAE,EAErCA,EAAM,WAAa0b,EAEZ,EACT,CCxBA,MAAMnC,SAAS,CAGb,CAAC,QAAcwF,MAAc,CAAC,YAAa,WAAW,CAAC,EACvD,CAAC,OAAcC,IAAM,EACrB,CAAC,QAAcC,MAAc,CAAC,YAAa,YAAa,aAAc,MAAM,CAAC,EAC7E,CAAC,aAAcC,WAAc,CAAC,YAAa,YAAa,aAAc,MAAM,CAAC,EAC7E,CAAC,KAAcC,GAAc,CAAC,YAAa,YAAa,aAAc,MAAM,CAAC,EAC7E,CAAC,OAAcC,KAAc,CAAC,YAAa,YAAa,YAAY,CAAC,EACrE,CAAC,YAAcC,SAAW,EAC1B,CAAC,aAAcC,WAAc,CAAC,YAAa,YAAa,YAAY,CAAC,EACrE,CAAC,UAAcC,QAAc,CAAC,YAAa,YAAa,YAAY,CAAC,EACrE,CAAC,WAAcC,QAAU,EACzB,CAAC,YAAcC,SAAW,CAC5B,EAKA,SAAS,aAAe,CAMtB,KAAK,MAAQ,IAAI,MAEjB,QAASxnB,EAAI,EAAGA,EAAIshB,SAAO,OAAQthB,IACjC,KAAK,MAAM,KAAKshB,SAAOthB,CAAC,EAAE,CAAC,EAAGshB,SAAOthB,CAAC,EAAE,CAAC,EAAG,CAAE,KAAMshB,SAAOthB,CAAC,EAAE,CAAC,GAAK,IAAI,OAAS,CAAA,CAErF,CAIA,YAAY,UAAU,SAAW,SAAU+H,EAAOkB,EAAW+Z,EAAS,CACpE,MAAM/E,EAAQ,KAAK,MAAM,SAAS,EAAE,EAC9Ble,EAAMke,EAAM,OACZwJ,EAAa1f,EAAM,GAAG,QAAQ,WACpC,IAAIzG,EAAO2H,EACPye,EAAgB,GAEpB,KAAOpmB,EAAO0hB,IACZjb,EAAM,KAAOzG,EAAOyG,EAAM,eAAezG,CAAI,EACzC,EAAAA,GAAQ0hB,GAIRjb,EAAM,OAAOzG,CAAI,EAAIyG,EAAM,aANV,CAUrB,GAAIA,EAAM,OAAS0f,EAAY,CAC7B1f,EAAM,KAAOib,EACb,KACN,CAQI,MAAM2E,EAAW5f,EAAM,KACvB,IAAI6f,EAAK,GAET,QAAS5nB,EAAI,EAAGA,EAAID,EAAKC,IAEvB,GADA4nB,EAAK3J,EAAMje,CAAC,EAAE+H,EAAOzG,EAAM0hB,EAAS,EAAK,EACrC4E,EAAI,CACN,GAAID,GAAY5f,EAAM,KACpB,MAAM,IAAI,MAAM,wCAAwC,EAE1D,KACR,CAII,GAAI,CAAC6f,EAAI,MAAM,IAAI,MAAM,iCAAiC,EAI1D7f,EAAM,MAAQ,CAAC2f,EAGX3f,EAAM,QAAQA,EAAM,KAAO,CAAC,IAC9B2f,EAAgB,IAGlBpmB,EAAOyG,EAAM,KAETzG,EAAO0hB,GAAWjb,EAAM,QAAQzG,CAAI,IACtComB,EAAgB,GAChBpmB,IACAyG,EAAM,KAAOzG,EAEnB,CACA,EAOA,YAAY,UAAU,MAAQ,SAAU0a,EAAKtK,EAAIyL,EAAK0K,EAAW,CAC/D,GAAI,CAAC7L,EAAO,OAEZ,MAAMjU,EAAQ,IAAI,KAAK,MAAMiU,EAAKtK,EAAIyL,EAAK0K,CAAS,EAEpD,KAAK,SAAS9f,EAAOA,EAAM,KAAMA,EAAM,OAAO,CAChD,EAEA,YAAY,UAAU,MAAQ,WC9H9B,SAAS,YAAaiU,EAAKtK,EAAIyL,EAAK0K,EAAW,CAC7C,KAAK,IAAM7L,EACX,KAAK,IAAMmB,EACX,KAAK,GAAKzL,EACV,KAAK,OAASmW,EACd,KAAK,YAAc,MAAMA,EAAU,MAAM,EAEzC,KAAK,IAAM,EACX,KAAK,OAAS,KAAK,IAAI,OACvB,KAAK,MAAQ,EACb,KAAK,QAAU,GACf,KAAK,aAAe,EAIpB,KAAK,MAAQ,CAAA,EAGb,KAAK,WAAa,CAAA,EAGlB,KAAK,iBAAmB,CAAA,EAGxB,KAAK,UAAY,CAAA,EACjB,KAAK,iBAAmB,GAIxB,KAAK,UAAY,CACnB,CAIA,YAAY,UAAU,YAAc,UAAY,CAC9C,MAAMxK,EAAQ,IAAI,MAAM,OAAQ,GAAI,CAAC,EACrC,OAAAA,EAAM,QAAU,KAAK,QACrBA,EAAM,MAAQ,KAAK,aACnB,KAAK,OAAO,KAAKA,CAAK,EACtB,KAAK,QAAU,GACRA,CACT,EAKA,YAAY,UAAU,KAAO,SAAU7d,EAAMiE,EAAKsb,EAAS,CACrD,KAAK,SACP,KAAK,YAAW,EAGlB,MAAM1B,EAAQ,IAAI,MAAM7d,EAAMiE,EAAKsb,CAAO,EAC1C,IAAI+I,EAAa,KAEjB,OAAI/I,EAAU,IAEZ,KAAK,QACL,KAAK,WAAa,KAAK,iBAAiB,IAAG,GAG7C1B,EAAM,MAAQ,KAAK,MAEf0B,EAAU,IAEZ,KAAK,QACL,KAAK,iBAAiB,KAAK,KAAK,UAAU,EAC1C,KAAK,WAAa,CAAA,EAClB+I,EAAa,CAAE,WAAY,KAAK,UAAU,GAG5C,KAAK,aAAe,KAAK,MACzB,KAAK,OAAO,KAAKzK,CAAK,EACtB,KAAK,YAAY,KAAKyK,CAAU,EACzBzK,CACT,EAQA,YAAY,UAAU,WAAa,SAAUra,EAAO+kB,EAAc,CAChE,MAAMvjB,EAAM,KAAK,OACXqY,EAAS,KAAK,IAAI,WAAW7Z,CAAK,EAGlC8d,EAAW9d,EAAQ,EAAI,KAAK,IAAI,WAAWA,EAAQ,CAAC,EAAI,GAE9D,IAAIiZ,EAAMjZ,EACV,KAAOiZ,EAAMzX,GAAO,KAAK,IAAI,WAAWyX,CAAG,IAAMY,GAAUZ,IAE3D,MAAMja,EAAQia,EAAMjZ,EAGd+L,EAAWkN,EAAMzX,EAAM,KAAK,IAAI,WAAWyX,CAAG,EAAI,GAElD8E,EAAkB,eAAeD,CAAQ,GAAK,YAAY,OAAO,aAAaA,CAAQ,CAAC,EACvFE,EAAkB,eAAejS,CAAQ,GAAK,YAAY,OAAO,aAAaA,CAAQ,CAAC,EAEvFkS,EAAmB,aAAaH,CAAQ,EACxCI,EAAmB,aAAanS,CAAQ,EAExCiZ,EACJ,CAAC9G,IAAqB,CAACF,GAAmBC,GAAoBF,GAC1DkH,EACJ,CAAChH,IAAqB,CAACF,GAAmBG,GAAoBF,GAKhE,MAAO,CAAE,SAHSgH,IAAmBD,GAAgB,CAACE,GAAkBlH,GAGrD,UAFDkH,IAAmBF,GAAgB,CAACC,GAAkBhH,GAE1C,OAAQhf,CAAK,CAC7C,EAGA,YAAY,UAAU,MAAQ,MC9G9B,SAAS,iBAAkB4C,EAAI,CAC7B,OAAQA,EAAE,CACR,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,KACL,IAAK,KACH,MAAO,GACT,QACE,MAAO,EACb,CACA,CAEe,SAAS,KAAMmD,EAAOkb,EAAQ,CAC3C,IAAIhH,EAAMlU,EAAM,IAEhB,KAAOkU,EAAMlU,EAAM,QAAU,CAAC,iBAAiBA,EAAM,IAAI,WAAWkU,CAAG,CAAC,GACtEA,IAGF,OAAIA,IAAQlU,EAAM,IAAc,IAE3Bkb,IAAUlb,EAAM,SAAWA,EAAM,IAAI,MAAMA,EAAM,IAAKkU,CAAG,GAE9DlU,EAAM,IAAMkU,EAEL,GACT,CCpDA,MAAM,UAAY,0CAEH,SAAS,QAASlU,EAAOkb,EAAQ,CAE9C,GADI,CAAClb,EAAM,GAAG,QAAQ,SAClBA,EAAM,UAAY,EAAG,MAAO,GAEhC,MAAMkU,EAAMlU,EAAM,IACZvD,EAAMuD,EAAM,OAKlB,GAHIkU,EAAM,EAAIzX,GACVuD,EAAM,IAAI,WAAWkU,CAAG,IAAM,IAC9BlU,EAAM,IAAI,WAAWkU,EAAM,CAAC,IAAM,IAClClU,EAAM,IAAI,WAAWkU,EAAM,CAAC,IAAM,GAAa,MAAO,GAE1D,MAAM3W,EAAQyC,EAAM,QAAQ,MAAM,SAAS,EAC3C,GAAI,CAACzC,EAAO,MAAO,GAEnB,MAAM2T,EAAQ3T,EAAM,CAAC,EAEf4iB,EAAOngB,EAAM,GAAG,QAAQ,aAAaA,EAAM,IAAI,MAAMkU,EAAMhD,EAAM,MAAM,CAAC,EAC9E,GAAI,CAACiP,EAAM,MAAO,GAElB,IAAIzR,EAAMyR,EAAK,IAIf,GAAIzR,EAAI,QAAUwC,EAAM,OAAQ,MAAO,GAGvCxC,EAAMA,EAAI,QAAQ,OAAQ,EAAE,EAE5B,MAAMwJ,EAAUlY,EAAM,GAAG,cAAc0O,CAAG,EAC1C,GAAI,CAAC1O,EAAM,GAAG,aAAakY,CAAO,EAAG,MAAO,GAE5C,GAAI,CAACgD,EAAQ,CACXlb,EAAM,QAAUA,EAAM,QAAQ,MAAM,EAAG,CAACkR,EAAM,MAAM,EAEpD,MAAMkH,EAAUpY,EAAM,KAAK,YAAa,IAAK,CAAC,EAC9CoY,EAAQ,MAAQ,CAAC,CAAC,OAAQF,CAAO,CAAC,EAClCE,EAAQ,OAAS,UACjBA,EAAQ,KAAO,OAEf,MAAMC,EAAUrY,EAAM,KAAK,OAAQ,GAAI,CAAC,EACxCqY,EAAQ,QAAUrY,EAAM,GAAG,kBAAkB0O,CAAG,EAEhD,MAAM4J,EAAUtY,EAAM,KAAK,aAAc,IAAK,EAAE,EAChDsY,EAAQ,OAAS,UACjBA,EAAQ,KAAO,MACnB,CAEE,OAAAtY,EAAM,KAAO0O,EAAI,OAASwC,EAAM,OACzB,EACT,CCnDe,SAAS,QAASlR,EAAOkb,EAAQ,CAC9C,IAAIhH,EAAMlU,EAAM,IAEhB,GAAIA,EAAM,IAAI,WAAWkU,CAAG,IAAM,GAAgB,MAAO,GAEzD,MAAMkM,EAAOpgB,EAAM,QAAQ,OAAS,EAC9BvD,EAAMuD,EAAM,OAMlB,GAAI,CAACkb,EACH,GAAIkF,GAAQ,GAAKpgB,EAAM,QAAQ,WAAWogB,CAAI,IAAM,GAClD,GAAIA,GAAQ,GAAKpgB,EAAM,QAAQ,WAAWogB,EAAO,CAAC,IAAM,GAAM,CAE5D,IAAIC,EAAKD,EAAO,EAChB,KAAOC,GAAM,GAAKrgB,EAAM,QAAQ,WAAWqgB,EAAK,CAAC,IAAM,IAAMA,IAE7DrgB,EAAM,QAAUA,EAAM,QAAQ,MAAM,EAAGqgB,CAAE,EACzCrgB,EAAM,KAAK,YAAa,KAAM,CAAC,CACvC,MACQA,EAAM,QAAUA,EAAM,QAAQ,MAAM,EAAG,EAAE,EACzCA,EAAM,KAAK,YAAa,KAAM,CAAC,OAGjCA,EAAM,KAAK,YAAa,KAAM,CAAC,EAOnC,IAHAkU,IAGOA,EAAMzX,GAAO,QAAQuD,EAAM,IAAI,WAAWkU,CAAG,CAAC,GAAKA,IAE1D,OAAAlU,EAAM,IAAMkU,EACL,EACT,CCrCA,MAAM,QAAU,CAAA,EAEhB,QAASjc,EAAI,EAAGA,EAAI,IAAKA,IAAO,QAAQ,KAAK,CAAC,EAE9C,qCACG,MAAM,EAAE,EAAE,QAAQ,SAAU4E,EAAI,CAAE,QAAQA,EAAG,WAAW,CAAC,CAAC,EAAI,CAAG,CAAA,EAErD,SAAS,OAAQmD,EAAOkb,EAAQ,CAC7C,IAAIhH,EAAMlU,EAAM,IAChB,MAAMvD,EAAMuD,EAAM,OAMlB,GAJIA,EAAM,IAAI,WAAWkU,CAAG,IAAM,KAClCA,IAGIA,GAAOzX,GAAK,MAAO,GAEvB,IAAI6jB,EAAMtgB,EAAM,IAAI,WAAWkU,CAAG,EAElC,GAAIoM,IAAQ,GAAM,CAOhB,IANKpF,GACHlb,EAAM,KAAK,YAAa,KAAM,CAAC,EAGjCkU,IAEOA,EAAMzX,IACX6jB,EAAMtgB,EAAM,IAAI,WAAWkU,CAAG,EAC1B,EAAC,QAAQoM,CAAG,IAChBpM,IAGF,OAAAlU,EAAM,IAAMkU,EACL,EACX,CAEE,IAAIqM,EAAavgB,EAAM,IAAIkU,CAAG,EAE9B,GAAIoM,GAAO,OAAUA,GAAO,OAAUpM,EAAM,EAAIzX,EAAK,CACnD,MAAM+jB,EAAMxgB,EAAM,IAAI,WAAWkU,EAAM,CAAC,EAEpCsM,GAAO,OAAUA,GAAO,QAC1BD,GAAcvgB,EAAM,IAAIkU,EAAM,CAAC,EAC/BA,IAEN,CAEE,MAAMuM,EAAU,KAAOF,EAEvB,GAAI,CAACrF,EAAQ,CACX,MAAM5F,EAAQtV,EAAM,KAAK,eAAgB,GAAI,CAAC,EAE1CsgB,EAAM,KAAO,QAAQA,CAAG,IAAM,EAChChL,EAAM,QAAUiL,EAEhBjL,EAAM,QAAUmL,EAGlBnL,EAAM,OAASmL,EACfnL,EAAM,KAAS,QACnB,CAEE,OAAAtV,EAAM,IAAMkU,EAAM,EACX,EACT,CClEe,SAAS,SAAUlU,EAAOkb,EAAQ,CAC/C,IAAIhH,EAAMlU,EAAM,IAGhB,GAFWA,EAAM,IAAI,WAAWkU,CAAG,IAExB,GAAe,MAAO,GAEjC,MAAMjZ,EAAQiZ,EACdA,IACA,MAAMzX,EAAMuD,EAAM,OAGlB,KAAOkU,EAAMzX,GAAOuD,EAAM,IAAI,WAAWkU,CAAG,IAAM,IAAeA,IAEjE,MAAMY,EAAS9U,EAAM,IAAI,MAAM/E,EAAOiZ,CAAG,EACnCwM,EAAe5L,EAAO,OAE5B,GAAI9U,EAAM,mBAAqBA,EAAM,UAAU0gB,CAAY,GAAK,IAAMzlB,EACpE,OAAKigB,IAAQlb,EAAM,SAAW8U,GAC9B9U,EAAM,KAAO0gB,EACN,GAGT,IAAIC,EAAWzM,EACX0M,EAGJ,MAAQA,EAAa5gB,EAAM,IAAI,QAAQ,IAAK2gB,CAAQ,KAAO,IAAI,CAI7D,IAHAA,EAAWC,EAAa,EAGjBD,EAAWlkB,GAAOuD,EAAM,IAAI,WAAW2gB,CAAQ,IAAM,IAAeA,IAE3E,MAAME,EAAeF,EAAWC,EAEhC,GAAIC,IAAiBH,EAAc,CAEjC,GAAI,CAACxF,EAAQ,CACX,MAAM5F,EAAQtV,EAAM,KAAK,cAAe,OAAQ,CAAC,EACjDsV,EAAM,OAASR,EACfQ,EAAM,QAAUtV,EAAM,IAAI,MAAMkU,EAAK0M,CAAU,EAC5C,QAAQ,MAAO,GAAG,EAClB,QAAQ,WAAY,IAAI,CACnC,CACM,OAAA5gB,EAAM,IAAM2gB,EACL,EACb,CAGI3gB,EAAM,UAAU6gB,CAAY,EAAID,CACpC,CAGE,OAAA5gB,EAAM,iBAAmB,GAEpBkb,IAAQlb,EAAM,SAAW8U,GAC9B9U,EAAM,KAAO0gB,EACN,EACT,CCtDA,SAAS,uBAAwB1gB,EAAOkb,EAAQ,CAC9C,MAAMjgB,EAAQ+E,EAAM,IACd8U,EAAS9U,EAAM,IAAI,WAAW/E,CAAK,EAIzC,GAFIigB,GAEApG,IAAW,IAAe,MAAO,GAErC,MAAMgM,EAAU9gB,EAAM,WAAWA,EAAM,IAAK,EAAI,EAChD,IAAIhI,EAAM8oB,EAAQ,OAClB,MAAMjkB,EAAK,OAAO,aAAaiY,CAAM,EAErC,GAAI9c,EAAM,EAAK,MAAO,GAEtB,IAAIsd,EAEAtd,EAAM,IACRsd,EAAgBtV,EAAM,KAAK,OAAQ,GAAI,CAAC,EACxCsV,EAAM,QAAUzY,EAChB7E,KAGF,QAASC,EAAI,EAAGA,EAAID,EAAKC,GAAK,EAC5Bqd,EAAgBtV,EAAM,KAAK,OAAQ,GAAI,CAAC,EACxCsV,EAAM,QAAUzY,EAAKA,EAErBmD,EAAM,WAAW,KAAK,CACpB,OAAA8U,EACA,OAAQ,EACR,MAAO9U,EAAM,OAAO,OAAS,EAC7B,IAAK,GACL,KAAM8gB,EAAQ,SACd,MAAOA,EAAQ,SAChB,CAAA,EAGH,OAAA9gB,EAAM,KAAO8gB,EAAQ,OAEd,EACT,CAEA,SAASC,cAAa/gB,EAAOghB,EAAY,CACvC,IAAI1L,EACJ,MAAM2L,EAAc,CAAA,EACdxkB,EAAMukB,EAAW,OAEvB,QAAS/oB,EAAI,EAAGA,EAAIwE,EAAKxE,IAAK,CAC5B,MAAMipB,EAAaF,EAAW/oB,CAAC,EAM/B,GAJIipB,EAAW,SAAW,KAItBA,EAAW,MAAQ,GACrB,SAGF,MAAMC,EAAWH,EAAWE,EAAW,GAAG,EAE1C5L,EAAgBtV,EAAM,OAAOkhB,EAAW,KAAK,EAC7C5L,EAAM,KAAU,SAChBA,EAAM,IAAU,IAChBA,EAAM,QAAU,EAChBA,EAAM,OAAU,KAChBA,EAAM,QAAU,GAEhBA,EAAgBtV,EAAM,OAAOmhB,EAAS,KAAK,EAC3C7L,EAAM,KAAU,UAChBA,EAAM,IAAU,IAChBA,EAAM,QAAU,GAChBA,EAAM,OAAU,KAChBA,EAAM,QAAU,GAEZtV,EAAM,OAAOmhB,EAAS,MAAQ,CAAC,EAAE,OAAS,QAC1CnhB,EAAM,OAAOmhB,EAAS,MAAQ,CAAC,EAAE,UAAY,KAC/CF,EAAY,KAAKE,EAAS,MAAQ,CAAC,CAEzC,CAQE,KAAOF,EAAY,QAAQ,CACzB,MAAMhpB,EAAIgpB,EAAY,IAAG,EACzB,IAAItP,EAAI1Z,EAAI,EAEZ,KAAO0Z,EAAI3R,EAAM,OAAO,QAAUA,EAAM,OAAO2R,CAAC,EAAE,OAAS,WACzDA,IAGFA,IAEI1Z,IAAM0Z,IACR2D,EAAQtV,EAAM,OAAO2R,CAAC,EACtB3R,EAAM,OAAO2R,CAAC,EAAI3R,EAAM,OAAO/H,CAAC,EAChC+H,EAAM,OAAO/H,CAAC,EAAIqd,EAExB,CACA,CAIA,SAAS,0BAA2BtV,EAAO,CACzC,MAAMohB,EAAcphB,EAAM,YACpBvD,EAAMuD,EAAM,YAAY,OAE9B+gB,cAAY/gB,EAAOA,EAAM,UAAU,EAEnC,QAAS+G,EAAO,EAAGA,EAAOtK,EAAKsK,IACzBqa,EAAYra,CAAI,GAAKqa,EAAYra,CAAI,EAAE,YACzCga,cAAY/gB,EAAOohB,EAAYra,CAAI,EAAE,UAAU,CAGrD,CAEA,MAAe,gBAAA,CACb,SAAU,uBACV,YAAa,yBACf,ECzHA,SAAS,kBAAmB/G,EAAOkb,EAAQ,CACzC,MAAMjgB,EAAQ+E,EAAM,IACd8U,EAAS9U,EAAM,IAAI,WAAW/E,CAAK,EAIzC,GAFIigB,GAEApG,IAAW,IAAgBA,IAAW,GAAgB,MAAO,GAEjE,MAAMgM,EAAU9gB,EAAM,WAAWA,EAAM,IAAK8U,IAAW,EAAI,EAE3D,QAAS7c,EAAI,EAAGA,EAAI6oB,EAAQ,OAAQ7oB,IAAK,CACvC,MAAMqd,EAAQtV,EAAM,KAAK,OAAQ,GAAI,CAAC,EACtCsV,EAAM,QAAU,OAAO,aAAaR,CAAM,EAE1C9U,EAAM,WAAW,KAAK,CAGpB,OAAA8U,EAIA,OAAQgM,EAAQ,OAIhB,MAAO9gB,EAAM,OAAO,OAAS,EAK7B,IAAK,GAKL,KAAM8gB,EAAQ,SACd,MAAOA,EAAQ,SAChB,CAAA,CACL,CAEE,OAAA9gB,EAAM,KAAO8gB,EAAQ,OAEd,EACT,CAEA,SAAS,YAAa9gB,EAAOghB,EAAY,CACvC,MAAMvkB,EAAMukB,EAAW,OAEvB,QAAS/oB,EAAIwE,EAAM,EAAGxE,GAAK,EAAGA,IAAK,CACjC,MAAMipB,EAAaF,EAAW/oB,CAAC,EAO/B,GALIipB,EAAW,SAAW,IAAeA,EAAW,SAAW,IAK3DA,EAAW,MAAQ,GACrB,SAGF,MAAMC,EAAWH,EAAWE,EAAW,GAAG,EAOpCG,EAAWppB,EAAI,GACV+oB,EAAW/oB,EAAI,CAAC,EAAE,MAAQipB,EAAW,IAAM,GAE3CF,EAAW/oB,EAAI,CAAC,EAAE,SAAWipB,EAAW,QACxCF,EAAW/oB,EAAI,CAAC,EAAE,QAAUipB,EAAW,MAAQ,GAE/CF,EAAWE,EAAW,IAAM,CAAC,EAAE,QAAUC,EAAS,MAAQ,EAE/DtkB,EAAK,OAAO,aAAaqkB,EAAW,MAAM,EAE1C9I,EAAYpY,EAAM,OAAOkhB,EAAW,KAAK,EAC/C9I,EAAQ,KAAUiJ,EAAW,cAAgB,UAC7CjJ,EAAQ,IAAUiJ,EAAW,SAAW,KACxCjJ,EAAQ,QAAU,EAClBA,EAAQ,OAAUiJ,EAAWxkB,EAAKA,EAAKA,EACvCub,EAAQ,QAAU,GAElB,MAAME,EAAYtY,EAAM,OAAOmhB,EAAS,KAAK,EAC7C7I,EAAQ,KAAU+I,EAAW,eAAiB,WAC9C/I,EAAQ,IAAU+I,EAAW,SAAW,KACxC/I,EAAQ,QAAU,GAClBA,EAAQ,OAAU+I,EAAWxkB,EAAKA,EAAKA,EACvCyb,EAAQ,QAAU,GAEd+I,IACFrhB,EAAM,OAAOghB,EAAW/oB,EAAI,CAAC,EAAE,KAAK,EAAE,QAAU,GAChD+H,EAAM,OAAOghB,EAAWE,EAAW,IAAM,CAAC,EAAE,KAAK,EAAE,QAAU,GAC7DjpB,IAEN,CACA,CAIA,SAAS,sBAAuB+H,EAAO,CACrC,MAAMohB,EAAcphB,EAAM,YACpBvD,EAAMuD,EAAM,YAAY,OAE9B,YAAYA,EAAOA,EAAM,UAAU,EAEnC,QAAS+G,EAAO,EAAGA,EAAOtK,EAAKsK,IACzBqa,EAAYra,CAAI,GAAKqa,EAAYra,CAAI,EAAE,YACzC,YAAY/G,EAAOohB,EAAYra,CAAI,EAAE,UAAU,CAGrD,CAEA,MAAe,WAAA,CACb,SAAU,kBACV,YAAa,qBACf,ECtHe,SAAS,KAAM/G,EAAOkb,EAAQ,CAC3C,IAAI7c,EAAMkQ,EAAOnR,EAAKkkB,EAClB5C,EAAO,GACP7U,EAAQ,GACR5O,EAAQ+E,EAAM,IACduhB,EAAiB,GAErB,GAAIvhB,EAAM,IAAI,WAAWA,EAAM,GAAG,IAAM,GAAe,MAAO,GAE9D,MAAMgV,EAAShV,EAAM,IACfvD,EAAMuD,EAAM,OACZwhB,EAAaxhB,EAAM,IAAM,EACzBiV,EAAWjV,EAAM,GAAG,QAAQ,eAAeA,EAAOA,EAAM,IAAK,EAAI,EAGvE,GAAIiV,EAAW,EAAK,MAAO,GAE3B,IAAIf,EAAMe,EAAW,EACrB,GAAIf,EAAMzX,GAAOuD,EAAM,IAAI,WAAWkU,CAAG,IAAM,GAAa,CAW1D,IALAqN,EAAiB,GAIjBrN,IACOA,EAAMzX,IACX4B,EAAO2B,EAAM,IAAI,WAAWkU,CAAG,EAC3B,GAAC,QAAQ7V,CAAI,GAAKA,IAAS,KAFf6V,IAEhB,CAEF,GAAIA,GAAOzX,EAAO,MAAO,GAMzB,GAFAxB,EAAQiZ,EACR9W,EAAM4C,EAAM,GAAG,QAAQ,qBAAqBA,EAAM,IAAKkU,EAAKlU,EAAM,MAAM,EACpE5C,EAAI,GAAI,CAWV,IAVAshB,EAAO1e,EAAM,GAAG,cAAc5C,EAAI,GAAG,EACjC4C,EAAM,GAAG,aAAa0e,CAAI,EAC5BxK,EAAM9W,EAAI,IAEVshB,EAAO,GAKTzjB,EAAQiZ,EACDA,EAAMzX,IACX4B,EAAO2B,EAAM,IAAI,WAAWkU,CAAG,EAC3B,GAAC,QAAQ7V,CAAI,GAAKA,IAAS,KAFf6V,IAEhB,CAMF,GADA9W,EAAM4C,EAAM,GAAG,QAAQ,eAAeA,EAAM,IAAKkU,EAAKlU,EAAM,MAAM,EAC9DkU,EAAMzX,GAAOxB,IAAUiZ,GAAO9W,EAAI,GAMpC,IALAyM,EAAQzM,EAAI,IACZ8W,EAAM9W,EAAI,IAIH8W,EAAMzX,IACX4B,EAAO2B,EAAM,IAAI,WAAWkU,CAAG,EAC3B,GAAC,QAAQ7V,CAAI,GAAKA,IAAS,KAFf6V,IAEhB,CAGV,EAEQA,GAAOzX,GAAOuD,EAAM,IAAI,WAAWkU,CAAG,IAAM,MAE9CqN,EAAiB,IAEnBrN,GACJ,CAEE,GAAIqN,EAAgB,CAIlB,GAAI,OAAOvhB,EAAM,IAAI,WAAe,IAAe,MAAO,GAmB1D,GAjBIkU,EAAMzX,GAAOuD,EAAM,IAAI,WAAWkU,CAAG,IAAM,IAC7CjZ,EAAQiZ,EAAM,EACdA,EAAMlU,EAAM,GAAG,QAAQ,eAAeA,EAAOkU,CAAG,EAC5CA,GAAO,EACT3F,EAAQvO,EAAM,IAAI,MAAM/E,EAAOiZ,GAAK,EAEpCA,EAAMe,EAAW,GAGnBf,EAAMe,EAAW,EAKd1G,IAASA,EAAQvO,EAAM,IAAI,MAAMwhB,EAAYvM,CAAQ,GAE1DqM,EAAMthB,EAAM,IAAI,WAAW,mBAAmBuO,CAAK,CAAC,EAChD,CAAC+S,EACH,OAAAthB,EAAM,IAAMgV,EACL,GAET0J,EAAO4C,EAAI,KACXzX,EAAQyX,EAAI,KAChB,CAME,GAAI,CAACpG,EAAQ,CACXlb,EAAM,IAAMwhB,EACZxhB,EAAM,OAASiV,EAEf,MAAMmD,EAAUpY,EAAM,KAAK,YAAa,IAAK,CAAC,EACxCkX,EAAQ,CAAC,CAAC,OAAQwH,CAAI,CAAC,EAC7BtG,EAAQ,MAASlB,EACbrN,GACFqN,EAAM,KAAK,CAAC,QAASrN,CAAK,CAAC,EAG7B7J,EAAM,YACNA,EAAM,GAAG,OAAO,SAASA,CAAK,EAC9BA,EAAM,YAENA,EAAM,KAAK,aAAc,IAAK,EAAE,CACpC,CAEE,OAAAA,EAAM,IAAMkU,EACZlU,EAAM,OAASvD,EACR,EACT,CCtIe,SAAS,MAAOuD,EAAOkb,EAAQ,CAC5C,IAAI7c,EAAMlF,EAASoV,EAAO2F,EAAKoN,EAAKlkB,EAAKyM,EAAO5O,EAC5CyjB,EAAO,GACX,MAAM1J,EAAShV,EAAM,IACfvD,EAAMuD,EAAM,OAGlB,GADIA,EAAM,IAAI,WAAWA,EAAM,GAAG,IAAM,IACpCA,EAAM,IAAI,WAAWA,EAAM,IAAM,CAAC,IAAM,GAAe,MAAO,GAElE,MAAMwhB,EAAaxhB,EAAM,IAAM,EACzBiV,EAAWjV,EAAM,GAAG,QAAQ,eAAeA,EAAOA,EAAM,IAAM,EAAG,EAAK,EAG5E,GAAIiV,EAAW,EAAK,MAAO,GAG3B,GADAf,EAAMe,EAAW,EACbf,EAAMzX,GAAOuD,EAAM,IAAI,WAAWkU,CAAG,IAAM,GAAa,CAQ1D,IADAA,IACOA,EAAMzX,IACX4B,EAAO2B,EAAM,IAAI,WAAWkU,CAAG,EAC3B,GAAC,QAAQ7V,CAAI,GAAKA,IAAS,KAFf6V,IAEhB,CAEF,GAAIA,GAAOzX,EAAO,MAAO,GAkBzB,IAdAxB,EAAQiZ,EACR9W,EAAM4C,EAAM,GAAG,QAAQ,qBAAqBA,EAAM,IAAKkU,EAAKlU,EAAM,MAAM,EACpE5C,EAAI,KACNshB,EAAO1e,EAAM,GAAG,cAAc5C,EAAI,GAAG,EACjC4C,EAAM,GAAG,aAAa0e,CAAI,EAC5BxK,EAAM9W,EAAI,IAEVshB,EAAO,IAMXzjB,EAAQiZ,EACDA,EAAMzX,IACX4B,EAAO2B,EAAM,IAAI,WAAWkU,CAAG,EAC3B,GAAC,QAAQ7V,CAAI,GAAKA,IAAS,KAFf6V,IAEhB,CAMF,GADA9W,EAAM4C,EAAM,GAAG,QAAQ,eAAeA,EAAM,IAAKkU,EAAKlU,EAAM,MAAM,EAC9DkU,EAAMzX,GAAOxB,IAAUiZ,GAAO9W,EAAI,GAMpC,IALAyM,EAAQzM,EAAI,IACZ8W,EAAM9W,EAAI,IAIH8W,EAAMzX,IACX4B,EAAO2B,EAAM,IAAI,WAAWkU,CAAG,EAC3B,GAAC,QAAQ7V,CAAI,GAAKA,IAAS,KAFf6V,IAEhB,MAGFrK,EAAQ,GAGV,GAAIqK,GAAOzX,GAAOuD,EAAM,IAAI,WAAWkU,CAAG,IAAM,GAC9C,OAAAlU,EAAM,IAAMgV,EACL,GAETd,GACJ,KAAS,CAIL,GAAI,OAAOlU,EAAM,IAAI,WAAe,IAAe,MAAO,GAmB1D,GAjBIkU,EAAMzX,GAAOuD,EAAM,IAAI,WAAWkU,CAAG,IAAM,IAC7CjZ,EAAQiZ,EAAM,EACdA,EAAMlU,EAAM,GAAG,QAAQ,eAAeA,EAAOkU,CAAG,EAC5CA,GAAO,EACT3F,EAAQvO,EAAM,IAAI,MAAM/E,EAAOiZ,GAAK,EAEpCA,EAAMe,EAAW,GAGnBf,EAAMe,EAAW,EAKd1G,IAASA,EAAQvO,EAAM,IAAI,MAAMwhB,EAAYvM,CAAQ,GAE1DqM,EAAMthB,EAAM,IAAI,WAAW,mBAAmBuO,CAAK,CAAC,EAChD,CAAC+S,EACH,OAAAthB,EAAM,IAAMgV,EACL,GAET0J,EAAO4C,EAAI,KACXzX,EAAQyX,EAAI,KAChB,CAME,GAAI,CAACpG,EAAQ,CACX/hB,EAAU6G,EAAM,IAAI,MAAMwhB,EAAYvM,CAAQ,EAE9C,MAAME,EAAS,CAAA,EACfnV,EAAM,GAAG,OAAO,MACd7G,EACA6G,EAAM,GACNA,EAAM,IACNmV,CACN,EAEI,MAAMG,EAAQtV,EAAM,KAAK,QAAS,MAAO,CAAC,EACpCkX,EAAQ,CAAC,CAAC,MAAOwH,CAAI,EAAG,CAAC,MAAO,EAAE,CAAC,EACzCpJ,EAAM,MAAQ4B,EACd5B,EAAM,SAAWH,EACjBG,EAAM,QAAUnc,EAEZ0Q,GACFqN,EAAM,KAAK,CAAC,QAASrN,CAAK,CAAC,CAEjC,CAEE,OAAA7J,EAAM,IAAMkU,EACZlU,EAAM,OAASvD,EACR,EACT,CCtIA,MAAM,SAAc,yIAEd,YAAc,qDAEL,SAAS,SAAUuD,EAAOkb,EAAQ,CAC/C,IAAIhH,EAAMlU,EAAM,IAEhB,GAAIA,EAAM,IAAI,WAAWkU,CAAG,IAAM,GAAe,MAAO,GAExD,MAAMjZ,EAAQ+E,EAAM,IACdvD,EAAMuD,EAAM,OAElB,OAAS,CACP,GAAI,EAAEkU,GAAOzX,EAAK,MAAO,GAEzB,MAAMI,EAAKmD,EAAM,IAAI,WAAWkU,CAAG,EAEnC,GAAIrX,IAAO,GAAc,MAAO,GAChC,GAAIA,IAAO,GAAc,KAC7B,CAEE,MAAM6R,EAAM1O,EAAM,IAAI,MAAM/E,EAAQ,EAAGiZ,CAAG,EAE1C,GAAI,YAAY,KAAKxF,CAAG,EAAG,CACzB,MAAMwJ,EAAUlY,EAAM,GAAG,cAAc0O,CAAG,EAC1C,GAAI,CAAC1O,EAAM,GAAG,aAAakY,CAAO,EAAK,MAAO,GAE9C,GAAI,CAACgD,EAAQ,CACX,MAAM9C,EAAYpY,EAAM,KAAK,YAAa,IAAK,CAAC,EAChDoY,EAAQ,MAAU,CAAC,CAAC,OAAQF,CAAO,CAAC,EACpCE,EAAQ,OAAU,WAClBA,EAAQ,KAAU,OAElB,MAAMC,EAAYrY,EAAM,KAAK,OAAQ,GAAI,CAAC,EAC1CqY,EAAQ,QAAUrY,EAAM,GAAG,kBAAkB0O,CAAG,EAEhD,MAAM4J,EAAYtY,EAAM,KAAK,aAAc,IAAK,EAAE,EAClDsY,EAAQ,OAAU,WAClBA,EAAQ,KAAU,MACxB,CAEI,OAAAtY,EAAM,KAAO0O,EAAI,OAAS,EACnB,EACX,CAEE,GAAI,SAAS,KAAKA,CAAG,EAAG,CACtB,MAAMwJ,EAAUlY,EAAM,GAAG,cAAc,UAAY0O,CAAG,EACtD,GAAI,CAAC1O,EAAM,GAAG,aAAakY,CAAO,EAAK,MAAO,GAE9C,GAAI,CAACgD,EAAQ,CACX,MAAM9C,EAAYpY,EAAM,KAAK,YAAa,IAAK,CAAC,EAChDoY,EAAQ,MAAU,CAAC,CAAC,OAAQF,CAAO,CAAC,EACpCE,EAAQ,OAAU,WAClBA,EAAQ,KAAU,OAElB,MAAMC,EAAYrY,EAAM,KAAK,OAAQ,GAAI,CAAC,EAC1CqY,EAAQ,QAAUrY,EAAM,GAAG,kBAAkB0O,CAAG,EAEhD,MAAM4J,EAAYtY,EAAM,KAAK,aAAc,IAAK,EAAE,EAClDsY,EAAQ,OAAU,WAClBA,EAAQ,KAAU,MACxB,CAEI,OAAAtY,EAAM,KAAO0O,EAAI,OAAS,EACnB,EACX,CAEE,MAAO,EACT,CCnEA,SAAS,WAAYrJ,EAAK,CACxB,MAAO,YAAY,KAAKA,CAAG,CAC7B,CACA,SAAS,YAAaA,EAAK,CACzB,MAAO,aAAa,KAAKA,CAAG,CAC9B,CAEA,SAAS,SAAUxI,EAAI,CAErB,MAAMiD,EAAKjD,EAAK,GAChB,OAAQiD,GAAM,IAAiBA,GAAM,GACvC,CAEe,SAAS,YAAaE,EAAOkb,EAAQ,CAClD,GAAI,CAAClb,EAAM,GAAG,QAAQ,KAAQ,MAAO,GAGrC,MAAMvD,EAAMuD,EAAM,OACZkU,EAAMlU,EAAM,IAClB,GAAIA,EAAM,IAAI,WAAWkU,CAAG,IAAM,IAC9BA,EAAM,GAAKzX,EACb,MAAO,GAIT,MAAMI,EAAKmD,EAAM,IAAI,WAAWkU,EAAM,CAAC,EACvC,GAAIrX,IAAO,IACPA,IAAO,IACPA,IAAO,IACP,CAAC,SAASA,CAAE,EACd,MAAO,GAGT,MAAMU,EAAQyC,EAAM,IAAI,MAAMkU,CAAG,EAAE,MAAM,WAAW,EACpD,GAAI,CAAC3W,EAAS,MAAO,GAErB,GAAI,CAAC2d,EAAQ,CACX,MAAM5F,EAAQtV,EAAM,KAAK,cAAe,GAAI,CAAC,EAC7CsV,EAAM,QAAU/X,EAAM,CAAC,EAEnB,WAAW+X,EAAM,OAAO,GAAItV,EAAM,YAClC,YAAYsV,EAAM,OAAO,GAAGtV,EAAM,WAC1C,CACE,OAAAA,EAAM,KAAOzC,EAAM,CAAC,EAAE,OACf,EACT,CC5CA,MAAM,WAAa,uCACb,SAAa,4BAEJ,SAAS,OAAQyC,EAAOkb,EAAQ,CAC7C,MAAMhH,EAAMlU,EAAM,IACZvD,EAAMuD,EAAM,OAIlB,GAFIA,EAAM,IAAI,WAAWkU,CAAG,IAAM,IAE9BA,EAAM,GAAKzX,EAAK,MAAO,GAI3B,GAFWuD,EAAM,IAAI,WAAWkU,EAAM,CAAC,IAE5B,GAAc,CACvB,MAAM3W,EAAQyC,EAAM,IAAI,MAAMkU,CAAG,EAAE,MAAM,UAAU,EACnD,GAAI3W,EAAO,CACT,GAAI,CAAC2d,EAAQ,CACX,MAAM7c,EAAOd,EAAM,CAAC,EAAE,CAAC,EAAE,YAAW,IAAO,IAAM,SAASA,EAAM,CAAC,EAAE,MAAM,CAAC,EAAG,EAAE,EAAI,SAASA,EAAM,CAAC,EAAG,EAAE,EAElG+X,EAAUtV,EAAM,KAAK,eAAgB,GAAI,CAAC,EAChDsV,EAAM,QAAU,kBAAkBjX,CAAI,EAAI,cAAcA,CAAI,EAAI,cAAc,KAAM,EACpFiX,EAAM,OAAU/X,EAAM,CAAC,EACvB+X,EAAM,KAAU,QACxB,CACM,OAAAtV,EAAM,KAAOzC,EAAM,CAAC,EAAE,OACf,EACb,CACA,KAAS,CACL,MAAMA,EAAQyC,EAAM,IAAI,MAAMkU,CAAG,EAAE,MAAM,QAAQ,EACjD,GAAI3W,EAAO,CACT,MAAM+W,EAAU,WAAW/W,EAAM,CAAC,CAAC,EACnC,GAAI+W,IAAY/W,EAAM,CAAC,EAAG,CACxB,GAAI,CAAC2d,EAAQ,CACX,MAAM5F,EAAUtV,EAAM,KAAK,eAAgB,GAAI,CAAC,EAChDsV,EAAM,QAAUhB,EAChBgB,EAAM,OAAU/X,EAAM,CAAC,EACvB+X,EAAM,KAAU,QAC1B,CACQ,OAAAtV,EAAM,KAAOzC,EAAM,CAAC,EAAE,OACf,EACf,CACA,CACA,CAEE,MAAO,EACT,CC/CA,SAAS,kBAAmByjB,EAAY,CACtC,MAAMS,EAAgB,CAAA,EAChBhlB,EAAMukB,EAAW,OAEvB,GAAI,CAACvkB,EAAK,OAGV,IAAIilB,EAAY,EACZC,EAAe,GACnB,MAAMC,EAAQ,CAAA,EAEd,QAASC,EAAY,EAAGA,EAAYplB,EAAKolB,IAAa,CACpD,MAAMC,EAASd,EAAWa,CAAS,EAoBnC,GAlBAD,EAAM,KAAK,CAAC,GAMRZ,EAAWU,CAAS,EAAE,SAAWI,EAAO,QAAUH,IAAiBG,EAAO,MAAQ,KACpFJ,EAAYG,GAGdF,EAAeG,EAAO,MAMtBA,EAAO,OAASA,EAAO,QAAU,EAE7B,CAACA,EAAO,MAAO,SAOdL,EAAc,eAAeK,EAAO,MAAM,IAC7CL,EAAcK,EAAO,MAAM,EAAI,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAE,GAGxD,MAAMC,EAAeN,EAAcK,EAAO,MAAM,GAAGA,EAAO,KAAO,EAAI,GAAMA,EAAO,OAAS,CAAE,EAE7F,IAAIE,EAAYN,EAAYE,EAAMF,CAAS,EAAI,EAE3CO,EAAkBD,EAEtB,KAAOA,EAAYD,EAAcC,GAAaJ,EAAMI,CAAS,EAAI,EAAG,CAClE,MAAME,EAASlB,EAAWgB,CAAS,EAEnC,GAAIE,EAAO,SAAWJ,EAAO,QAEzBI,EAAO,MAAQA,EAAO,IAAM,EAAG,CACjC,IAAIC,EAAa,GAiBjB,IARID,EAAO,OAASJ,EAAO,QACpBI,EAAO,OAASJ,EAAO,QAAU,IAAM,IACtCI,EAAO,OAAS,IAAM,GAAKJ,EAAO,OAAS,IAAM,KACnDK,EAAa,IAKf,CAACA,EAAY,CAKf,MAAMC,EAAWJ,EAAY,GAAK,CAAChB,EAAWgB,EAAY,CAAC,EAAE,KACzDJ,EAAMI,EAAY,CAAC,EAAI,EACvB,EAEJJ,EAAMC,CAAS,EAAIA,EAAYG,EAAYI,EAC3CR,EAAMI,CAAS,EAAII,EAEnBN,EAAO,KAAQ,GACfI,EAAO,IAAQL,EACfK,EAAO,MAAQ,GACfD,EAAkB,GAGlBN,EAAe,GACf,KACV,CACA,CACA,CAEQM,IAAoB,KAQtBR,EAAcK,EAAO,MAAM,GAAGA,EAAO,KAAO,EAAI,IAAOA,EAAO,QAAU,GAAK,CAAE,EAAIG,EAEzF,CACA,CAEe,SAAS,WAAYjiB,EAAO,CACzC,MAAMohB,EAAcphB,EAAM,YACpBvD,EAAMuD,EAAM,YAAY,OAE9B,kBAAkBA,EAAM,UAAU,EAElC,QAAS+G,EAAO,EAAGA,EAAOtK,EAAKsK,IACzBqa,EAAYra,CAAI,GAAKqa,EAAYra,CAAI,EAAE,YACzC,kBAAkBqa,EAAYra,CAAI,EAAE,UAAU,CAGpD,CClHe,SAAS,eAAgB/G,EAAO,CAC7C,IAAI+G,EAAMuS,EACNlU,EAAQ,EACZ,MAAM+P,EAASnV,EAAM,OACfvD,EAAMuD,EAAM,OAAO,OAEzB,IAAK+G,EAAOuS,EAAO,EAAGvS,EAAOtK,EAAKsK,IAG5BoO,EAAOpO,CAAI,EAAE,QAAU,GAAG3B,IAC9B+P,EAAOpO,CAAI,EAAE,MAAQ3B,EACjB+P,EAAOpO,CAAI,EAAE,QAAU,GAAG3B,IAE1B+P,EAAOpO,CAAI,EAAE,OAAS,QACtBA,EAAO,EAAItK,GACX0Y,EAAOpO,EAAO,CAAC,EAAE,OAAS,OAE5BoO,EAAOpO,EAAO,CAAC,EAAE,QAAUoO,EAAOpO,CAAI,EAAE,QAAUoO,EAAOpO,EAAO,CAAC,EAAE,SAE/DA,IAASuS,IAAQnE,EAAOmE,CAAI,EAAInE,EAAOpO,CAAI,GAE/CuS,KAIAvS,IAASuS,IACXnE,EAAO,OAASmE,EAEpB,CCVA,MAAM,OAAS,CACb,CAAC,OAAmB+I,IAAM,EAC1B,CAAC,UAAmB1I,OAAS,EAC7B,CAAC,UAAmB2I,OAAS,EAC7B,CAAC,SAAmBC,MAAQ,EAC5B,CAAC,YAAmBC,QAAW,EAC/B,CAAC,gBAAmB,gBAAgB,QAAQ,EAC5C,CAAC,WAAmB,WAAW,QAAQ,EACvC,CAAC,OAAmBC,IAAM,EAC1B,CAAC,QAAmBC,KAAO,EAC3B,CAAC,WAAmBC,QAAU,EAC9B,CAAC,cAAmBC,WAAa,EACjC,CAAC,SAAmBC,MAAQ,CAC9B,EAOM,QAAU,CACd,CAAC,gBAAmBC,UAAe,EACnC,CAAC,gBAAmB,gBAAgB,WAAW,EAC/C,CAAC,WAAmB,WAAW,WAAW,EAG1C,CAAC,iBAAmBC,cAAgB,CACtC,EAKA,SAAS,cAAgB,CAMvB,KAAK,MAAQ,IAAI,MAEjB,QAAS9qB,EAAI,EAAGA,EAAI,OAAO,OAAQA,IACjC,KAAK,MAAM,KAAK,OAAOA,CAAC,EAAE,CAAC,EAAG,OAAOA,CAAC,EAAE,CAAC,CAAC,EAS5C,KAAK,OAAS,IAAI,MAElB,QAASA,EAAI,EAAGA,EAAI,QAAQ,OAAQA,IAClC,KAAK,OAAO,KAAK,QAAQA,CAAC,EAAE,CAAC,EAAG,QAAQA,CAAC,EAAE,CAAC,CAAC,CAEjD,CAKA,aAAa,UAAU,UAAY,SAAU+H,EAAO,CAClD,MAAMkU,EAAMlU,EAAM,IACZkW,EAAQ,KAAK,MAAM,SAAS,EAAE,EAC9Ble,EAAMke,EAAM,OACZwJ,EAAa1f,EAAM,GAAG,QAAQ,WAC9BgQ,EAAQhQ,EAAM,MAEpB,GAAI,OAAOgQ,EAAMkE,CAAG,EAAM,IAAa,CACrClU,EAAM,IAAMgQ,EAAMkE,CAAG,EACrB,MACJ,CAEE,IAAI2L,EAAK,GAET,GAAI7f,EAAM,MAAQ0f,GAChB,QAASznB,EAAI,EAAGA,EAAID,EAAKC,IASvB,GAJA+H,EAAM,QACN6f,EAAK3J,EAAMje,CAAC,EAAE+H,EAAO,EAAI,EACzBA,EAAM,QAEF6f,EAAI,CACN,GAAI3L,GAAOlU,EAAM,IAAO,MAAM,IAAI,MAAM,wCAAwC,EAChF,KACR,OAcIA,EAAM,IAAMA,EAAM,OAGf6f,GAAM7f,EAAM,MACjBgQ,EAAMkE,CAAG,EAAIlU,EAAM,GACrB,EAIA,aAAa,UAAU,SAAW,SAAUA,EAAO,CACjD,MAAMkW,EAAQ,KAAK,MAAM,SAAS,EAAE,EAC9Ble,EAAMke,EAAM,OACZ/a,EAAM6E,EAAM,OACZ0f,EAAa1f,EAAM,GAAG,QAAQ,WAEpC,KAAOA,EAAM,IAAM7E,GAAK,CAOtB,MAAM4Z,EAAU/U,EAAM,IACtB,IAAI6f,EAAK,GAET,GAAI7f,EAAM,MAAQ0f,GAChB,QAASznB,EAAI,EAAGA,EAAID,EAAKC,IAEvB,GADA4nB,EAAK3J,EAAMje,CAAC,EAAE+H,EAAO,EAAK,EACtB6f,EAAI,CACN,GAAI9K,GAAW/U,EAAM,IAAO,MAAM,IAAI,MAAM,wCAAwC,EACpF,KACV,EAII,GAAI6f,EAAI,CACN,GAAI7f,EAAM,KAAO7E,EAAO,MACxB,QACN,CAEI6E,EAAM,SAAWA,EAAM,IAAIA,EAAM,KAAK,CAC1C,CAEMA,EAAM,SACRA,EAAM,YAAW,CAErB,EAOA,aAAa,UAAU,MAAQ,SAAUqF,EAAKsE,EAAIyL,EAAK0K,EAAW,CAChE,MAAM9f,EAAQ,IAAI,KAAK,MAAMqF,EAAKsE,EAAIyL,EAAK0K,CAAS,EAEpD,KAAK,SAAS9f,CAAK,EAEnB,MAAMkW,EAAQ,KAAK,OAAO,SAAS,EAAE,EAC/Ble,EAAMke,EAAM,OAElB,QAASje,EAAI,EAAGA,EAAID,EAAKC,IACvBie,EAAMje,CAAC,EAAE+H,CAAK,CAElB,EAEA,aAAa,UAAU,MAAQ,YChMhB,SAAQ,UAAElH,EAAM,CAC7B,MAAMkqB,EAAK,CAAA,EACXlqB,EAAOA,GAAQ,CAAA,EAEfkqB,EAAG,QAAU,IAAI,OACjBA,EAAG,OAAS,GAAG,OACfA,EAAG,MAAQ,EAAE,OACbA,EAAG,MAAQ,EAAE,OAGbA,EAAG,SAAW,CAACA,EAAG,MAAOA,EAAG,MAAOA,EAAG,MAAM,EAAE,KAAK,GAAG,EAGtDA,EAAG,QAAU,CAACA,EAAG,MAAOA,EAAG,MAAM,EAAE,KAAK,GAAG,EAI3C,MAAMC,EAAkB,QAKxB,OAAAD,EAAG,kBAAoB,SAAWC,EAAkB,IAAMD,EAAG,SAAW,IAAMA,EAAG,QAAU,IAI3FA,EAAG,QAED,yFAGFA,EAAG,SAAW,YAAcA,EAAG,QAAU,uBAEzCA,EAAG,SAED,kFAEFA,EAAG,oBAED,QAAUC,EAAkB,IAAMD,EAAG,SAAW,QACvClqB,EAAK,KAAK,EAAI,WAAa,MAAQ,uBAAyBkqB,EAAG,SAAW,KAErFA,EAAG,SAED,iBAGcA,EAAG,QAAU,IAAMC,EAAkB,oCAC/BD,EAAG,QAAU,wBACbA,EAAG,QAAU,wBACbA,EAAG,QAAU,wBACbA,EAAG,QAAU,wBACbA,EAAG,QAAU,qBAGhBA,EAAG,kBAAoB,qCAYvBA,EAAG,QAAU,YACvBlqB,EAAK,KAAK,EACP,6BACA,SAGJ,OAASkqB,EAAG,QAAU,WAGbA,EAAG,QAAU,cAGVA,EAAG,QAAU,iBAEdA,EAAG,QAAU,kBAOhCA,EAAG,eAED,iEAEFA,EAAG,OAED,wBAKFA,EAAG,gBAGD,MACEA,EAAG,OACH,IACAA,EAAG,kBAAoB,UAG3BA,EAAG,WAED,MACEA,EAAG,OACH,OACQA,EAAG,kBAAoB,QAEvBA,EAAG,kBAAoB,QAAUA,EAAG,kBAAoB,UAAYA,EAAG,kBAAoB,KAGvGA,EAAG,SAED,eAIgBA,EAAG,WAAa,SAAWA,EAAG,WAAwB,KAGxEA,EAAG,eAED,MACEA,EAAG,QACL,aACgBA,EAAG,WAAa,qBAGlCA,EAAG,qBAED,YAAcA,EAAG,WAAa,oBAEhCA,EAAG,gBAEDA,EAAG,SAAWA,EAAG,oBAEnBA,EAAG,sBAEDA,EAAG,eAAiBA,EAAG,oBAEzBA,EAAG,qBAEDA,EAAG,SAAWA,EAAG,SAAWA,EAAG,oBAEjCA,EAAG,2BAEDA,EAAG,eAAiBA,EAAG,SAAWA,EAAG,oBAEvCA,EAAG,iCAEDA,EAAG,qBAAuBA,EAAG,SAAWA,EAAG,oBAO7CA,EAAG,oBAED,sDAAwDA,EAAG,SAAW,SAExEA,EAAG,gBAEC,MAAQC,EAAkB,UAAYD,EAAG,QAAU,KAC7CA,EAAG,eAAiB,IAAMA,EAAG,sBAAwB,IAE/DA,EAAG,eAGC,mCAA0CA,EAAG,SAAW,qBAC9BA,EAAG,2BAA6BA,EAAG,SAAW,IAE5EA,EAAG,qBAGC,mCAA0CA,EAAG,SAAW,qBAC9BA,EAAG,iCAAmCA,EAAG,SAAW,IAE3EA,CACT,CCpLA,SAAS,OAAQ9qB,EAAoC,CAGnD,OAFgB,MAAM,UAAU,MAAM,KAAK,UAAW,CAAC,EAE/C,QAAQ,SAAU0B,EAAQ,CAC3BA,GAEL,OAAO,KAAKA,CAAM,EAAE,QAAQ,SAAUtB,EAAK,CACzCJ,EAAII,CAAG,EAAIsB,EAAOtB,CAAG,CACtB,CAAA,CACF,CAAA,EAEMJ,CACT,CAEA,SAAS,OAAQA,EAAK,CAAE,OAAO,OAAO,UAAU,SAAS,KAAKA,CAAG,CAAC,CAClE,SAAS,SAAUA,EAAK,CAAE,OAAO,OAAOA,CAAG,IAAM,iBAAiB,CAClE,SAAS,SAAUA,EAAK,CAAE,OAAO,OAAOA,CAAG,IAAM,iBAAiB,CAClE,SAAS,SAAUA,EAAK,CAAE,OAAO,OAAOA,CAAG,IAAM,iBAAiB,CAClE,SAAS,WAAYA,EAAK,CAAE,OAAO,OAAOA,CAAG,IAAM,mBAAmB,CAEtE,SAAS,SAAUmN,EAAK,CAAE,OAAOA,EAAI,QAAQ,uBAAwB,MAAM,CAAC,CAI5E,MAAM,eAAiB,CACrB,UAAW,GACX,WAAY,GACZ,QAAS,EACX,EAEA,SAAS,aAAcnN,EAAK,CAC1B,OAAO,OAAO,KAAKA,GAAO,CAAA,CAAE,EAAE,OAAO,SAAUgrB,EAAKlW,EAAG,CAErD,OAAOkW,GAAO,eAAe,eAAelW,CAAC,CACjD,EAAK,EAAK,CACV,CAEA,MAAM,eAAiB,CACrB,QAAS,CACP,SAAU,SAAU5V,EAAM8c,EAAKiC,EAAM,CACnC,MAAMjb,EAAO9D,EAAK,MAAM8c,CAAG,EAQ3B,OANKiC,EAAK,GAAG,OAEXA,EAAK,GAAG,KAAO,IAAI,OACjB,UAAYA,EAAK,GAAG,SAAWA,EAAK,GAAG,qBAAuBA,EAAK,GAAG,SAAU,GAC1F,GAEUA,EAAK,GAAG,KAAK,KAAKjb,CAAI,EACjBA,EAAK,MAAMib,EAAK,GAAG,IAAI,EAAE,CAAC,EAAE,OAE9B,CACb,CACG,EACD,SAAU,QACV,OAAQ,QACR,KAAM,CACJ,SAAU,SAAU/e,EAAM8c,EAAKiC,EAAM,CACnC,MAAMjb,EAAO9D,EAAK,MAAM8c,CAAG,EAkB3B,OAhBKiC,EAAK,GAAG,UAEXA,EAAK,GAAG,QAAU,IAAI,OACpB,IACAA,EAAK,GAAG,SAGR,sBAAwBA,EAAK,GAAG,WAAa,SAAWA,EAAK,GAAG,gBAAkB,IAClFA,EAAK,GAAG,SACRA,EAAK,GAAG,oBACRA,EAAK,GAAG,SAER,GACV,GAGUA,EAAK,GAAG,QAAQ,KAAKjb,CAAI,EAEvBgZ,GAAO,GAAK9c,EAAK8c,EAAM,CAAC,IAAM,KAC9BA,GAAO,GAAK9c,EAAK8c,EAAM,CAAC,IAAM,IAAc,EACzChZ,EAAK,MAAMib,EAAK,GAAG,OAAO,EAAE,CAAC,EAAE,OAEjC,CACb,CACG,EACD,UAAW,CACT,SAAU,SAAU/e,EAAM8c,EAAKiC,EAAM,CACnC,MAAMjb,EAAO9D,EAAK,MAAM8c,CAAG,EAO3B,OALKiC,EAAK,GAAG,SACXA,EAAK,GAAG,OAAS,IAAI,OACnB,IAAMA,EAAK,GAAG,eAAiB,IAAMA,EAAK,GAAG,gBAAiB,GACxE,GAEUA,EAAK,GAAG,OAAO,KAAKjb,CAAI,EACnBA,EAAK,MAAMib,EAAK,GAAG,MAAM,EAAE,CAAC,EAAE,OAEhC,CACb,CACA,CACA,EAIM,gBAAkB,0VAGlB,aAAe,8EAA8E,MAAM,GAAG,EAE5G,SAAS,eAAgBA,EAAM,CAC7BA,EAAK,UAAY,GACjBA,EAAK,eAAiB,EACxB,CAEA,SAAS,gBAAiB6M,EAAI,CAC5B,OAAO,SAAU5rB,EAAM8c,EAAK,CAC1B,MAAMhZ,EAAO9D,EAAK,MAAM8c,CAAG,EAE3B,OAAI8O,EAAG,KAAK9nB,CAAI,EACPA,EAAK,MAAM8nB,CAAE,EAAE,CAAC,EAAE,OAEpB,CACX,CACA,CAEA,SAAS,kBAAoB,CAC3B,OAAO,SAAUzlB,EAAO4Y,EAAM,CAC5BA,EAAK,UAAU5Y,CAAK,CACxB,CACA,CAIA,SAAS,QAAS4Y,EAAM,CAEtB,MAAM6M,EAAK7M,EAAK,GAAK,UAAUA,EAAK,QAAQ,EAGtCgN,EAAOhN,EAAK,SAAS,MAAK,EAEhCA,EAAK,UAAS,EAETA,EAAK,mBACRgN,EAAK,KAAK,eAAe,EAE3BA,EAAK,KAAKH,EAAG,MAAM,EAEnBA,EAAG,SAAWG,EAAK,KAAK,GAAG,EAE3B,SAASC,EAAOC,EAAK,CAAE,OAAOA,EAAI,QAAQ,SAAUL,EAAG,QAAQ,CAAC,CAEhEA,EAAG,YAAc,OAAOI,EAAMJ,EAAG,eAAe,EAAG,GAAG,EACtDA,EAAG,WAAa,OAAOI,EAAMJ,EAAG,cAAc,EAAG,GAAG,EACpDA,EAAG,iBAAmB,OAAOI,EAAMJ,EAAG,oBAAoB,EAAG,GAAG,EAChEA,EAAG,gBAAkB,OAAOI,EAAMJ,EAAG,mBAAmB,EAAG,GAAG,EAM9D,MAAMM,EAAU,CAAA,EAEhBnN,EAAK,aAAe,CAAE,EAEtB,SAASoN,EAAa5rB,EAAMH,EAAK,CAC/B,MAAM,IAAI,MAAM,+BAAiCG,EAAO,MAAQH,CAAG,CACvE,CAEE,OAAO,KAAK2e,EAAK,WAAW,EAAE,QAAQ,SAAUxe,EAAM,CACpD,MAAMH,EAAM2e,EAAK,YAAYxe,CAAI,EAGjC,GAAIH,IAAQ,KAAQ,OAEpB,MAAMgsB,EAAW,CAAE,SAAU,KAAM,KAAM,IAAI,EAI7C,GAFArN,EAAK,aAAaxe,CAAI,EAAI6rB,EAEtB,SAAShsB,CAAG,EAAG,CACb,SAASA,EAAI,QAAQ,EACvBgsB,EAAS,SAAW,gBAAgBhsB,EAAI,QAAQ,EACvC,WAAWA,EAAI,QAAQ,EAChCgsB,EAAS,SAAWhsB,EAAI,SAExB+rB,EAAY5rB,EAAMH,CAAG,EAGnB,WAAWA,EAAI,SAAS,EAC1BgsB,EAAS,UAAYhsB,EAAI,UACfA,EAAI,UAGd+rB,EAAY5rB,EAAMH,CAAG,EAFrBgsB,EAAS,UAAY,iBAAgB,EAKvC,MACN,CAEI,GAAI,SAAShsB,CAAG,EAAG,CACjB8rB,EAAQ,KAAK3rB,CAAI,EACjB,MACN,CAEI4rB,EAAY5rB,EAAMH,CAAG,CACtB,CAAA,EAMD8rB,EAAQ,QAAQ,SAAU9nB,EAAO,CAC1B2a,EAAK,aAAaA,EAAK,YAAY3a,CAAK,CAAC,IAM9C2a,EAAK,aAAa3a,CAAK,EAAE,SACvB2a,EAAK,aAAaA,EAAK,YAAY3a,CAAK,CAAC,EAAE,SAC7C2a,EAAK,aAAa3a,CAAK,EAAE,UACvB2a,EAAK,aAAaA,EAAK,YAAY3a,CAAK,CAAC,EAAE,UAC9C,CAAA,EAKD2a,EAAK,aAAa,EAAE,EAAI,CAAE,SAAU,KAAM,UAAW,iBAAkB,CAAA,EAKvE,MAAMsN,EAAQ,OAAO,KAAKtN,EAAK,YAAY,EACxC,OAAO,SAAUxe,EAAM,CAEtB,OAAOA,EAAK,OAAS,GAAKwe,EAAK,aAAaxe,CAAI,CACjD,CAAA,EACA,IAAI,QAAQ,EACZ,KAAK,GAAG,EAEXwe,EAAK,GAAG,YAAc,OAAO,oBAA2B6M,EAAG,SAAW,MAAQS,EAAQ,IAAK,GAAG,EAC9FtN,EAAK,GAAG,cAAgB,OAAO,oBAA2B6M,EAAG,SAAW,MAAQS,EAAQ,IAAK,IAAI,EACjGtN,EAAK,GAAG,gBAAkB,OAAO,IAAMA,EAAK,GAAG,cAAc,OAAQ,GAAG,EAExEA,EAAK,GAAG,QAAU,OAChB,IAAMA,EAAK,GAAG,YAAY,OAAS,MAAQA,EAAK,GAAG,gBAAgB,OAAS,MAC5E,GACJ,EAME,eAAeA,CAAI,CACrB,CAOA,SAAS,MAAOA,EAAMuN,EAAO,CAC3B,MAAMzoB,EAAQkb,EAAK,UACbhb,EAAMgb,EAAK,eACX/e,EAAO+e,EAAK,eAAe,MAAMlb,EAAOE,CAAG,EAOjD,KAAK,OAASgb,EAAK,WAAW,YAAW,EAMzC,KAAK,MAAQlb,EAAQyoB,EAMrB,KAAK,UAAYvoB,EAAMuoB,EAMvB,KAAK,IAAMtsB,EAMX,KAAK,KAAOA,EAMZ,KAAK,IAAMA,CACb,CAEA,SAAS,YAAa+e,EAAMuN,EAAO,CACjC,MAAMnmB,EAAQ,IAAI,MAAM4Y,EAAMuN,CAAK,EAEnC,OAAAvN,EAAK,aAAa5Y,EAAM,MAAM,EAAE,UAAUA,EAAO4Y,CAAI,EAE9C5Y,CACT,CAwCA,SAAS,UAAWjB,EAAS3D,EAAS,CACpC,GAAI,EAAE,gBAAgB,WACpB,OAAO,IAAI,UAAU2D,EAAS3D,CAAO,EAGlCA,GACC,aAAa2D,CAAO,IACtB3D,EAAU2D,EACVA,EAAU,CAAA,GAId,KAAK,SAAW,OAAO,CAAE,EAAE,eAAgB3D,CAAO,EAGlD,KAAK,UAAY,GACjB,KAAK,eAAiB,GACtB,KAAK,WAAa,GAClB,KAAK,eAAiB,GAEtB,KAAK,YAAc,OAAO,CAAE,EAAE,eAAgB2D,CAAO,EACrD,KAAK,aAAe,CAAA,EAEpB,KAAK,SAAW,aAChB,KAAK,kBAAoB,GAEzB,KAAK,GAAK,CAAA,EAEV,QAAQ,IAAI,CACd,CASA,UAAU,UAAU,IAAM,SAASqnB,EAAK9nB,EAAQQ,EAAY,CAC1D,YAAK,YAAYR,CAAM,EAAIQ,EAC3B,QAAQ,IAAI,EACL,IACT,EAQA,UAAU,UAAU,IAAM,SAASunB,EAAKjrB,EAAS,CAC/C,YAAK,SAAW,OAAO,KAAK,SAAUA,CAAO,EACtC,IACT,EAOA,UAAU,UAAU,KAAO,SAASkrB,EAAMzsB,EAAM,CAK9C,GAHA,KAAK,eAAiBA,EACtB,KAAK,UAAY,GAEb,CAACA,EAAK,OAAU,MAAO,GAE3B,IAAI2X,EAAG+U,EAAIC,EAAI/rB,EAAK0rB,EAAOve,EAAM6d,EAAIgB,EAASC,EAG9C,GAAI,KAAK,GAAG,YAAY,KAAK7sB,CAAI,GAG/B,IAFA4rB,EAAK,KAAK,GAAG,cACbA,EAAG,UAAY,GACPjU,EAAIiU,EAAG,KAAK5rB,CAAI,KAAO,MAE7B,GADAY,EAAM,KAAK,aAAaZ,EAAM2X,EAAE,CAAC,EAAGiU,EAAG,SAAS,EAC5ChrB,EAAK,CACP,KAAK,WAAa+W,EAAE,CAAC,EACrB,KAAK,UAAYA,EAAE,MAAQA,EAAE,CAAC,EAAE,OAChC,KAAK,eAAiBA,EAAE,MAAQA,EAAE,CAAC,EAAE,OAAS/W,EAC9C,KACR,EAIE,OAAI,KAAK,SAAS,WAAa,KAAK,aAAa,OAAO,IAEtDgsB,EAAU5sB,EAAK,OAAO,KAAK,GAAG,eAAe,EACzC4sB,GAAW,IAET,KAAK,UAAY,GAAKA,EAAU,KAAK,aAClCF,EAAK1sB,EAAK,MAAM,KAAK,SAAS,QAAU,KAAK,GAAG,WAAa,KAAK,GAAG,gBAAgB,KAAO,OAC/FssB,EAAQI,EAAG,MAAQA,EAAG,CAAC,EAAE,QAErB,KAAK,UAAY,GAAKJ,EAAQ,KAAK,aACrC,KAAK,WAAa,GAClB,KAAK,UAAYA,EACjB,KAAK,eAAiBI,EAAG,MAAQA,EAAG,CAAC,EAAE,UAO7C,KAAK,SAAS,YAAc,KAAK,aAAa,SAAS,IAEzDG,EAAS7sB,EAAK,QAAQ,GAAG,EACrB6sB,GAAU,IAGPF,EAAK3sB,EAAK,MAAM,KAAK,GAAG,WAAW,KAAO,OAC7CssB,EAAQK,EAAG,MAAQA,EAAG,CAAC,EAAE,OACzB5e,EAAO4e,EAAG,MAAQA,EAAG,CAAC,EAAE,QAEpB,KAAK,UAAY,GAAKL,EAAQ,KAAK,WAClCA,IAAU,KAAK,WAAave,EAAO,KAAK,kBAC3C,KAAK,WAAa,UAClB,KAAK,UAAYue,EACjB,KAAK,eAAiBve,KAMvB,KAAK,WAAa,CAC3B,EASA,UAAU,UAAU,QAAU,SAAS+e,EAAS9sB,EAAM,CACpD,OAAO,KAAK,GAAG,QAAQ,KAAKA,CAAI,CAClC,EAWA,UAAU,UAAU,aAAe,SAAS+sB,EAAc/sB,EAAMyE,EAAQqY,EAAK,CAE3E,OAAK,KAAK,aAAarY,EAAO,YAAa,CAAA,EAGpC,KAAK,aAAaA,EAAO,YAAa,CAAA,EAAE,SAASzE,EAAM8c,EAAK,IAAI,EAF9D,CAGX,EAkBA,UAAU,UAAU,MAAQ,SAAS3W,EAAOnG,EAAM,CAChD,MAAM8C,EAAS,CAAA,EACf,IAAIwpB,EAAQ,EAGR,KAAK,WAAa,GAAK,KAAK,iBAAmBtsB,IACjD8C,EAAO,KAAK,YAAY,KAAMwpB,CAAK,CAAC,EACpCA,EAAQ,KAAK,gBAIf,IAAIxoB,EAAOwoB,EAAQtsB,EAAK,MAAMssB,CAAK,EAAItsB,EAGvC,KAAO,KAAK,KAAK8D,CAAI,GACnBhB,EAAO,KAAK,YAAY,KAAMwpB,CAAK,CAAC,EAEpCxoB,EAAOA,EAAK,MAAM,KAAK,cAAc,EACrCwoB,GAAS,KAAK,eAGhB,OAAIxpB,EAAO,OACFA,EAGF,IACT,EAQA,UAAU,UAAU,aAAe,SAASkqB,EAAchtB,EAAM,CAK9D,GAHA,KAAK,eAAiBA,EACtB,KAAK,UAAY,GAEb,CAACA,EAAK,OAAQ,OAAO,KAEzB,MAAM2X,EAAI,KAAK,GAAG,gBAAgB,KAAK3X,CAAI,EAC3C,GAAI,CAAC2X,EAAG,OAAO,KAEf,MAAM/W,EAAM,KAAK,aAAaZ,EAAM2X,EAAE,CAAC,EAAGA,EAAE,CAAC,EAAE,MAAM,EACrD,OAAK/W,GAEL,KAAK,WAAa+W,EAAE,CAAC,EACrB,KAAK,UAAYA,EAAE,MAAQA,EAAE,CAAC,EAAE,OAChC,KAAK,eAAiBA,EAAE,MAAQA,EAAE,CAAC,EAAE,OAAS/W,EAEvC,YAAY,KAAM,CAAC,GANT,IAOnB,EAiBA,UAAU,UAAU,KAAO,SAASmrB,EAAMtM,EAAMwN,EAAS,CAGvD,OAFAxN,EAAO,MAAM,QAAQA,CAAI,EAAIA,EAAO,CAACA,CAAI,EAEpCwN,GAOL,KAAK,SAAW,KAAK,SAAS,OAAOxN,CAAI,EACtC,KAAI,EACJ,OAAO,SAAUyN,EAAIhmB,EAAKoX,EAAK,CAC9B,OAAO4O,IAAO5O,EAAIpX,EAAM,CAAC,CAC1B,CAAA,EACA,QAAO,EAEV,QAAQ,IAAI,EACL,OAdL,KAAK,SAAWuY,EAAK,MAAK,EAC1B,KAAK,kBAAoB,GACzB,QAAQ,IAAI,EACL,KAYX,EAOA,UAAU,UAAU,UAAY,SAAS0N,EAAWhnB,EAAO,CAIpDA,EAAM,SAAUA,EAAM,IAAM,UAAYA,EAAM,KAE/CA,EAAM,SAAW,WAAa,CAAC,YAAY,KAAKA,EAAM,GAAG,IAC3DA,EAAM,IAAM,UAAYA,EAAM,IAElC,EAOA,UAAU,UAAU,UAAY,SAASinB,GAAa,CACtD,EC5nBA,MAAM,OAAS,WAGT,KAAO,GACP,KAAO,EACP,KAAO,GACP,KAAO,GACP,KAAO,IACP,YAAc,GACd,SAAW,IACX,UAAY,IAGZ,cAAgB,QAChB,cAAgB,aAChB,gBAAkB,4BAGlB,OAAS,CACd,SAAY,kDACZ,YAAa,iDACb,gBAAiB,eAClB,EAGM,cAAgB,KAAO,KACvB,MAAQ,KAAK,MACb,mBAAqB,OAAO,aAUlC,SAAS,MAAM/sB,EAAM,CACpB,MAAM,IAAI,WAAW,OAAOA,CAAI,CAAC,CAClC,CAUA,SAAS,IAAIgtB,EAAO/Y,EAAU,CAC7B,MAAMxR,EAAS,CAAE,EACjB,IAAIJ,EAAS2qB,EAAM,OACnB,KAAO3qB,KACNI,EAAOJ,CAAM,EAAI4R,EAAS+Y,EAAM3qB,CAAM,CAAC,EAExC,OAAOI,CACR,CAYA,SAAS,UAAUwqB,EAAQhZ,EAAU,CACpC,MAAMiZ,EAAQD,EAAO,MAAM,GAAG,EAC9B,IAAIxqB,EAAS,GACTyqB,EAAM,OAAS,IAGlBzqB,EAASyqB,EAAM,CAAC,EAAI,IACpBD,EAASC,EAAM,CAAC,GAGjBD,EAASA,EAAO,QAAQ,gBAAiB,GAAM,EAC/C,MAAME,EAASF,EAAO,MAAM,GAAG,EACzBG,EAAU,IAAID,EAAQlZ,CAAQ,EAAE,KAAK,GAAG,EAC9C,OAAOxR,EAAS2qB,CACjB,CAeA,SAAS,WAAW7qB,EAAQ,CAC3B,MAAMoY,EAAS,CAAE,EACjB,IAAI0S,EAAU,EACd,MAAMhrB,EAASE,EAAO,OACtB,KAAO8qB,EAAUhrB,GAAQ,CACxB,MAAMgD,EAAQ9C,EAAO,WAAW8qB,GAAS,EACzC,GAAIhoB,GAAS,OAAUA,GAAS,OAAUgoB,EAAUhrB,EAAQ,CAE3D,MAAMirB,EAAQ/qB,EAAO,WAAW8qB,GAAS,GACpCC,EAAQ,QAAW,MACvB3S,EAAO,OAAOtV,EAAQ,OAAU,KAAOioB,EAAQ,MAAS,KAAO,GAI/D3S,EAAO,KAAKtV,CAAK,EACjBgoB,IAEJ,MACG1S,EAAO,KAAKtV,CAAK,CAEpB,CACC,OAAOsV,CACR,CAUA,MAAM,WAAa4S,GAAc,OAAO,cAAc,GAAGA,CAAU,EAW7D,aAAe,SAAS7S,EAAW,CACxC,OAAIA,GAAa,IAAQA,EAAY,GAC7B,IAAMA,EAAY,IAEtBA,GAAa,IAAQA,EAAY,GAC7BA,EAAY,GAEhBA,GAAa,IAAQA,EAAY,IAC7BA,EAAY,GAEb,IACR,EAaM,aAAe,SAAS8S,EAAOC,EAAM,CAG1C,OAAOD,EAAQ,GAAK,IAAMA,EAAQ,MAAQC,GAAQ,IAAM,EACzD,EAOM,MAAQ,SAASnnB,EAAOonB,EAAWC,EAAW,CACnD,IAAIpY,EAAI,EAGR,IAFAjP,EAAQqnB,EAAY,MAAMrnB,EAAQ,IAAI,EAAIA,GAAS,EACnDA,GAAS,MAAMA,EAAQonB,CAAS,EACFpnB,EAAQ,cAAgB,MAAQ,EAAGiP,GAAK,KACrEjP,EAAQ,MAAMA,EAAQ,aAAa,EAEpC,OAAO,MAAMiP,GAAK,cAAgB,GAAKjP,GAASA,EAAQ,KAAK,CAC9D,EASM,OAAS,SAASrF,EAAO,CAE9B,MAAM0Z,EAAS,CAAE,EACXiT,EAAc3sB,EAAM,OAC1B,IAAIT,EAAI,EACJyS,EAAI,SACJ4a,EAAO,YAMPC,EAAQ7sB,EAAM,YAAY,SAAS,EACnC6sB,EAAQ,IACXA,EAAQ,GAGT,QAAS5T,EAAI,EAAGA,EAAI4T,EAAO,EAAE5T,EAExBjZ,EAAM,WAAWiZ,CAAC,GAAK,KAC1B,MAAM,WAAW,EAElBS,EAAO,KAAK1Z,EAAM,WAAWiZ,CAAC,CAAC,EAMhC,QAAS9X,EAAQ0rB,EAAQ,EAAIA,EAAQ,EAAI,EAAG1rB,EAAQwrB,GAAwC,CAO3F,MAAMG,EAAOvtB,EACb,QAAS0S,EAAI,EAAGqC,EAAI,MAA0BA,GAAK,KAAM,CAEpDnT,GAASwrB,GACZ,MAAM,eAAe,EAGtB,MAAMJ,EAAQ,aAAavsB,EAAM,WAAWmB,GAAO,CAAC,EAEhDorB,GAAS,MACZ,MAAM,eAAe,EAElBA,EAAQ,OAAO,OAAShtB,GAAK0S,CAAC,GACjC,MAAM,UAAU,EAGjB1S,GAAKgtB,EAAQta,EACb,MAAMqE,EAAIhC,GAAKsY,EAAO,KAAQtY,GAAKsY,EAAO,KAAO,KAAOtY,EAAIsY,EAE5D,GAAIL,EAAQjW,EACX,MAGD,MAAMyW,EAAa,KAAOzW,EACtBrE,EAAI,MAAM,OAAS8a,CAAU,GAChC,MAAM,UAAU,EAGjB9a,GAAK8a,CAER,CAEE,MAAMhb,EAAM2H,EAAO,OAAS,EAC5BkT,EAAO,MAAMrtB,EAAIutB,EAAM/a,EAAK+a,GAAQ,CAAC,EAIjC,MAAMvtB,EAAIwS,CAAG,EAAI,OAASC,GAC7B,MAAM,UAAU,EAGjBA,GAAK,MAAMzS,EAAIwS,CAAG,EAClBxS,GAAKwS,EAGL2H,EAAO,OAAOna,IAAK,EAAGyS,CAAC,CAEzB,CAEC,OAAO,OAAO,cAAc,GAAG0H,CAAM,CACtC,EASM,OAAS,SAAS1Z,EAAO,CAC9B,MAAM0Z,EAAS,CAAE,EAGjB1Z,EAAQ,WAAWA,CAAK,EAGxB,MAAM2sB,EAAc3sB,EAAM,OAG1B,IAAIgS,EAAI,SACJ3M,EAAQ,EACRunB,EAAO,YAGX,UAAWI,KAAgBhtB,EACtBgtB,EAAe,KAClBtT,EAAO,KAAK,mBAAmBsT,CAAY,CAAC,EAI9C,MAAMC,EAAcvT,EAAO,OAC3B,IAAIwT,EAAiBD,EAWrB,IALIA,GACHvT,EAAO,KAAK,SAAS,EAIfwT,EAAiBP,GAAa,CAIpC,IAAItW,EAAI,OACR,UAAW2W,KAAgBhtB,EACtBgtB,GAAgBhb,GAAKgb,EAAe3W,IACvCA,EAAI2W,GAMN,MAAMG,EAAwBD,EAAiB,EAC3C7W,EAAIrE,EAAI,OAAO,OAAS3M,GAAS8nB,CAAqB,GACzD,MAAM,UAAU,EAGjB9nB,IAAUgR,EAAIrE,GAAKmb,EACnBnb,EAAIqE,EAEJ,UAAW2W,KAAgBhtB,EAI1B,GAHIgtB,EAAehb,GAAK,EAAE3M,EAAQ,QACjC,MAAM,UAAU,EAEb2nB,IAAiBhb,EAAG,CAEvB,IAAIob,EAAI/nB,EACR,QAASiP,EAAI,MAA0BA,GAAK,KAAM,CACjD,MAAMgC,EAAIhC,GAAKsY,EAAO,KAAQtY,GAAKsY,EAAO,KAAO,KAAOtY,EAAIsY,EAC5D,GAAIQ,EAAI9W,EACP,MAED,MAAM+W,EAAUD,EAAI9W,EACdyW,EAAa,KAAOzW,EAC1BoD,EAAO,KACN,mBAAmB,aAAapD,EAAI+W,EAAUN,EAAY,CAAC,CAAC,CAC5D,EACDK,EAAI,MAAMC,EAAUN,CAAU,CACnC,CAEIrT,EAAO,KAAK,mBAAmB,aAAa0T,EAAG,CAAC,CAAC,CAAC,EAClDR,EAAO,MAAMvnB,EAAO8nB,EAAuBD,IAAmBD,CAAW,EACzE5nB,EAAQ,EACR,EAAE6nB,CACN,CAGE,EAAE7nB,EACF,EAAE2M,CAEJ,CACC,OAAO0H,EAAO,KAAK,EAAE,CACtB,EAaM,UAAY,SAAS1Z,EAAO,CACjC,OAAO,UAAUA,EAAO,SAASsB,EAAQ,CACxC,OAAO,cAAc,KAAKA,CAAM,EAC7B,OAAOA,EAAO,MAAM,CAAC,EAAE,YAAa,CAAA,EACpCA,CACL,CAAE,CACF,EAaM,QAAU,SAAStB,EAAO,CAC/B,OAAO,UAAUA,EAAO,SAASsB,EAAQ,CACxC,OAAO,cAAc,KAAKA,CAAM,EAC7B,OAAS,OAAOA,CAAM,EACtBA,CACL,CAAE,CACF,EAKM,SAAW,CAMhB,QAAW,QAQX,KAAQ,CACP,OAAU,WACV,OAAU,UACV,EACD,OACA,OACA,QACA,SACD,ECtbe,YAAA,CACb,QAAS,CAEP,KAAM,GAGN,SAAU,GAGV,OAAQ,GAGR,WAAY,YAGZ,QAAS,GAGT,YAAa,GAOb,OAAQ,OAQR,UAAW,KAGX,WAAY,GACb,EAED,WAAY,CACV,KAAM,CAAE,EACR,MAAO,CAAE,EACT,OAAQ,CAAA,CACZ,CACA,EC3Ce,SAAA,CACb,QAAS,CAEP,KAAM,GAGN,SAAU,GAGV,OAAQ,GAGR,WAAY,YAGZ,QAAS,GAGT,YAAa,GAOb,OAAQ,OAQR,UAAW,KAGX,WAAY,EACb,EAED,WAAY,CAEV,KAAM,CACJ,MAAO,CACL,YACA,QACA,SACA,WACR,CACK,EAED,MAAO,CACL,MAAO,CACL,WACR,CACK,EAED,OAAQ,CACN,MAAO,CACL,MACD,EACD,OAAQ,CACN,gBACA,gBACR,CACA,CACA,CACA,ECnEe,eAAA,CACb,QAAS,CAEP,KAAM,GAGN,SAAU,GAGV,OAAQ,GAGR,WAAY,YAGZ,QAAS,GAGT,YAAa,GAOb,OAAQ,OAQR,UAAW,KAGX,WAAY,EACb,EAED,WAAY,CAEV,KAAM,CACJ,MAAO,CACL,YACA,QACA,SACA,WACR,CACK,EAED,MAAO,CACL,MAAO,CACL,aACA,OACA,QACA,UACA,KACA,aACA,WACA,OACA,YACA,WACR,CACK,EAED,OAAQ,CACN,MAAO,CACL,WACA,YACA,WACA,SACA,SACA,cACA,QACA,OACA,UACA,MACD,EACD,OAAQ,CACN,gBACA,WACA,gBACR,CACA,CACA,CACA,ECvEM,OAAS,CACb,QAAS,YACT,KAAM,SACN,WAAY,cACd,EAUM,aAAe,oCACf,aAAe,oCAErB,SAAS,aAAc0U,EAAK,CAE1B,MAAMrJ,EAAMqJ,EAAI,KAAI,EAAG,YAAW,EAElC,OAAO,aAAa,KAAKrJ,CAAG,EAAI,aAAa,KAAKA,CAAG,EAAI,EAC3D,CAEA,MAAM,oBAAsB,CAAC,QAAS,SAAU,SAAS,EAEzD,SAAS,cAAeqJ,EAAK,CAC3B,MAAMsX,EAASC,SAAYvX,EAAK,EAAI,EAEpC,GAAIsX,EAAO,WAOL,CAACA,EAAO,UAAY,oBAAoB,QAAQA,EAAO,QAAQ,GAAK,GACtE,GAAI,CACFA,EAAO,SAAW,SAAS,QAAQA,EAAO,QAAQ,CACnD,MAAY,CAAA,CAIjB,OAAOE,SAAaC,OAAaH,CAAM,CAAC,CAC1C,CAEA,SAAS,kBAAmBtX,EAAK,CAC/B,MAAMsX,EAASC,SAAYvX,EAAK,EAAI,EAEpC,GAAIsX,EAAO,WAOL,CAACA,EAAO,UAAY,oBAAoB,QAAQA,EAAO,QAAQ,GAAK,GACtE,GAAI,CACFA,EAAO,SAAW,SAAS,UAAUA,EAAO,QAAQ,CACrD,MAAY,CAAA,CAKjB,OAAOI,SAAaD,OAAaH,CAAM,EAAGI,SAAa,aAAe,GAAG,CAC3E,CAuIA,SAAS,WAAYC,EAAY1tB,EAAS,CACxC,GAAI,EAAE,gBAAgB,YACpB,OAAO,IAAI,WAAW0tB,EAAY1tB,CAAO,EAGtCA,GACE2tB,WAAeD,CAAU,IAC5B1tB,EAAU0tB,GAAc,CAAA,EACxBA,EAAa,WAWjB,KAAK,OAAS,IAAI,aASlB,KAAK,MAAQ,IAAI,YASjB,KAAK,KAAO,IAAIE,KAuBhB,KAAK,SAAW,IAAI,SASpB,KAAK,QAAU,IAAI,UAiBnB,KAAK,aAAe,aAQpB,KAAK,cAAgB,cAOrB,KAAK,kBAAoB,kBAUzB,KAAK,MAAQ,MAQb,KAAK,QAAUC,SAAa,CAAA,EAAI,OAAO,EAEvC,KAAK,QAAU,CAAA,EACf,KAAK,UAAUH,CAAU,EAErB1tB,GAAW,KAAK,IAAIA,CAAO,CACjC,CAqBA,WAAW,UAAU,IAAM,SAAUA,EAAS,CAC5C6tB,gBAAa,KAAK,QAAS7tB,CAAO,EAC3B,IACT,EAYA,WAAW,UAAU,UAAY,SAAU8tB,EAAS,CAClD,MAAMtQ,EAAO,KAEb,GAAImQ,WAAeG,CAAO,EAAG,CAC3B,MAAMJ,EAAaI,EAEnB,GADAA,EAAU,OAAOJ,CAAU,EACvB,CAACI,EAAW,MAAM,IAAI,MAAM,+BAAiCJ,EAAa,eAAe,CACjG,CAEE,GAAI,CAACI,EAAW,MAAM,IAAI,MAAM,4CAA6C,EAE7E,OAAIA,EAAQ,SAAWtQ,EAAK,IAAIsQ,EAAQ,OAAO,EAE3CA,EAAQ,YACV,OAAO,KAAKA,EAAQ,UAAU,EAAE,QAAQ,SAAU9uB,EAAM,CAClD8uB,EAAQ,WAAW9uB,CAAI,EAAE,OAC3Bwe,EAAKxe,CAAI,EAAE,MAAM,WAAW8uB,EAAQ,WAAW9uB,CAAI,EAAE,KAAK,EAExD8uB,EAAQ,WAAW9uB,CAAI,EAAE,QAC3Bwe,EAAKxe,CAAI,EAAE,OAAO,WAAW8uB,EAAQ,WAAW9uB,CAAI,EAAE,MAAM,CAE/D,CAAA,EAEI,IACT,EAmBA,WAAW,UAAU,OAAS,SAAUkf,EAAMC,EAAe,CAC3D,IAAI5c,EAAS,CAAA,EAER,MAAM,QAAQ2c,CAAI,IAAKA,EAAO,CAACA,CAAI,GAExC,CAAC,OAAQ,QAAS,QAAQ,EAAE,QAAQ,SAAUN,EAAO,CACnDrc,EAASA,EAAO,OAAO,KAAKqc,CAAK,EAAE,MAAM,OAAOM,EAAM,EAAI,CAAC,CAC/D,EAAK,IAAI,EAEP3c,EAASA,EAAO,OAAO,KAAK,OAAO,OAAO,OAAO2c,EAAM,EAAI,CAAC,EAE5D,MAAM6P,EAAS7P,EAAK,OAAO,SAAUlf,EAAM,CAAE,OAAOuC,EAAO,QAAQvC,CAAI,EAAI,CAAG,CAAA,EAE9E,GAAI+uB,EAAO,QAAU,CAAC5P,EACpB,MAAM,IAAI,MAAM,iDAAmD4P,CAAM,EAG3E,OAAO,IACT,EASA,WAAW,UAAU,QAAU,SAAU7P,EAAMC,EAAe,CAC5D,IAAI5c,EAAS,CAAA,EAER,MAAM,QAAQ2c,CAAI,IAAKA,EAAO,CAACA,CAAI,GAExC,CAAC,OAAQ,QAAS,QAAQ,EAAE,QAAQ,SAAUN,EAAO,CACnDrc,EAASA,EAAO,OAAO,KAAKqc,CAAK,EAAE,MAAM,QAAQM,EAAM,EAAI,CAAC,CAChE,EAAK,IAAI,EAEP3c,EAASA,EAAO,OAAO,KAAK,OAAO,OAAO,QAAQ2c,EAAM,EAAI,CAAC,EAE7D,MAAM6P,EAAS7P,EAAK,OAAO,SAAUlf,EAAM,CAAE,OAAOuC,EAAO,QAAQvC,CAAI,EAAI,CAAG,CAAA,EAE9E,GAAI+uB,EAAO,QAAU,CAAC5P,EACpB,MAAM,IAAI,MAAM,kDAAoD4P,CAAM,EAE5E,OAAO,IACT,EAkBA,WAAW,UAAU,IAAM,SAAUC,EAA2B,CAC9D,MAAMzmB,EAAO,CAAC,IAAI,EAAE,OAAO,MAAM,UAAU,MAAM,KAAK,UAAW,CAAC,CAAC,EACnE,OAAAymB,EAAO,MAAMA,EAAQzmB,CAAI,EAClB,IACT,EAiBA,WAAW,UAAU,MAAQ,SAAU+T,EAAKmB,EAAK,CAC/C,GAAI,OAAOnB,GAAQ,SACjB,MAAM,IAAI,MAAM,+BAA+B,EAGjD,MAAMjU,EAAQ,IAAI,KAAK,KAAK,MAAMiU,EAAK,KAAMmB,CAAG,EAEhD,YAAK,KAAK,QAAQpV,CAAK,EAEhBA,EAAM,MACf,EAaA,WAAW,UAAU,OAAS,SAAUiU,EAAKmB,EAAK,CAChD,OAAAA,EAAMA,GAAO,CAAA,EAEN,KAAK,SAAS,OAAO,KAAK,MAAMnB,EAAKmB,CAAG,EAAG,KAAK,QAASA,CAAG,CACrE,EAWA,WAAW,UAAU,YAAc,SAAUnB,EAAKmB,EAAK,CACrD,MAAMpV,EAAQ,IAAI,KAAK,KAAK,MAAMiU,EAAK,KAAMmB,CAAG,EAEhD,OAAApV,EAAM,WAAa,GACnB,KAAK,KAAK,QAAQA,CAAK,EAEhBA,EAAM,MACf,EAUA,WAAW,UAAU,aAAe,SAAUiU,EAAKmB,EAAK,CACtD,OAAAA,EAAMA,GAAO,CAAA,EAEN,KAAK,SAAS,OAAO,KAAK,YAAYnB,EAAKmB,CAAG,EAAG,KAAK,QAASA,CAAG,CAC3E,ECziBA,MAAMzL,KAAK,IAAI,WAGO,eAAA,oBAAoBW,EAAcC,EAAc,CAC9D,MAAAkF,EAAQ,SAAS,eAAe,aAAa,EACnDA,EAAM,UAAY,iCAGlB,MAAMC,EAA+C,CAAC,EAEtD,UAAW9W,KAAQ,MAAM,UAAU0R,EAAMC,CAAI,EAAG,CAExC,MAAAoF,EAAQ,MAAM,SAAS/W,CAAI,EAC3BgR,EAAO,UAAU+F,CAAG,GAEtB/F,GAAA,YAAAA,EAAM,QAAS,cACjB8F,EAAM,KAAK,CAAE,KAAA9F,EAA8B,KAAAhR,CAAA,CAAM,CACnD,CAKE,GADJ6W,EAAM,UAAY,GACd,CAACC,EAAM,OAAQ,CACjBD,EAAM,YAAc,2BACpB,MAAA,CAIFC,EAAM,QAAQ,CAAC,CAAE,KAAA9F,EAAM,KAAAhR,KAAW,CAE1B,MAAAguB,EAAM,SAAS,cAAc,SAAS,EAC5CA,EAAI,UAAY,+BAGV,MAAA/W,EAAS,SAAS,cAAc,IAAI,EAC1CA,EAAO,UACL,kDACFA,EAAO,UAAY;AAAA,cACTjG,EAAK,KAAK;AAAA,wCACgBA,EAAK,KAAK;AAAA;AAAA;AAAA,MAI9CiG,EACG,cAAc,QAAQ,EACtB,iBAAiB,QAAS,SAAY,CAChC,QAAQ,sBAAsBjG,EAAK,KAAK,IAAI,IACjD,MAAM,WAAWhR,CAAI,EACrB,oBAAoB0R,EAAMC,CAAI,EAAA,CAC/B,EAGG,MAAA/K,EAAO,SAAS,cAAc,KAAK,EACzCA,EAAK,UAAYmK,KAAG,OAAOC,EAAK,OAAO,EAEnCgd,EAAA,OAAO/W,EAAQrQ,CAAI,EACvBiQ,EAAM,YAAYmX,CAAG,CAAA,CACtB,CACH,CC1DA,MAAM,GAAK,IAAI,WAGO,eAAA,oBAAoBtc,EAAcC,EAAc,CAC9D,MAAAkF,EAAQ,SAAS,eAAe,aAAa,EACnDA,EAAM,UAAY,iCAGlB,MAAMC,EAA+C,CAAC,EAEtD,UAAW9W,KAAQ,MAAM,UAAU0R,EAAMC,CAAI,EAAG,CAExC,MAAAoF,EAAO,MAAM,SAAS/W,CAAI,EAC1BiuB,EAAQ,UAAUlX,CAAG,GAEvBkX,GAAA,YAAAA,EAAO,QAAS,cAClBnX,EAAM,KAAK,CAAE,KAAMmX,EAAyB,KAAAjuB,EAAM,CACpD,CAKE,GADJ6W,EAAM,UAAY,GACd,CAACC,EAAM,OAAQ,CACjBD,EAAM,YAAc,qBACpB,MAAA,CAIFC,EAAM,QAAQ,CAAC,CAAE,KAAA9F,EAAM,KAAAhR,KAAW,CAE1B,MAAAkuB,EAAO,SAAS,cAAc,SAAS,EAC7CA,EAAK,UAAY,OAGX,MAAAjX,EAAS,SAAS,cAAc,IAAI,EAC1CA,EAAO,UACL,uDACFA,EAAO,UAAY;AAAA,cACTjG,EAAK,KAAK;AAAA,wCACgBA,EAAK,KAAK;AAAA;AAAA;AAAA,MAI9CiG,EACG,cAAc,QAAQ,EACtB,iBAAiB,QAAS,SAAY,CAChC,QAAQ,sBAAsBjG,EAAK,KAAK,IAAI,IACjD,MAAM,WAAWhR,CAAI,EACrB,oBAAoB0R,EAAMC,CAAI,EAAA,CAC/B,EAGG,MAAA/K,EAAO,SAAS,cAAc,KAAK,EACzCA,EAAK,UAAY,0BACjBA,EAAK,UAAY,GAAG,OAAOoK,EAAK,OAAO,EAElCkd,EAAA,OAAOjX,EAAQrQ,CAAI,EACxBiQ,EAAM,YAAYqX,CAAI,CAAA,CACvB,CACH,CCzDO,SAAS,iBAAkB,cAChCnY,EAAA,GAAG,kBAAkB,IAArB,MAAAA,EAA2B,iBAAiB,QAAS,IAAM,KAAK,SAAS,IACzEoY,EAAA,GAAG,qBAAqB,IAAxB,MAAAA,EAA2B,iBAAiB,QAAS,IAAM,KAAK,YAAY,IAC5EC,EAAA,GAAG,qBAAqB,IAAxB,MAAAA,EAA2B,iBAAiB,QAAS,IAAM,KAAK,YAAY,IAC5EC,EAAA,GAAG,kBAAkB,IAArB,MAAAA,EAA2B,iBAAiB,QAAS,MACvD,CAIA,SAAS,KAAKlT,EAAY,CACxB,GAAG,cAAc,EAAE,UAAU,OAAO,kBAAkB,EACtD,KAAM,CAAE,KAAAzJ,EAAM,QAAA4c,CAAQ,EAAI,MAAM,SAC5BnT,IAAS,UAAoC,kBAAAzJ,EAAM4c,CAAO,EACrDnT,IAAS,aAAmC,qBAAAzJ,EAAM4c,CAAO,EAClC,qBAAqB5c,EAAM4c,CAAO,CACpE,CACA,SAAS,OAAQ,CAAE,GAAG,cAAc,EAAE,UAAU,IAAI,kBAAkB,CAAG,CAIzE,SAAS,kBAAkB5c,EAAcC,EAAc,CAClD,GAAA,cAAc,EAAE,YAAc,cAC3B,MAAA/K,EAAO,GAAG,aAAa,EACxBA,EAAA,UAAY,OAAO8K,EAAMC,CAAI,EAE5B,MAAA4c,EAAW,MAAM,gBAAgB,EACjCC,EAAW,MAAM,cAAc,EAE/BC,EAAY,IAAI,gBAAgB,EAChCC,EAAU,OAAO,mBAAoB,2BACzC,IAAMD,EAAU,YAAY,WAAY,CAAA,CAC1C,EAEA7nB,EAAK,OAAO2nB,EAAUC,EAAUC,EAAWC,EAAS,OAAO,SAAY,CACrE,MAAMC,EAAQ,MAAM,KAAKF,EAAU,QAAQ,EAAE,IAAI,UAAU,EACrDzd,EAAoB,CACxB,KAAM,UACN,MAAOud,EAAS,MAAM,KAAK,EAC3B,MAAOC,EAAS,MAAM,KAAK,EAC3B,MAAAG,CACF,EACM,MAAA,WAAWjd,EAAMC,EAAMX,CAAI,EAC3B,MAAA,EAAG,iBAAiBU,EAAMC,CAAI,CAAA,CACrC,CAAC,CACJ,CAIA,SAAS,qBAAqBD,EAAcC,EAAc,CACrD,GAAA,cAAc,EAAE,YAAc,iBAC3B,MAAA/K,EAAO,GAAG,aAAa,EACxBA,EAAA,UAAY,OAAO8K,EAAMC,CAAI,EAE5B,MAAA4c,EAAW,MAAM,mBAAmB,EACpCC,EAAW,MAAM,cAAc,EAC/BI,EAAW,SAAS,UAAU,EAEpChoB,EAAK,OAAO2nB,EAAUC,EAAUI,EAAI,OAAO,SAAY,CACrD,MAAM5d,EAAuB,CAC3B,KAAM,aACN,MAAOud,EAAS,MAAM,KAAK,EAC3B,MAAOC,EAAS,MAAM,KAAK,EAC3B,QAASI,EAAG,MAAM,KAAK,CACzB,EACM,MAAA,WAAWld,EAAMC,EAAMX,CAAI,EAC3B,MAAA,EAAG,oBAAoBU,EAAMC,CAAI,CAAA,CACxC,CAAC,CACJ,CAIA,SAAS,qBAAqBD,EAAcC,EAAc,CACrD,GAAA,cAAc,EAAE,YAAc,iBAC3B,MAAA/K,EAAO,GAAG,aAAa,EACxBA,EAAA,UAAY,OAAO8K,EAAMC,CAAI,EAE5B,MAAA4c,EAAW,MAAM,mBAAmB,EACpCC,EAAW,MAAM,cAAc,EAC/BI,EAAW,SAAS,aAAa,EAEvChoB,EAAK,OAAO2nB,EAAUC,EAAUI,EAAI,OAAO,SAAY,CACrD,MAAM5d,EAAuB,CAC3B,KAAM,aACN,MAAOud,EAAS,MAAM,KAAK,EAC3B,MAAOC,EAAS,MAAM,KAAK,EAC3B,QAASI,EAAG,MAAM,KAAK,CACzB,EACM,MAAA,WAAWld,EAAMC,EAAMX,CAAI,EAC3B,MAAA,EAAG,oBAAoBU,EAAMC,CAAI,CAAA,CACxC,CAAC,CACJ,CAIA,MAAM,SACJ,iIAEI,MAAYkd,GAAe,OAAO,OAAO,SAAS,cAAc,OAAO,EAAM,CAAE,UAAW,SAAU,YAAaA,EAAI,EACrH,SAAYA,GAAe,OAAO,OAAO,SAAS,cAAc,UAAU,EAAG,CAAE,UAAW,SAAU,KAAM,EAAG,YAAaA,EAAI,EAC9H,IAAW,CAACC,EAAM,KAAO,OAAO,OAAO,SAAS,cAAc,KAAK,EAAG,CAAE,UAAWA,EAAK,EACxF,OAAW,CAAC3X,EAAa2X,EAAa7Y,IAC1C,OAAO,OAAO,SAAS,cAAc,QAAQ,EAAG,CAC9C,KAAM,SAAU,YAAakB,EAC7B,UAAW,sCAAsC2X,CAAG,GACpD,QAAS7Y,CACX,CAAC,EAEG,OAAS,CAACxW,EAAWsE,IACzB,wCAAwCtE,CAAC,+BAA+BsE,CAAC,gBAErE,OAAUgrB,GAAqB,CAC7B,MAAAb,EAAO,IAAI,iCAAiC,EAC7C,OAAAA,EAAA,OACH,OAAO,SAAU,cAAe,KAAK,EACrC,OAAO,OAAU,0BAA2Ba,CAAI,CAClD,EACOb,CACT,EAEA,SAAS,YAAa,CACd,MAAAA,EAAO,IAAI,0DAA0D,EACrEc,EAAO,MAAM,aAAa,EAC1BC,EAAO,MAAM,cAAc,EAE3BvY,EAAM,IAAI,gBAAgB,EAChC,OAAAA,EAAI,YAAY,OAAO,cAAe,0BACpC,IAAMA,EAAI,YAAY,MAAM,YAAY,CAAC,CAAA,CAC1C,EAEIwX,EAAA,OAAOc,EAAKC,EAAKvY,CAAG,EAClBwX,CACT,CACA,SAAS,WAAWxC,EAAa,CAC/B,KAAM,CAACvU,EAAK8X,CAAG,EAAIvD,EAAG,iBAAmC,SAAS,EAC5DwD,EAAO,MAAM,KAAKxD,EAAG,iBAAmC,aAAa,CAAC,EACzD,IAAIvK,GAAKA,EAAE,MAAM,KAAA,CAAM,EAAE,OAAO,OAAO,EAC1D,MAAO,CAAE,KAAMhK,EAAI,MAAM,KAAK,EAAG,MAAO8X,EAAI,MAAM,OAAQ,UAAWC,CAAK,CAC5E,CChJA,IAAI,OAAgC,KAEpB,SAAA,MAAMC,EAAaC,EAAK,KAAM,CACvC,SACH,OAAS,OAAO,OAAO,SAAS,cAAc,KAAK,EAAG,CACpD,UACE,4DAAA,CACH,EACQ,SAAA,KAAK,YAAY,MAAM,GAG5B,MAAAC,EAAM,SAAS,cAAc,KAAK,EACxCA,EAAI,YAAcF,EAClBE,EAAI,UACF,wEACF,OAAO,YAAYA,CAAG,EAEtB,WAAW,IAAMA,EAAI,OAAO,EAAGD,CAAE,CACnC,CCdA,MAAM,UAAY,IAAI,OACpB,yDACA,CAAE,KAAM,QAAS,CACnB,EAMA,SAAS,IAAIE,EAAoD,CAC/D,OAAO,IAAI,QAAQ,CAAC9qB,EAAK+qB,IAAQ,CAC/B,UAAU,UAAapa,GACrBA,EAAE,KAAK,GAAK3Q,EAAI2Q,EAAE,KAAK,MAAM,EAAIoa,EAAI,IAAI,MAAM,YAAY,CAAC,EAC9D,UAAU,YAAY,CAAE,IAAK,MAAO,MAAAD,EAAO,CAAA,CAC5C,CACH,CAEA,SAAS,MAAMlf,EAAkD,CAC/D,OAAO,IAAI,QAAQ,CAAC5L,EAAK+qB,IAAQ,CAC/B,UAAU,UAAapa,GACrBA,EAAE,KAAK,GAAK3Q,EAAI2Q,EAAE,KAAK,KAAK,EAAIoa,EAAI,IAAI,MAAM,cAAc,CAAC,EAC/D,UAAU,YAAY,CAAE,IAAK,QAAS,OAAQnf,EAAK,CAAA,CACpD,CACH,CAGO,SAAS,yBAA0B,CAClC,MAAAof,EAAS,SAAS,eAAe,YAAY,EAC7CC,EAAS,SAAS,eAAe,YAAY,EAC/C,GAAA,CAACD,GAAU,CAACC,EAAQ,OAGxB,MAAMC,EAAU,OAAO,OAAO,SAAS,cAAc,OAAO,EAAG,CAC7D,KAAM,OACN,OAAQ,OACR,UAAW,QAAA,CACZ,EACQ,SAAA,KAAK,YAAYA,CAAO,EAG1BD,EAAA,iBAAiB,QAAS,SAAY,CACvC,GAAA,CACF,MAAM,eAAe,EACf,MAAAH,EAAQ,MAAM,gBAAgB,EAC9Blf,EAAQ,MAAM,IAAIkf,CAAK,EACvBK,EAAQ,IAAI,KAAK,CAACvf,CAAG,EAAG,CAAE,KAAM,kBAAmB,EACnD0F,EAAQ,IAAI,gBAAgB6Z,CAAI,EACtC,OAAO,OAAO,SAAS,cAAc,GAAG,EAAG,CACzC,KAAM7Z,EACN,SAAU,qBACX,CAAA,EAAE,MAAM,EACT,IAAI,gBAAgBA,CAAG,EACvB,MAAM,kBAAkB,QACjB9W,EAAK,CACZ,QAAQ,MAAMA,CAAG,EACjB,MAAM,iBAAiB,CAAA,CACzB,CACD,EAGDwwB,EAAO,iBAAiB,QAAS,IAAME,EAAQ,OAAO,EAC9CA,EAAA,iBAAiB,SAAU,SAAY,OACvC,MAAA1vB,GAAO+V,EAAA2Z,EAAQ,QAAR,YAAA3Z,EAAgB,GAC7B,GAAK/V,EAED,GAAA,CACF,MAAM,YAAY,EACZ,MAAAsvB,EAAQ,MAAM,MAAM,IAAI,WAAW,MAAMtvB,EAAK,YAAY,CAAC,CAAC,EAClE,IAAIqB,EAAU,EACd,SAAW,CAACuuB,EAAM7e,CAAE,IAAK,OAAO,QAAQue,CAAK,EAAG,CACxC,MAAAte,EAAO,UAAUD,CAAE,EACpBC,IACL,MAAM,UAAU,CAAE,KAAM4e,CAAA,EAAe5e,CAAI,EAC3C3P,IAAA,CAEI,MAAA,cAAcA,CAAK,QAAQ,QAC1BrC,EAAK,CACZ,QAAQ,MAAMA,CAAG,EACjB,MAAM,iBAAiB,CAAA,QACvB,CACA0wB,EAAQ,MAAQ,EAAA,CAClB,CACD,CACH,CAGA,eAAe,iBAAkB,CAC/B,MAAMG,EAAY,OAAe,SAC3Bhe,EAA8B,CAAC,EAErC,SAAW,CAACH,EAAMoe,CAAK,IAAK,OAAO,QAAQD,CAAQ,EACjD,QAAS9rB,EAAI,EAAGA,GAAK+rB,EAAO/rB,IAAK,CACzB,MAAA4N,EAAO5N,EAAE,SAAS,EACxB,UAAW2Q,KAAK,MAAM,UAAUhD,EAAMC,CAAI,EAAG,CACrC,MAAAoF,EAAS,MAAM,SAASrC,CAAC,EACzB0Y,EAAS,UAAUrW,GAAO,EAAE,EAClC,GAAI,CAACqW,EAAQ,SACb,MAAM1tB,EAAS,GAAGgS,CAAI,IAAIC,CAAI,IAAI+C,EAAE,IAAI,GACpC7C,EAAAnS,CAAG,EAAQ,cAAc0tB,CAAiB,CAAA,CAChD,CAGG,OAAAvb,CACT,CCjGA,IAAI,SAAmC,CAAC,GACvC,SAAY,CAEC,SAAA,MADA,MAAM,MAAM,qBAAqB,GACvB,KAAK,EAC1B,OAAe,SAAW,SAGb,cAAA,OAAO,KAAK,QAAQ,CAAC,EAGvB,YAAA,EACE,cAAA,EACD,aAAA,EACG,gBAAA,EACQ,wBAAA,EAGxB,KAAM,CAACke,CAAS,EAAI,OAAO,KAAK,QAAQ,EAClC,MAAA,IAAI,OAAQA,CAAS,EACrB,MAAA,IAAI,UAAW,GAAG,EACxB,qBAAqBA,EAAW,GAAG,CACrC,GAAG","x_google_ignoreList":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124]}